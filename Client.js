// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    window['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?\{ ?[^}]* ?\}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    var source = Pointer_stringify(code);
    if (source[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (source.indexOf('"', 1) === source.length-1) {
        source = source.substr(1, source.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + source + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    try {
      var evalled = eval('(function(' + args.join(',') + '){ ' + source + ' })'); // new Function does not allow upvars in node
    } catch(e) {
      Module.printErr('error in executing inline EM_ASM code: ' + e + ' on: \n\n' + source + '\n\nwith args |' + args + '| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)');
      throw e;
    }
    return Runtime.asmConstCache[code] = evalled;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      /* TODO: use TextEncoder when present,
        var encoder = new TextEncoder();
        encoder['encoding'] = "utf-8";
        var utf8Array = encoder['encode'](aMsg.data);
      */
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;









//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===
var __ZTVN10__cxxabiv117__class_type_infoE = 21152;
var __ZTVN10__cxxabiv120__si_class_type_infoE = 21192;




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + Runtime.alignMemory(22019);
/* global initializers */ __ATINIT__.push({ func: function() { __GLOBAL__I_a() } }, { func: function() { __GLOBAL__I_a143() } }, { func: function() { __GLOBAL__I_a181() } }, { func: function() { __GLOBAL__I_a219() } }, { func: function() { __GLOBAL__I_a284() } }, { func: function() { __GLOBAL__I_a394() } }, { func: function() { __GLOBAL__I_a25() } }, { func: function() { __GLOBAL__I_a471() } }, { func: function() { __GLOBAL__I_a651() } });


/* memory initializer */ allocate([71,97,109,101,32,58,58,32,71,97,109,101,0,0,0,0,0,0,0,0,176,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,70,105,115,104,48,55,0,0,67,97,116,65,114,109,115,66,97,99,107,0,0,0,0,0,67,97,116,84,97,105,108,0,67,97,116,66,111,100,121,0,67,97,116,65,114,109,115,67,97,115,116,0,0,0,0,0,67,97,116,65,114,109,115,0,54,71,117,105,67,97,116,0,208,82,0,0,168,0,0,0,176,28,0,0,0,0,0,0,0,0,0,0,0,2,0,0,3,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,46,46,47,67,108,105,101,110,116,47,71,117,105,47,71,117,105,70,105,115,104,46,99,112,112,0,0,0,0,0,0,0,80,79,87,50,95,65,83,83,69,82,84,32,37,115,32,37,100,10,0,0,0,0,0,0,41,58,32,101,114,114,111,114,32,65,115,115,101,114,116,32,70,97,105,108,117,114,101,58,32,39,0,0,0,0,0,0,87,97,116,101,114,68,101,112,116,104,0,0,0,0,0,0,37,48,50,100,0,0,0,0,86,97,108,117,101,0,0,0,83,112,101,101,100,0,0,0,72,111,111,107,80,117,108,115,101,82,97,116,101,0,0,0,72,111,111,107,80,117,108,115,101,83,116,114,101,110,103,116,104,0,0,0,0,0,0,0,80,105,99,107,121,110,101,115,115,0,0,0,0,0,0,0,109,95,112,83,112,114,105,116,101,0,0,0,0,0,0,0,70,105,115,104,69,120,99,108,97,109,97,116,105,111,110,0,55,71,117,105,70,105,115,104,0,0,0,0,0,0,0,0,208,82,0,0,240,1,0,0,176,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,2,0,0,5,0,0,0,6,0,0,0,3,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,47,82,101,115,111,117,114,99,101,47,99,111,110,102,105,103,0,0,0,0,0,0,0,0,47,82,101,115,111,117,114,99,101,47,115,104,101,101,116,0,47,82,101,115,111,117,114,99,101,47,70,111,110,116,47,80,108,97,121,116,105,109,101,87,105,116,104,72,111,116,84,111,100,100,105,101,115,47,112,108,97,121,116,105,109,101,46,116,116,102,0,0,0,0,0,0,55,71,117,105,71,97,109,101,0,0,0,0,0,0,0,0,208,82,0,0,224,2,0,0,176,28,0,0,0,0,0,0,0,0,0,0,176,3,0,0,7,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,72,111,111,107,68,97,109,112,101,110,105,110,103,0,0,0,72,111,111,107,68,101,108,116,97,88,77,117,108,116,105,112,108,105,101,114,0,0,0,0,72,111,111,107,68,101,108,116,97,89,77,117,108,116,105,112,108,105,101,114,0,0,0,0,87,97,116,101,114,68,101,112,116,104,0,0,0,0,0,0,55,71,117,105,72,111,111,107,0,0,0,0,0,0,0,0,208,82,0,0,160,3,0,0,176,28,0,0,0,0,0,0,0,0,0,0,80,5,0,0,9,0,0,0,10,0,0,0,5,0,0,0,5,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,85,112,103,114,97,100,101,115,83,105,103,110,0,0,0,0,84,104,101,32,76,105,116,116,108,101,32,70,105,115,104,98,111,110,101,0,0,0,0,0,85,112,103,114,97,100,101,32,83,104,111,112,0,0,0,0,67,108,111,115,101,0,0,0,103,117,105,95,98,117,116,116,111,110,0,0,0,0,0,0,82,111,100,0,0,0,0,0,37,48,50,100,0,0,0,0,80,111,119,101,114,0,0,0,85,112,103,114,97,100,101,32,82,111,100,32,0,0,0,0,37,117,0,0,0,0,0,0,47,0,0,0,0,0,0,0,32,36,0,0,0,0,0,0,80,114,105,99,101,76,101,118,101,108,0,0,0,0,0,0,37,100,0,0,0,0,0,0,67,97,115,116,32,100,101,101,112,101,114,32,105,110,116,111,32,116,104,101,32,119,97,116,101,114,33,0,0,0,0,0,85,112,103,114,97,100,101,32,76,117,114,101,32,0,0,0,65,116,116,114,97,99,116,32,98,105,103,103,101,114,32,102,105,115,104,46,0,0,0,0,85,112,103,114,97,100,101,32,82,101,101,108,32,0,0,0,82,101,101,108,32,105,110,32,115,116,114,111,110,103,101,114,32,102,105,115,104,0,0,0,86,97,108,117,101,0,0,0,67,108,111,115,101,80,114,101,115,115,0,0,0,0,0,0,49,48,71,117,105,85,112,103,114,97,100,101,0,0,0,0,208,82,0,0,64,5,0,0,176,28,0,0,0,0,0,0,0,0,0,0,152,6,0,0,11,0,0,0,12,0,0,0,6,0,0,0,6,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,85,112,103,114,97,100,101,115,83,105,103,110,0,0,0,0,67,79,78,71,82,65,84,85,76,65,84,73,79,78,83,33,0,0,0,0,0,0,0,0,107,116,104,120,98,97,105,33,32,40,75,101,101,112,32,102,105,115,104,105,110,39,41,0,89,111,117,32,117,110,99,111,118,101,114,101,100,32,116,104,101,32,116,114,101,97,115,117,114,101,0,0,0,0,0,0,97,110,100,32,108,105,118,101,32,104,97,112,112,105,108,121,32,101,118,101,114,32,97,102,116,101,114,0,0,0,0,0,97,115,32,113,117,105,116,101,32,112,111,115,115,105,98,108,121,32,116,104,101,0,0,0,114,105,99,104,101,115,116,32,102,105,115,104,101,114,109,97,110,32,107,105,116,116,121,0,105,110,32,116,104,101,32,119,111,114,108,100,33,32,83,117,99,99,101,115,115,33,0,0,67,108,111,115,101,0,0,0,67,108,111,115,101,80,114,101,115,115,0,0,0,0,0,0,54,71,117,105,87,105,110,0,208,82,0,0,144,6,0,0,176,28,0,0,0,0,0,0,0,0,0,0,40,8,0,0,13,0,0,0,14,0,0,0,7,0,0,0,7,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,67,97,109,101,114,97,83,112,101,101,100,77,117,108,116,105,112,108,105,101,114,0,0,0,67,97,109,101,114,97,77,105,110,89,0,0,0,0,0,0,87,97,116,101,114,68,101,112,116,104,0,0,0,0,0,0,37,48,50,100,0,0,0,0,68,101,110,115,105,116,121,0,83,104,111,112,66,116,110,0,112,83,112,114,105,116,101,0,46,46,47,67,108,105,101,110,116,47,71,117,105,47,71,117,105,87,111,114,108,100,46,99,112,112,0,0,0,0,0,0,80,79,87,50,95,65,83,83,69,82,84,32,37,115,32,37,100,10,0,0,0,0,0,0,41,58,32,101,114,114,111,114,32,65,115,115,101,114,116,32,70,97,105,108,117,114,101,58,32,39,0,0,0,0,0,0,67,97,115,116,32,83,116,114,101,110,103,116,104,58,32,37,102,10,0,0,0,0,0,0,87,97,116,101,114,0,0,0,70,108,111,111,114,48,50,0,66,117,98,98,108,101,115,0,83,107,121,0,0,0,0,0,67,108,111,117,100,48,49,0,67,108,111,117,100,48,50,0,70,108,111,111,114,48,49,0,67,111,117,110,116,101,114,0,37,100,0,0,0,0,0,0,82,111,100,0,0,0,0,0,80,111,119,101,114,0,0,0,56,71,117,105,87,111,114,108,100,0,0,0,0,0,0,0,208,82,0,0,24,8,0,0,176,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,95,112,67,111,110,102,105,103,70,105,108,101,86,101,99,116,111,114,46,115,105,122,101,40,41,32,61,61,32,48,0,46,46,47,67,108,105,101,110,116,47,83,121,115,116,101,109,47,67,111,110,102,105,103,77,97,110,97,103,101,114,46,99,112,112,0,0,0,0,0,0,80,79,87,50,95,65,83,83,69,82,84,32,37,115,32,37,100,10,0,0,0,0,0,0,41,58,32,101,114,114,111,114,32,65,115,115,101,114,116,32,70,97,105,108,117,114,101,58,32,39,0,0,0,0,0,0,109,95,112,67,111,110,102,105,103,77,97,112,46,115,105,122,101,40,41,32,61,61,32,48,0,0,0,0,0,0,0,0,46,120,109,108,0,0,0,0,112,84,101,109,112,0,0,0,110,70,105,108,101,83,105,122,101,32,62,32,48,0,0,0,110,97,109,101,0,0,0,0,118,97,108,117,101,0,0,0,102,97,108,115,101,0,0,0,67,111,110,102,105,103,32,109,105,115,115,105,110,103,58,32,37,115,10,0,0,0,0,0,105,116,32,33,61,32,109,95,112,67,111,110,102,105,103,77,97,112,46,101,110,100,40,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,120,112,101,99,116,101,100,32,60,0,0,0,0,0,0,78,56,114,97,112,105,100,120,109,108,49,49,112,97,114,115,101,95,101,114,114,111,114,69,0,0,0,0,0,0,0,0,208,82,0,0,128,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,9,0,0,15,0,0,0,16,0,0,0,2,0,0,0,0,0,0,0,117,110,101,120,112,101,99,116,101,100,32,101,110,100,32,111,102,32,100,97,116,97,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,120,112,101,99,116,101,100,32,101,108,101,109,101,110,116,32,110,97,109,101,0,0,0,101,120,112,101,99,116,101,100,32,62,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,10,11,12,13,14,15,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,101,120,112,101,99,116,101,100,32,59,0,0,0,0,0,0,105,110,118,97,108,105,100,32,110,117,109,101,114,105,99,32,99,104,97,114,97,99,116,101,114,32,101,110,116,105,116,121,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,101,120,112,101,99,116,101,100,32,97,116,116,114,105,98,117,116,101,32,110,97,109,101,0,101,120,112,101,99,116,101,100,32,61,0,0,0,0,0,0,101,120,112,101,99,116,101,100,32,39,32,111,114,32,34,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,5,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,110,68,116,58,32,37,102,10,0,0,0,0,0,0,0,0,57,79,115,87,114,97,112,112,101,114,0,0,0,0,0,0,168,82,0,0,240,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,110,82,101,115,117,108,116,0,46,46,47,67,108,105,101,110,116,47,83,121,115,116,101,109,47,69,109,115,99,114,105,112,116,101,110,47,69,109,115,99,114,105,112,116,101,110,77,97,105,110,46,99,112,112,0,0,80,79,87,50,95,65,83,83,69,82,84,32,37,115,32,37,100,10,0,0,0,0,0,0,41,58,32,101,114,114,111,114,32,65,115,115,101,114,116,32,70,97,105,108,117,114,101,58,32,39,0,0,0,0,0,0,0,0,0,0,240,18,0,0,5,0,0,0,3,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,46,46,47,46,46,47,46,46,47,68,111,99,117,109,101,110,116,47,0,0,0,0,0,0,46,46,47,46,46,47,46,46,47,67,97,99,104,101,47,0,49,55,69,109,115,99,114,105,112,116,101,110,87,114,97,112,112,101,114,0,0,0,0,0,208,82,0,0,216,18,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,95,112,70,111,110,116,86,101,99,116,111,114,46,115,105,122,101,40,41,32,61,61,32,48,0,0,0,0,0,0,0,46,46,47,67,108,105,101,110,116,47,83,121,115,116,101,109,47,86,105,100,101,111,47,70,111,110,116,77,97,110,97,103,101,114,46,99,112,112,0,0,80,79,87,50,95,65,83,83,69,82,84,32,37,115,32,37,100,10,0,0,0,0,0,0,41,58,32,101,114,114,111,114,32,65,115,115,101,114,116,32,70,97,105,108,117,114,101,58,32,39,0,0,0,0,0,0,112,73,110,116,101,114,110,97,108,70,111,110,116,0,0,0,102,97,108,115,101,0,0,0,70,111,110,116,76,111,97,100,101,100,40,112,70,111,110,116,41,0,0,0,0,0,0,0,112,67,97,99,104,101,100,83,116,114,105,110,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,95,112,83,112,114,105,116,101,83,104,101,101,116,86,101,99,116,111,114,46,115,105,122,101,40,41,32,61,61,32,48,0,0,0,0,0,0,0,0,46,46,47,67,108,105,101,110,116,47,83,121,115,116,101,109,47,86,105,100,101,111,47,83,112,114,105,116,101,77,97,110,97,103,101,114,46,99,112,112,0,0,0,0,0,0,0,0,80,79,87,50,95,65,83,83,69,82,84,32,37,115,32,37,100,10,0,0,0,0,0,0,41,58,32,101,114,114,111,114,32,65,115,115,101,114,116,32,70,97,105,108,117,114,101,58,32,39,0,0,0,0,0,0,109,95,112,83,112,114,105,116,101,77,97,112,46,115,105,122,101,40,41,32,61,61,32,48,0,0,0,0,0,0,0,0,46,116,120,116,0,0,0,0,46,112,110,103,0,0,0,0,112,84,101,109,112,0,0,0,37,100,9,37,100,0,0,0,37,115,9,37,100,9,37,100,9,37,100,9,37,100,9,37,100,9,37,100,9,37,100,9,37,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,105,116,32,33,61,32,109,95,112,83,112,114,105,116,101,77,97,112,46,101,110,100,40,41,0,0,0,0,0,0,0,0,112,83,112,114,105,116,101,0,109,95,110,84,101,120,116,117,114,101,73,100,32,62,32,48,0,0,0,0,0,0,0,0,46,46,47,67,108,105,101,110,116,47,83,121,115,116,101,109,47,86,105,100,101,111,47,84,101,120,116,117,114,101,46,99,112,112,0,0,0,0,0,0,80,79,87,50,95,65,83,83,69,82,84,32,37,115,32,37,100,10,0,0,0,0,0,0,41,58,32,101,114,114,111,114,32,65,115,115,101,114,116,32,70,97,105,108,117,114,101,58,32,39,0,0,0,0,0,0,112,110,103,0,0,0,0,0,112,84,104,105,115,45,62,109,95,110,84,101,120,116,117,114,101,73,100,32,62,32,48,0,84,69,88,84,85,82,69,32,76,79,65,68,32,69,82,82,79,82,32,50,0,0,0,0,84,69,88,84,85,82,69,32,76,79,65,68,32,69,82,82,79,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,118,101,114,115,105,111,110,32,49,48,48,10,112,114,101,99,105,115,105,111,110,32,109,101,100,105,117,109,112,32,102,108,111,97,116,59,10,97,116,116,114,105,98,117,116,101,32,118,101,99,51,32,118,101,114,116,101,120,80,111,115,105,116,105,111,110,95,109,111,100,101,108,115,112,97,99,101,59,10,97,116,116,114,105,98,117,116,101,32,118,101,99,50,32,118,101,114,116,101,120,85,86,59,10,118,97,114,121,105,110,103,32,118,101,99,50,32,85,86,59,10,117,110,105,102,111,114,109,32,109,97,116,52,32,77,86,80,59,10,118,111,105,100,32,109,97,105,110,40,41,10,123,10,9,103,108,95,80,111,115,105,116,105,111,110,32,61,32,32,77,86,80,32,42,32,118,101,99,52,40,118,101,114,116,101,120,80,111,115,105,116,105,111,110,95,109,111,100,101,108,115,112,97,99,101,44,49,41,59,10,9,85,86,32,61,32,118,101,114,116,101,120,85,86,59,10,125,0,0,0,0,35,118,101,114,115,105,111,110,32,49,48,48,10,112,114,101,99,105,115,105,111,110,32,109,101,100,105,117,109,112,32,102,108,111,97,116,59,10,118,97,114,121,105,110,103,32,32,118,101,99,50,32,85,86,59,10,117,110,105,102,111,114,109,32,115,97,109,112,108,101,114,50,68,32,109,121,84,101,120,116,117,114,101,83,97,109,112,108,101,114,59,10,118,111,105,100,32,109,97,105,110,40,41,10,123,10,9,103,108,95,70,114,97,103,67,111,108,111,114,32,61,32,116,101,120,116,117,114,101,50,68,40,32,109,121,84,101,120,116,117,114,101,83,97,109,112,108,101,114,44,32,85,86,32,41,59,10,125,0,0,35,118,101,114,115,105,111,110,32,49,48,48,10,112,114,101,99,105,115,105,111,110,32,109,101,100,105,117,109,112,32,102,108,111,97,116,59,10,117,110,105,102,111,114,109,32,118,101,99,52,32,120,67,111,108,111,117,114,59,10,118,111,105,100,32,109,97,105,110,40,41,10,123,10,9,103,108,95,70,114,97,103,67,111,108,111,114,32,61,32,120,67,111,108,111,117,114,59,10,125,0,0,0,0,35,118,101,114,115,105,111,110,32,49,48,48,10,112,114,101,99,105,115,105,111,110,32,109,101,100,105,117,109,112,32,102,108,111,97,116,59,10,118,97,114,121,105,110,103,32,32,118,101,99,50,32,85,86,59,10,117,110,105,102,111,114,109,32,115,97,109,112,108,101,114,50,68,32,109,121,84,101,120,116,117,114,101,83,97,109,112,108,101,114,59,10,117,110,105,102,111,114,109,32,118,101,99,51,32,120,67,111,108,111,117,114,59,10,118,111,105,100,32,109,97,105,110,40,41,10,123,10,9,103,108,95,70,114,97,103,67,111,108,111,114,46,114,103,98,32,61,32,120,67,111,108,111,117,114,46,114,103,98,59,10,9,103,108,95,70,114,97,103,67,111,108,111,114,46,97,32,61,32,116,101,120,116,117,114,101,50,68,40,109,121,84,101,120,116,117,114,101,83,97,109,112,108,101,114,44,32,85,86,41,46,97,59,10,125,0,77,86,80,0,0,0,0,0,109,121,84,101,120,116,117,114,101,83,97,109,112,108,101,114,0,0,0,0,0,0,0,0,120,67,111,108,111,117,114,0,109,95,112,77,101,115,104,86,101,99,116,111,114,46,115,105,122,101,40,41,32,61,61,32,48,0,0,0,0,0,0,0,46,46,47,67,108,105,101,110,116,47,83,121,115,116,101,109,47,86,105,100,101,111,47,86,105,100,101,111,46,99,112,112,0,0,0,0,0,0,0,0,80,79,87,50,95,65,83,83,69,82,84,32,37,115,32,37,100,10,0,0,0,0,0,0,41,58,32,101,114,114,111,114,32,65,115,115,101,114,116,32,70,97,105,108,117,114,101,58,32,39,0,0,0,0,0,0,83,104,97,100,101,114,32,99,111,109,112,105,108,97,116,105,111,110,32,102,97,105,108,101,100,32,119,105,116,104,32,116,104,105,115,32,109,101,115,115,97,103,101,58,0,0,0,0,102,97,108,115,101,0,0,0,0,0,1,0,2,0,2,0,1,0,3,0,0,0,0,0,0,0,0,0,216,26,0,0,17,0,0,0,18,0,0,0,8,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,9,0,0,0,112,83,112,114,105,116,101,0,46,46,47,67,108,105,101,110,116,47,83,121,115,116,101,109,47,86,105,100,101,111,47,71,117,105,47,71,117,105,73,109,97,103,101,46,99,112,112,0,80,79,87,50,95,65,83,83,69,82,84,32,37,115,32,37,100,10,0,0,0,0,0,0,41,58,32,101,114,114,111,114,32,65,115,115,101,114,116,32,70,97,105,108,117,114,101,58,32,39,0,0,0,0,0,0,56,71,117,105,73,109,97,103,101,0,0,0,0,0,0,0,208,82,0,0,200,26,0,0,176,28,0,0,0,0,0,0,0,0,0,0,208,27,0,0,19,0,0,0,20,0,0,0,8,0,0,0,9,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,112,70,111,110,116,0,0,0,46,46,47,67,108,105,101,110,116,47,83,121,115,116,101,109,47,86,105,100,101,111,47,71,117,105,47,71,117,105,76,97,98,101,108,46,99,112,112,0,80,79,87,50,95,65,83,83,69,82,84,32,37,115,32,37,100,10,0,0,0,0,0,0,41,58,32,101,114,114,111,114,32,65,115,115,101,114,116,32,70,97,105,108,117,114,101,58,32,39,0,0,0,0,0,0,70,111,110,116,77,97,110,97,103,101,114,58,58,70,111,110,116,76,111,97,100,101,100,40,112,70,111,110,116,41,0,0,56,71,117,105,76,97,98,101,108,0,0,0,0,0,0,0,208,82,0,0,192,27,0,0,176,28,0,0,0,0,0,0,0,0,0,0,176,28,0,0,21,0,0,0,22,0,0,0,8,0,0,0,10,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,46,46,47,67,108,105,101,110,116,47,83,121,115,116,101,109,47,86,105,100,101,111,47,71,117,105,47,71,117,105,79,98,106,101,99,116,46,99,112,112,0,0,0,0,0,0,0,0,80,79,87,50,95,65,83,83,69,82,84,32,37,115,32,37,100,10,0,0,0,0,0,0,41,58,32,101,114,114,111,114,32,65,115,115,101,114,116,32,70,97,105,108,117,114,101,58,32,39,0,0,0,0,0,0,57,71,117,105,79,98,106,101,99,116,0,0,0,0,0,0,168,82,0,0,160,28,0,0,0,0,0,0,208,28,0,0,23,0,0,0,24,0,0,0,52,66,108,111,98,0,0,0,168,82,0,0,200,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,95,70,105,108,101,86,101,99,116,111,114,46,115,105,122,101,40,41,32,61,61,32,48,0,0,0,0,0,0,0,0,46,46,47,83,121,115,116,101,109,47,70,105,108,101,77,97,110,97,103,101,114,46,99,112,112,0,0,0,0,0,0,0,80,79,87,50,95,65,83,83,69,82,84,32,37,115,32,37,100,10,0,0,0,0,0,0,41,58,32,101,114,114,111,114,32,65,115,115,101,114,116,32,70,97,105,108,117,114,101,58,32,39,0,0,0,0,0,0,112,70,105,108,101,0,0,0,68,111,119,110,108,111,97,100,32,66,101,103,105,110,58,32,37,115,10,0,0,0,0,0,104,116,116,112,58,47,47,114,111,98,111,116,45,112,97,110,116,115,0,0,0,0,0,0,70,73,76,69,32,76,79,65,68,32,69,82,82,79,82,33,32,37,115,10,0,0,0,0,60,0,0,0,0,0,0,0,48,30,0,0,25,0,0,0,26,0,0,0,196,255,255,255,196,255,255,255,48,30,0,0,27,0,0,0,28,0,0,0,78,83,116,51,95,95,49,49,57,98,97,115,105,99,95,105,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,208,82,0,0,232,29,0,0,40,43,0,0,0,0,0,0,60,0,0,0,0,0,0,0,40,43,0,0,29,0,0,0,30,0,0,0,196,255,255,255,196,255,255,255,40,43,0,0,31,0,0,0,32,0,0,0,0,0,0,0,240,30,0,0,33,0,0,0,34,0,0,0,10,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,7,0,0,0,1,0,0,0,3,0,0,0,2,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,208,82,0,0,168,30,0,0,176,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,192,31,0,0,35,0,0,0,36,0,0,0,56,0,0,0,248,255,255,255,192,31,0,0,37,0,0,0,38,0,0,0,192,255,255,255,192,255,255,255,192,31,0,0,39,0,0,0,40,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,208,82,0,0,120,31,0,0,72,44,0,0,0,0,0,0,64,0,0,0,0,0,0,0,40,43,0,0,29,0,0,0,30,0,0,0,192,255,255,255,192,255,255,255,40,43,0,0,31,0,0,0,32,0,0,0,99,109,97,112,0,0,0,0,108,111,99,97,0,0,0,0,104,101,97,100,0,0,0,0,103,108,121,102,0,0,0,0,104,104,101,97,0,0,0,0,104,109,116,120,0,0,0,0,107,101,114,110,0,0,0,0,109,97,120,112], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([192,36,0,0,41,0,0,0,42,0,0,0,11,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,8,0,0,0,9,0,0,0,5,0,0,0,10,0,0,0,11,0,0,0,3,0,0,0,6,0,0,0,4,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,208,82,0,0,160,36,0,0,240,42,0,0,0,0,0,0,0,0,0,0,40,37,0,0,43,0,0,0,44,0,0,0,12,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,12,0,0,0,9,0,0,0,5,0,0,0,13,0,0,0,14,0,0,0,5,0,0,0,7,0,0,0,6,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,208,82,0,0,16,37,0,0,240,42,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,0,0,0,0,192,37,0,0,45,0,0,0,46,0,0,0,13,0,0,0,1,0,0,0,3,0,0,0,3,0,0,0,15,0,0,0,5,0,0,0,2,0,0,0,16,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,208,82,0,0,160,37,0,0,176,42,0,0,0,0,0,0,0,0,0,0,40,38,0,0,47,0,0,0,48,0,0,0,14,0,0,0,1,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,2,0,0,0,17,0,0,0,18,0,0,0,9,0,0,0,3,0,0,0,10,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,208,82,0,0,16,38,0,0,176,42,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,168,82,0,0,56,38,0,0,0,0,0,0,160,38,0,0,49,0,0,0,50,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,8,39,0,0,51,0,0,0,52,0,0,0,20,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,208,82,0,0,144,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,38,0,0,49,0,0,0,53,0,0,0,19,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,208,82,0,0,200,38,0,0,160,38,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,208,82,0,0,240,38,0,0,0,0,0,0,0,0,0,0,58,32,0,0,0,0,0,0,0,0,0,0,80,39,0,0,54,0,0,0,55,0,0,0,20,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,208,82,0,0,56,39,0,0,8,39,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,168,82,0,0,96,39,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,208,82,0,0,136,39,0,0,128,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,0,0,0,0,176,42,0,0,56,0,0,0,57,0,0,0,10,0,0,0,1,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,2,0,0,0,16,0,0,0,7,0,0,0,7,0,0,0,3,0,0,0,10,0,0,0,0,0,0,0,240,42,0,0,58,0,0,0,59,0,0,0,15,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,12,0,0,0,9,0,0,0,5,0,0,0,10,0,0,0,11,0,0,0,3,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,0,0,0,0,40,43,0,0,29,0,0,0,30,0,0,0,248,255,255,255,248,255,255,255,40,43,0,0,31,0,0,0,32,0,0,0,8,0,0,0,0,0,0,0,112,43,0,0,60,0,0,0,61,0,0,0,248,255,255,255,248,255,255,255,112,43,0,0,62,0,0,0,63,0,0,0,4,0,0,0,0,0,0,0,184,43,0,0,64,0,0,0,65,0,0,0,252,255,255,255,252,255,255,255,184,43,0,0,66,0,0,0,67,0,0,0,4,0,0,0,0,0,0,0,0,44,0,0,68,0,0,0,69,0,0,0,252,255,255,255,252,255,255,255,0,44,0,0,70,0,0,0,71,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,41,0,0,72,0,0,0,73,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,240,41,0,0,74,0,0,0,75,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,208,82,0,0,168,41,0,0,80,39,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,168,82,0,0,216,41,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,208,82,0,0,248,41,0,0,240,41,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,208,82,0,0,56,42,0,0,240,41,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,168,82,0,0,120,42,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,168,82,0,0,184,42,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,48,83,0,0,248,42,0,0,0,0,0,0,1,0,0,0,40,42,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,48,83,0,0,64,43,0,0,0,0,0,0,1,0,0,0,104,42,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,48,83,0,0,136,43,0,0,0,0,0,0,1,0,0,0,40,42,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,48,83,0,0,208,43,0,0,0,0,0,0,1,0,0,0,104,42,0,0,3,244,255,255,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,48,83,0,0,24,44,0,0,3,0,0,0,2,0,0,0,40,43,0,0,2,0,0,0,184,43,0,0,2,8,0,0,0,0,0,0,176,44,0,0,76,0,0,0,77,0,0,0,21,0,0,0,1,0,0,0,9,0,0,0,10,0,0,0,2,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,208,82,0,0,144,44,0,0,160,39,0,0,0,0,0,0,0,0,0,0,216,58,0,0,78,0,0,0,79,0,0,0,80,0,0,0,1,0,0,0,4,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,0,0,81,0,0,0,82,0,0,0,80,0,0,0,2,0,0,0,5,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,63,0,0,83,0,0,0,84,0,0,0,80,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,72,64,0,0,85,0,0,0,86,0,0,0,80,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,65,0,0,87,0,0,0,88,0,0,0,80,0,0,0,4,0,0,0,5,0,0,0,23,0,0,0,6,0,0,0,24,0,0,0,1,0,0,0,2,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,65,0,0,89,0,0,0,90,0,0,0,80,0,0,0,8,0,0,0,9,0,0,0,25,0,0,0,10,0,0,0,26,0,0,0,3,0,0,0,4,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,200,60,0,0,91,0,0,0,92,0,0,0,80,0,0,0,22,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,248,255,255,255,200,60,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,104,61,0,0,93,0,0,0,94,0,0,0,80,0,0,0,30,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,2,0,0,0,248,255,255,255,104,61,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,248,61,0,0,95,0,0,0,96,0,0,0,80,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,62,0,0,97,0,0,0,98,0,0,0,80,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,59,0,0,99,0,0,0,100,0,0,0,80,0,0,0,38,0,0,0,39,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,40,0,0,0,20,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,59,0,0,101,0,0,0,102,0,0,0,80,0,0,0,41,0,0,0,42,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,43,0,0,0,26,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,59,0,0,103,0,0,0,104,0,0,0,80,0,0,0,44,0,0,0,45,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,46,0,0,0,32,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,60,0,0,105,0,0,0,106,0,0,0,80,0,0,0,47,0,0,0,48,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,49,0,0,0,38,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,66,0,0,107,0,0,0,108,0,0,0,80,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,0,0,0,0,192,66,0,0,109,0,0,0,110,0,0,0,80,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,0,0,0,0,80,67,0,0,111,0,0,0,112,0,0,0,80,0,0,0,1,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,46,48,76,102,0,0,0,0,0,0,0,224,67,0,0,113,0,0,0,114,0,0,0,80,0,0,0,2,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,62,0,0,115,0,0,0,116,0,0,0,80,0,0,0,13,0,0,0,12,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,62,0,0,117,0,0,0,118,0,0,0,80,0,0,0,14,0,0,0,13,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,118,101,99,116,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,176,58,0,0,119,0,0,0,120,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,55,0,0,121,0,0,0,122,0,0,0,80,0,0,0,11,0,0,0,15,0,0,0,12,0,0,0,16,0,0,0,13,0,0,0,2,0,0,0,17,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,56,0,0,123,0,0,0,124,0,0,0,80,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,50,0,0,0,51,0,0,0,5,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,58,0,0,125,0,0,0,126,0,0,0,80,0,0,0,53,0,0,0,54,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,0,0,0,0,136,58,0,0,127,0,0,0,128,0,0,0,80,0,0,0,55,0,0,0,56,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,0,0,192,54,0,0,129,0,0,0,130,0,0,0,80,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,208,82,0,0,168,54,0,0,88,38,0,0,0,0,0,0,0,0,0,0,80,55,0,0,129,0,0,0,131,0,0,0,80,0,0,0,18,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,14,0,0,0,19,0,0,0,15,0,0,0,20,0,0,0,16,0,0,0,6,0,0,0,21,0,0,0,6,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,168,82,0,0,48,55,0,0,48,83,0,0,24,55,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,72,55,0,0,2,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,48,83,0,0,112,55,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,72,55,0,0,2,0,0,0,0,0,0,0,32,56,0,0,129,0,0,0,132,0,0,0,80,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,57,0,0,0,58,0,0,0,8,0,0,0,59,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,168,82,0,0,0,56,0,0,48,83,0,0,216,55,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,24,56,0,0,2,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,48,83,0,0,64,56,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,24,56,0,0,2,0,0,0,0,0,0,0,224,56,0,0,129,0,0,0,133,0,0,0,80,0,0,0,5,0,0,0,6,0,0,0,9,0,0,0,60,0,0,0,61,0,0,0,10,0,0,0,62,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,48,83,0,0,184,56,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,24,56,0,0,2,0,0,0,0,0,0,0,88,57,0,0,129,0,0,0,134,0,0,0,80,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,63,0,0,0,64,0,0,0,12,0,0,0,65,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,48,83,0,0,48,57,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,24,56,0,0,2,0,0,0,0,0,0,0,208,57,0,0,129,0,0,0,135,0,0,0,80,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,63,0,0,0,64,0,0,0,12,0,0,0,65,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,208,82,0,0,168,57,0,0,88,57,0,0,0,0,0,0,0,0,0,0,56,58,0,0,129,0,0,0,136,0,0,0,80,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,63,0,0,0,64,0,0,0,12,0,0,0,65,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,208,82,0,0,16,58,0,0,88,57,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,208,82,0,0,72,58,0,0,192,54,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,208,82,0,0,112,58,0,0,192,54,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,208,82,0,0,152,58,0,0,192,54,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,208,82,0,0,192,58,0,0,192,54,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,208,82,0,0,232,58,0,0,192,54,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,168,82,0,0,48,59,0,0,48,83,0,0,16,59,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,72,59,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,48,83,0,0,112,59,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,72,59,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,48,83,0,0,176,59,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,72,59,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,48,83,0,0,240,59,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,72,59,0,0,2,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,168,82,0,0,120,60,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,168,82,0,0,152,60,0,0,48,83,0,0,48,60,0,0,0,0,0,0,3,0,0,0,192,54,0,0,2,0,0,0,144,60,0,0,2,0,0,0,192,60,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,168,82,0,0,56,61,0,0,48,83,0,0,240,60,0,0,0,0,0,0,3,0,0,0,192,54,0,0,2,0,0,0,144,60,0,0,2,0,0,0,96,61,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,168,82,0,0,216,61,0,0,48,83,0,0,144,61,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,240,61,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,48,83,0,0,24,62,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,240,61,0,0,0,8,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,168,82,0,0,152,62,0,0,48,83,0,0,128,62,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,176,62,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,48,83,0,0,216,62,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,176,62,0,0,2,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,168,82,0,0,112,63,0,0,48,83,0,0,88,63,0,0,0,0,0,0,1,0,0,0,144,63,0,0,0,0,0,0,48,83,0,0,16,63,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,152,63,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,48,83,0,0,24,64,0,0,0,0,0,0,1,0,0,0,144,63,0,0,0,0,0,0,48,83,0,0,208,63,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,48,64,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,168,82,0,0,200,64,0,0,48,83,0,0,176,64,0,0,0,0,0,0,1,0,0,0,232,64,0,0,0,0,0,0,48,83,0,0,104,64,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,240,64,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,48,83,0,0,112,65,0,0,0,0,0,0,1,0,0,0,232,64,0,0,0,0,0,0,48,83,0,0,40,65,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,136,65,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,168,82,0,0,8,66,0,0,48,83,0,0,192,65,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,40,66,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,168,82,0,0,152,66,0,0,48,83,0,0,80,66,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,184,66,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,168,82,0,0,40,67,0,0,48,83,0,0,224,66,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,72,67,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,168,82,0,0,184,67,0,0,48,83,0,0,112,67,0,0,0,0,0,0,2,0,0,0,192,54,0,0,2,0,0,0,216,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+9308);
/* memory initializer */ allocate([74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,82,0,0,137,0,0,0,138,0,0,0,66,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,168,82,0,0,248,81,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,208,82,0,0,16,82,0,0,0,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,208,82,0,0,48,82,0,0,8,82,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,208,82,0,0,104,82,0,0,88,82,0,0,0,0,0,0,0,0,0,0,144,82,0,0,139,0,0,0,140,0,0,0,141,0,0,0,142,0,0,0,22,0,0,0,14,0,0,0,1,0,0,0,6,0,0,0,0,0,0,0,24,83,0,0,139,0,0,0,143,0,0,0,141,0,0,0,142,0,0,0,22,0,0,0,15,0,0,0,2,0,0,0,7,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,208,82,0,0,240,82,0,0,144,82,0,0,0,0,0,0,0,0,0,0,120,83,0,0,139,0,0,0,144,0,0,0,141,0,0,0,142,0,0,0,22,0,0,0,16,0,0,0,3,0,0,0,8,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,208,82,0,0,80,83,0,0,144,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,85,0,0,145,0,0,0,146,0,0,0,67,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,208,82,0,0,168,85,0,0,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,110,97,110,0,0,0,0,0,95,112,137,0,255,9,47,15,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+19648);




var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  
  var GL={counter:1,lastError:0,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],programInfos:{},stringCache:{},packAlignment:4,unpackAlignment:4,init:function () {
        GL.createLog2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);
        Browser.moduleContextCreatedCallbacks.push(GL.initExtensions);
      },recordError:function recordError(errorCode) {
        if (!GL.lastError) {
          GL.lastError = errorCode;
        }
      },getNewId:function (table) {
        var ret = GL.counter++;
        for (var i = table.length; i < ret; i++) {
          table[i] = null;
        }
        return ret;
      },MINI_TEMP_BUFFER_SIZE:16,miniTempBuffer:null,miniTempBufferViews:[0],MAX_TEMP_BUFFER_SIZE:2097152,tempVertexBuffers1:[],tempVertexBufferCounters1:[],tempVertexBuffers2:[],tempVertexBufferCounters2:[],numTempVertexBuffersPerSize:64,tempIndexBuffers:[],tempQuadIndexBuffer:null,log2ceilLookup:null,createLog2ceilLookup:function (maxValue) {
        GL.log2ceilLookup = new Uint8Array(maxValue+1);
        var log2 = 0;
        var pow2 = 1;
        GL.log2ceilLookup[0] = 0;
        for(var i = 1; i <= maxValue; ++i) {
          if (i > pow2) {
            pow2 <<= 1;
            ++log2;
          }
          GL.log2ceilLookup[i] = log2;
        }
      },generateTempBuffers:function (quads) {
        var largestIndex = GL.log2ceilLookup[GL.MAX_TEMP_BUFFER_SIZE];
        GL.tempVertexBufferCounters1.length = GL.tempVertexBufferCounters2.length = largestIndex+1;
        GL.tempVertexBuffers1.length = GL.tempVertexBuffers2.length = largestIndex+1;
        GL.tempIndexBuffers.length = largestIndex+1;
        for(var i = 0; i <= largestIndex; ++i) {
          GL.tempIndexBuffers[i] = null; // Created on-demand
          GL.tempVertexBufferCounters1[i] = GL.tempVertexBufferCounters2[i] = 0;
          var ringbufferLength = GL.numTempVertexBuffersPerSize;
          GL.tempVertexBuffers1[i] = [];
          GL.tempVertexBuffers2[i] = [];
          var ringbuffer1 = GL.tempVertexBuffers1[i];
          var ringbuffer2 = GL.tempVertexBuffers2[i];
          ringbuffer1.length = ringbuffer2.length = ringbufferLength;
          for(var j = 0; j < ringbufferLength; ++j) {
            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand
          }
        }
  
        if (quads) {
          // GL_QUAD indexes can be precalculated
          GL.tempQuadIndexBuffer = GLctx.createBuffer();
          GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, GL.tempQuadIndexBuffer);
          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;
          var quadIndexes = new Uint16Array(numIndexes);
          var i = 0, v = 0;
          while (1) {
            quadIndexes[i++] = v;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+1;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+2;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+2;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+3;
            if (i >= numIndexes) break;
            v += 4;
          }
          GLctx.bufferData(GLctx.ELEMENT_ARRAY_BUFFER, quadIndexes, GLctx.STATIC_DRAW);
          GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, null);
        }
      },getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {
        var idx = GL.log2ceilLookup[sizeBytes];
        var ringbuffer = GL.tempVertexBuffers1[idx];
        var nextFreeBufferIndex = GL.tempVertexBufferCounters1[idx];
        GL.tempVertexBufferCounters1[idx] = (GL.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);
        var vbo = ringbuffer[nextFreeBufferIndex];
        if (vbo) {
          return vbo;
        }
        var prevVBO = GLctx.getParameter(GLctx.ARRAY_BUFFER_BINDING);
        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();
        GLctx.bindBuffer(GLctx.ARRAY_BUFFER, ringbuffer[nextFreeBufferIndex]);
        GLctx.bufferData(GLctx.ARRAY_BUFFER, 1 << idx, GLctx.DYNAMIC_DRAW);
        GLctx.bindBuffer(GLctx.ARRAY_BUFFER, prevVBO);
        return ringbuffer[nextFreeBufferIndex];
      },getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {
        var idx = GL.log2ceilLookup[sizeBytes];
        var ibo = GL.tempIndexBuffers[idx];
        if (ibo) {
          return ibo;
        }
        var prevIBO = GLctx.getParameter(GLctx.ELEMENT_ARRAY_BUFFER_BINDING);
        GL.tempIndexBuffers[idx] = GLctx.createBuffer();
        GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, GL.tempIndexBuffers[idx]);
        GLctx.bufferData(GLctx.ELEMENT_ARRAY_BUFFER, 1 << idx, GLctx.DYNAMIC_DRAW);
        GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, prevIBO);
        return GL.tempIndexBuffers[idx];
      },newRenderingFrameStarted:function newRenderingFrameStarted() {
        var vb = GL.tempVertexBuffers1;
        GL.tempVertexBuffers1 = GL.tempVertexBuffers2;
        GL.tempVertexBuffers2 = vb;
        vb = GL.tempVertexBufferCounters1;
        GL.tempVertexBufferCounters1 = GL.tempVertexBufferCounters2;
        GL.tempVertexBufferCounters2 = vb;
        var largestIndex = GL.log2ceilLookup[GL.MAX_TEMP_BUFFER_SIZE];
        for(var i = 0; i <= largestIndex; ++i) {
          GL.tempVertexBufferCounters1[i] = 0;
        }
      },getSource:function (shader, count, string, length) {
        var source = '';
        for (var i = 0; i < count; ++i) {
          var frag;
          if (length) {
            var len = HEAP32[(((length)+(i*4))>>2)];
            if (len < 0) {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
            } else {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)], len);
            }
          } else {
            frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
          }
          source += frag;
        }
        return source;
      },computeImageSize:function (width, height, sizePerPixel, alignment) {
        function roundedToNextMultipleOf(x, y) {
          return Math.floor((x + y - 1) / y) * y
        }
        var plainRowSize = width * sizePerPixel;
        var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);
        return (height <= 0) ? 0 :
                 ((height - 1) * alignedRowSize + plainRowSize);
      },get:function (name_, p, type) {
        // Guard against user passing a null pointer.
        // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.
        // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but
        // better to report an error instead of doing anything random.
        if (!p) {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
          return;
        }
        var ret = undefined;
        switch(name_) { // Handle a few trivial GLES values
          case 0x8DFA: // GL_SHADER_COMPILER
            ret = 1;
            break;
          case 0x8DF8: // GL_SHADER_BINARY_FORMATS
            if (type !== 'Integer') {
              GL.recordError(0x0500); // GL_INVALID_ENUM
            }
            return; // Do not write anything to the out pointer, since no binary formats are supported.
          case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS
            ret = 0;
            break;
          case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS
            // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),
            // so implement it ourselves to allow C++ GLES2 code get the length.
            var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);
            ret = formats.length;
            break;
          case 0x8B9A: // GL_IMPLEMENTATION_COLOR_READ_TYPE
            ret = 0x1401; // GL_UNSIGNED_BYTE
            break;
          case 0x8B9B: // GL_IMPLEMENTATION_COLOR_READ_FORMAT
            ret = 0x1908; // GL_RGBA
            break;
        }
  
        if (ret === undefined) {
          var result = GLctx.getParameter(name_);
          switch (typeof(result)) {
            case "number":
              ret = result;
              break;
            case "boolean":
              ret = result ? 1 : 0;
              break;
            case "string":
              GL.recordError(0x0500); // GL_INVALID_ENUM
              return;
            case "object":
              if (result === null) {
                // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise
                // can mean an invalid name_, which we need to report as an error
                switch(name_) {
                  case 0x8894: // ARRAY_BUFFER_BINDING
                  case 0x8B8D: // CURRENT_PROGRAM
                  case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING
                  case 0x8CA6: // FRAMEBUFFER_BINDING
                  case 0x8CA7: // RENDERBUFFER_BINDING
                  case 0x8069: // TEXTURE_BINDING_2D
                  case 0x8514: { // TEXTURE_BINDING_CUBE_MAP
                    ret = 0;
                    break;
                  }
                  default: {
                    GL.recordError(0x0500); // GL_INVALID_ENUM
                    return;
                  }
                }
              } else if (result instanceof Float32Array ||
                         result instanceof Uint32Array ||
                         result instanceof Int32Array ||
                         result instanceof Array) {
                for (var i = 0; i < result.length; ++i) {
                  switch (type) {
                    case 'Integer': HEAP32[(((p)+(i*4))>>2)]=result[i];   break;
                    case 'Float':   HEAPF32[(((p)+(i*4))>>2)]=result[i]; break;
                    case 'Boolean': HEAP8[(((p)+(i))|0)]=result[i] ? 1 : 0;    break;
                    default: throw 'internal glGet error, bad type: ' + type;
                  }
                }
                return;
              } else if (result instanceof WebGLBuffer ||
                         result instanceof WebGLProgram ||
                         result instanceof WebGLFramebuffer ||
                         result instanceof WebGLRenderbuffer ||
                         result instanceof WebGLTexture) {
                ret = result.name | 0;
              } else {
                GL.recordError(0x0500); // GL_INVALID_ENUM
                return;
              }
              break;
            default:
              GL.recordError(0x0500); // GL_INVALID_ENUM
              return;
          }
        }
  
        switch (type) {
          case 'Integer': HEAP32[((p)>>2)]=ret;    break;
          case 'Float':   HEAPF32[((p)>>2)]=ret;  break;
          case 'Boolean': HEAP8[(p)]=ret ? 1 : 0; break;
          default: throw 'internal glGet error, bad type: ' + type;
        }
      },getTexPixelData:function (type, format, width, height, pixels, internalFormat) {
        var sizePerPixel;
        switch (type) {
          case 0x1401 /* GL_UNSIGNED_BYTE */:
            switch (format) {
              case 0x1906 /* GL_ALPHA */:
              case 0x1909 /* GL_LUMINANCE */:
                sizePerPixel = 1;
                break;
              case 0x1907 /* GL_RGB */:
                sizePerPixel = 3;
                break;
              case 0x1908 /* GL_RGBA */:
                sizePerPixel = 4;
                break;
              case 0x190A /* GL_LUMINANCE_ALPHA */:
                sizePerPixel = 2;
                break;
              default:
                throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x1403 /* GL_UNSIGNED_SHORT */:
            if (format == 0x1902 /* GL_DEPTH_COMPONENT */) {
              sizePerPixel = 2;
            } else {
              throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x1405 /* GL_UNSIGNED_INT */:
            if (format == 0x1902 /* GL_DEPTH_COMPONENT */) {
              sizePerPixel = 4;
            } else {
              throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x84FA /* UNSIGNED_INT_24_8_WEBGL */:
            sizePerPixel = 4;
            break;
          case 0x8363 /* GL_UNSIGNED_SHORT_5_6_5 */:
          case 0x8033 /* GL_UNSIGNED_SHORT_4_4_4_4 */:
          case 0x8034 /* GL_UNSIGNED_SHORT_5_5_5_1 */:
            sizePerPixel = 2;
            break;
          case 0x1406 /* GL_FLOAT */:
            switch (format) {
              case 0x1907 /* GL_RGB */:
                sizePerPixel = 3*4;
                break;
              case 0x1908 /* GL_RGBA */:
                sizePerPixel = 4*4;
                break;
              default:
                throw 'Invalid format (' + format + ')';
            }
            internalFormat = GLctx.RGBA;
            break;
          default:
            throw 'Invalid type (' + type + ')';
        }
        var bytes = GL.computeImageSize(width, height, sizePerPixel, GL.unpackAlignment);
        if (type == 0x1401 /* GL_UNSIGNED_BYTE */) {
          pixels = HEAPU8.subarray((pixels),(pixels+bytes));
        } else if (type == 0x1406 /* GL_FLOAT */) {
          pixels = HEAPF32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else if (type == 0x1405 /* GL_UNSIGNED_INT */ || type == 0x84FA /* UNSIGNED_INT_24_8_WEBGL */) {
          pixels = HEAPU32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else {
          pixels = HEAPU16.subarray((pixels)>>1,(pixels+bytes)>>1);
        }
        return {
          pixels: pixels,
          internalFormat: internalFormat
        }
      },initExtensions:function () {
        if (GL.initExtensions.done) return;
        GL.initExtensions.done = true;
  
        if (!Module.useWebGL) return; // an app might link both gl and 2d backends
  
        GL.miniTempBuffer = new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);
        for (var i = 0; i < GL.MINI_TEMP_BUFFER_SIZE; i++) {
          GL.miniTempBufferViews[i] = GL.miniTempBuffer.subarray(0, i+1);
        }
  
        GL.maxVertexAttribs = GLctx.getParameter(GLctx.MAX_VERTEX_ATTRIBS);
  
        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist. 
        GL.compressionExt = GLctx.getExtension('WEBGL_compressed_texture_s3tc') ||
                            GLctx.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||
                            GLctx.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');
  
        GL.anisotropicExt = GLctx.getExtension('EXT_texture_filter_anisotropic') ||
                            GLctx.getExtension('MOZ_EXT_texture_filter_anisotropic') ||
                            GLctx.getExtension('WEBKIT_EXT_texture_filter_anisotropic');
  
        GL.floatExt = GLctx.getExtension('OES_texture_float');
  
        // Extension available from Firefox 26 and Google Chrome 30
        GL.instancedArraysExt = GLctx.getExtension('ANGLE_instanced_arrays');
        
        // Extension available from Firefox 25 and WebKit
        GL.vaoExt = Module.ctx.getExtension('OES_vertex_array_object');
  
        // These are the 'safe' feature-enabling extensions that don't add any performance impact related to e.g. debugging, and
        // should be enabled by default so that client GLES2/GL code will not need to go through extra hoops to get its stuff working.
        // As new extensions are ratified at http://www.khronos.org/registry/webgl/extensions/ , feel free to add your new extensions
        // here, as long as they don't produce a performance impact for users that might not be using those extensions.
        // E.g. debugging-related extensions should probably be off by default.
        var automaticallyEnabledExtensions = [ "OES_texture_float", "OES_texture_half_float", "OES_standard_derivatives",
                                               "OES_vertex_array_object", "WEBGL_compressed_texture_s3tc", "WEBGL_depth_texture",
                                               "OES_element_index_uint", "EXT_texture_filter_anisotropic", "ANGLE_instanced_arrays",
                                               "OES_texture_float_linear", "OES_texture_half_float_linear", "WEBGL_compressed_texture_atc",
                                               "WEBGL_compressed_texture_pvrtc", "EXT_color_buffer_half_float", "WEBGL_color_buffer_float",
                                               "EXT_frag_depth", "EXT_sRGB", "WEBGL_draw_buffers", "WEBGL_shared_resources",
                                               "EXT_shader_texture_lod" ];
  
        function shouldEnableAutomatically(extension) {
          for(var i in automaticallyEnabledExtensions) {
            var include = automaticallyEnabledExtensions[i];
            if (ext.indexOf(include) != -1) {
              return true;
            }
          }
          return false;
        }
  
        var extensions = GLctx.getSupportedExtensions();
        for(var e in extensions) {
          var ext = extensions[e].replace('MOZ_', '').replace('WEBKIT_', '');
          if (automaticallyEnabledExtensions.indexOf(ext) != -1) {
            GLctx.getExtension(ext); // Calling .getExtension enables that extension permanently, no need to store the return value to be enabled.
          }
        }
      },populateUniformTable:function (program) {
        var p = GL.programs[program];
        GL.programInfos[program] = {
          uniforms: {},
          maxUniformLength: 0, // This is eagerly computed below, since we already enumerate all uniforms anyway.
          maxAttributeLength: -1 // This is lazily computed and cached, computed when/if first asked, "-1" meaning not computed yet.
        };
  
        var ptable = GL.programInfos[program];
        var utable = ptable.uniforms;
        // A program's uniform table maps the string name of an uniform to an integer location of that uniform.
        // The global GL.uniforms map maps integer locations to WebGLUniformLocations.
        var numUniforms = GLctx.getProgramParameter(p, GLctx.ACTIVE_UNIFORMS);
        for (var i = 0; i < numUniforms; ++i) {
          var u = GLctx.getActiveUniform(p, i);
  
          var name = u.name;
          ptable.maxUniformLength = Math.max(ptable.maxUniformLength, name.length+1);
  
          // Strip off any trailing array specifier we might have got, e.g. "[0]".
          if (name.indexOf(']', name.length-1) !== -1) {
            var ls = name.lastIndexOf('[');
            name = name.slice(0, ls);
          }
  
          // Optimize memory usage slightly: If we have an array of uniforms, e.g. 'vec3 colors[3];', then 
          // only store the string 'colors' in utable, and 'colors[0]', 'colors[1]' and 'colors[2]' will be parsed as 'colors'+i.
          // Note that for the GL.uniforms table, we still need to fetch the all WebGLUniformLocations for all the indices.
          var loc = GLctx.getUniformLocation(p, name);
          var id = GL.getNewId(GL.uniforms);
          utable[name] = [u.size, id];
          GL.uniforms[id] = loc;
  
          for (var j = 1; j < u.size; ++j) {
            var n = name + '['+j+']';
            loc = GLctx.getUniformLocation(p, n);
            id = GL.getNewId(GL.uniforms);
  
            GL.uniforms[id] = loc;
          }
        }
      }};function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }

  function _pthread_mutex_lock() {}

  function _glLinkProgram(program) {
      GLctx.linkProgram(GL.programs[program]);
      GL.programInfos[program] = null; // uniforms no longer keep the same names after linking
      GL.populateUniformTable(program);
    }

  function _glBindTexture(target, texture) {
      GLctx.bindTexture(target, texture ? GL.textures[texture] : null);
    }

  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          stream.position = position;
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = Math.floor(idx / this.chunkSize);
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
            // Find length
            var xhr = new XMLHttpRequest();
            xhr.open('HEAD', url, false);
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            var datalength = Number(xhr.getResponseHeader("Content-length"));
            var header;
            var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
            var chunkSize = 1024*1024; // Chunk size in bytes
  
            if (!hasByteServing) chunkSize = datalength;
  
            // Function to get a range from the remote URL.
            var doXHR = (function(from, to) {
              if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
              if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
              // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
              var xhr = new XMLHttpRequest();
              xhr.open('GET', url, false);
              if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
              // Some hints to the browser that we want binary data.
              if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
              if (xhr.overrideMimeType) {
                xhr.overrideMimeType('text/plain; charset=x-user-defined');
              }
  
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              if (xhr.response !== undefined) {
                return new Uint8Array(xhr.response || []);
              } else {
                return intArrayFromString(xhr.responseText || '', true);
              }
            });
            var lazyArray = this;
            lazyArray.setDataGetter(function(chunkNum) {
              var start = chunkNum * chunkSize;
              var end = (chunkNum+1) * chunkSize - 1; // including this byte
              end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
              if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                lazyArray.chunks[chunkNum] = doXHR(start, end);
              }
              if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
              return lazyArray.chunks[chunkNum];
            });
  
            this._length = datalength;
            this._chunkSize = chunkSize;
            this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }

  var _floorf=Math_floor;

  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              // runtimeConfig gets set to true if WebSocket runtime configuration is available.
              var runtimeConfig = (Module['websocket'] && ('object' === typeof Module['websocket']));
  
              // The default value is 'ws://' the replace is needed because the compiler replaces "//" comments with '#'
              // comments without checking context, so we'd end up with ws:#, the replace swaps the "#" for "//" again.
              var url = 'ws:#'.replace('#', '//');
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['url']) {
                  url = Module['websocket']['url']; // Fetch runtime WebSocket URL config.
                }
              }
  
              if (url === 'ws://' || url === 'wss://') { // Is the supplied URL config just a prefix, if so complete it.
                url = url + addr + ':' + port;
              }
  
              // Make the WebSocket subprotocol (Sec-WebSocket-Protocol) default to binary if no configuration is set.
              var subProtocols = 'binary'; // The default value is 'binary'
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['subprotocol']) {
                  subProtocols = Module['websocket']['subprotocol']; // Fetch runtime WebSocket subprotocol config.
                }
              }
  
              // The regex trims the string (removes spaces at the beginning and end, then splits the string by
              // <any space>,<any space> into an Array. Whitespace removal is important for Websockify and ws.
              subProtocols = subProtocols.replace(/^ +| +$/g,"").split(/ *, */);
  
              // The node ws library API for specifying optional subprotocol is slightly different than the browser's.
              var opts = ENVIRONMENT_IS_NODE ? {'protocol': subProtocols.toString()} : subProtocols;
  
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }

  
  var GLFW={keyFunc:null,charFunc:null,mouseButtonFunc:null,mousePosFunc:null,mouseWheelFunc:null,resizeFunc:null,closeFunc:null,refreshFunc:null,params:null,initTime:null,wheelPos:0,buttons:0,keys:0,initWindowWidth:640,initWindowHeight:480,windowX:0,windowY:0,windowWidth:0,windowHeight:0,DOMToGLFWKeyCode:function (keycode) {
        switch (keycode) {
          case 0x08: return 295 ; // DOM_VK_BACKSPACE -> GLFW_KEY_BACKSPACE
          case 0x09: return 293 ; // DOM_VK_TAB -> GLFW_KEY_TAB
          case 0x0D: return 294 ; // DOM_VK_ENTER -> GLFW_KEY_ENTER
          case 0x1B: return 257 ; // DOM_VK_ESCAPE -> GLFW_KEY_ESC
          case 0x6A: return 313 ; // DOM_VK_MULTIPLY -> GLFW_KEY_KP_MULTIPLY
          case 0x6B: return 315 ; // DOM_VK_ADD -> GLFW_KEY_KP_ADD
          case 0x6D: return 314 ; // DOM_VK_SUBTRACT -> GLFW_KEY_KP_SUBTRACT
          case 0x6E: return 316 ; // DOM_VK_DECIMAL -> GLFW_KEY_KP_DECIMAL
          case 0x6F: return 312 ; // DOM_VK_DIVIDE -> GLFW_KEY_KP_DIVIDE
          case 0x70: return 258 ; // DOM_VK_F1 -> GLFW_KEY_F1
          case 0x71: return 259 ; // DOM_VK_F2 -> GLFW_KEY_F2
          case 0x72: return 260 ; // DOM_VK_F3 -> GLFW_KEY_F3
          case 0x73: return 261 ; // DOM_VK_F4 -> GLFW_KEY_F4
          case 0x74: return 262 ; // DOM_VK_F5 -> GLFW_KEY_F5
          case 0x75: return 263 ; // DOM_VK_F6 -> GLFW_KEY_F6
          case 0x76: return 264 ; // DOM_VK_F7 -> GLFW_KEY_F7
          case 0x77: return 265 ; // DOM_VK_F8 -> GLFW_KEY_F8
          case 0x78: return 266 ; // DOM_VK_F9 -> GLFW_KEY_F9
          case 0x79: return 267 ; // DOM_VK_F10 -> GLFW_KEY_F10
          case 0x7a: return 268 ; // DOM_VK_F11 -> GLFW_KEY_F11
          case 0x7b: return 269 ; // DOM_VK_F12 -> GLFW_KEY_F12
          case 0x25: return 285 ; // DOM_VK_LEFT -> GLFW_KEY_LEFT
          case 0x26: return 283 ; // DOM_VK_UP -> GLFW_KEY_UP
          case 0x27: return 286 ; // DOM_VK_RIGHT -> GLFW_KEY_RIGHT
          case 0x28: return 284 ; // DOM_VK_DOWN -> GLFW_KEY_DOWN
          case 0x21: return 298 ; // DOM_VK_PAGE_UP -> GLFW_KEY_PAGEUP
          case 0x22: return 299 ; // DOM_VK_PAGE_DOWN -> GLFW_KEY_PAGEDOWN
          case 0x24: return 300 ; // DOM_VK_HOME -> GLFW_KEY_HOME
          case 0x23: return 301 ; // DOM_VK_END -> GLFW_KEY_END
          case 0x2d: return 296 ; // DOM_VK_INSERT -> GLFW_KEY_INSERT
          case 16  : return 287 ; // DOM_VK_SHIFT -> GLFW_KEY_LSHIFT
          case 0x05: return 287 ; // DOM_VK_LEFT_SHIFT -> GLFW_KEY_LSHIFT
          case 0x06: return 288 ; // DOM_VK_RIGHT_SHIFT -> GLFW_KEY_RSHIFT
          case 17  : return 289 ; // DOM_VK_CONTROL -> GLFW_KEY_LCTRL
          case 0x03: return 289 ; // DOM_VK_LEFT_CONTROL -> GLFW_KEY_LCTRL
          case 0x04: return 290 ; // DOM_VK_RIGHT_CONTROL -> GLFW_KEY_RCTRL
          case 18  : return 291 ; // DOM_VK_ALT -> GLFW_KEY_LALT
          case 0x02: return 291 ; // DOM_VK_LEFT_ALT -> GLFW_KEY_LALT
          case 0x01: return 292 ; // DOM_VK_RIGHT_ALT -> GLFW_KEY_RALT
          case 96  : return 302 ; // GLFW_KEY_KP_0
          case 97  : return 303 ; // GLFW_KEY_KP_1
          case 98  : return 304 ; // GLFW_KEY_KP_2
          case 99  : return 305 ; // GLFW_KEY_KP_3
          case 100 : return 306 ; // GLFW_KEY_KP_4
          case 101 : return 307 ; // GLFW_KEY_KP_5
          case 102 : return 308 ; // GLFW_KEY_KP_6
          case 103 : return 309 ; // GLFW_KEY_KP_7
          case 104 : return 310 ; // GLFW_KEY_KP_8
          case 105 : return 311 ; // GLFW_KEY_KP_9
          default  : return keycode;
        };
      },getUnicodeChar:function (value) {
        var output = '';
        if (value > 0xFFFF) {
          value -= 0x10000;
          output += String.fromCharCode(value >>> 10 & 0x3FF | 0xD800);
          value = 0xDC00 | value & 0x3FF;
        }
        output += String.fromCharCode(value);
        return output;
      },onKeyPress:function (event) {
        // charCode is only available whith onKeyPress event
        var char = GLFW.getUnicodeChar(event.charCode);
  
        if (event.charCode) {
          var char = GLFW.getUnicodeChar(event.charCode);
          if (char !== null && GLFW.charFunc) {
            Runtime.dynCall('vii', GLFW.charFunc, [event.charCode, 1]);
          }
        }
      },onKeyChanged:function (event, status) {
        var key = GLFW.DOMToGLFWKeyCode(event.keyCode);
        if (key && GLFW.keyFunc) {
          GLFW.keys[key] = status;
          Runtime.dynCall('vii', GLFW.keyFunc, [key, status]);
        }
      },onKeydown:function (event) {
        GLFW.onKeyChanged(event, 1);// GLFW_PRESS
        // This logic comes directly from the sdl implementation. We cannot
        // call preventDefault on all keydown events otherwise onKeyPress will
        // not get called
        if (event.keyCode === 8 /* backspace */ || event.keyCode === 9 /* tab */) {
          event.preventDefault();
        }
      },onKeyup:function (event) {
        GLFW.onKeyChanged(event, 0);// GLFW_RELEASE
      },onMousemove:function (event) {
        /* Send motion event only if the motion changed, prevents
         * spamming our app with uncessary callback call. It does happen in
         * Chrome on Windows.
         */
        var lastX = Browser.mouseX;
        var lastY = Browser.mouseY;
        Browser.calculateMouseEvent(event);
        var newX = Browser.mouseX;
        var newY = Browser.mouseY;
  
        if (event.target == Module["canvas"] && GLFW.mousePosFunc) {
          event.preventDefault();
          Runtime.dynCall('vii', GLFW.mousePosFunc, [lastX, lastY]);
        }
      },onMouseButtonChanged:function (event, status) {
        if (GLFW.mouseButtonFunc == null) {
          return;
        }
  
        Browser.calculateMouseEvent(event);
  
        if (event.target != Module["canvas"]) {
          return;
        }
  
        if (status == 1) {// GLFW_PRESS
          try {
            event.target.setCapture();
          } catch (e) {}
        }
  
        event.preventDefault();
  
        // DOM and glfw have different button codes
        var eventButton = event['button'];
        if (eventButton > 0) {
          if (eventButton == 1) {
            eventButton = 2;
          } else {
            eventButton = 1;
          }
        }
        Runtime.dynCall('vii', GLFW.mouseButtonFunc, [eventButton, status]);
      },onMouseButtonDown:function (event) {
        GLFW.buttons |= (1 << event['button']);
        GLFW.onMouseButtonChanged(event, 1);// GLFW_PRESS
      },onMouseButtonUp:function (event) {
        GLFW.buttons &= ~(1 << event['button']);
        GLFW.onMouseButtonChanged(event, 0);// GLFW_RELEASE
      },onMouseWheel:function (event) {
        GLFW.wheelPos += Browser.getMouseWheelDelta(event);
  
        if (GLFW.mouseWheelFunc && event.target == Module["canvas"]) {
          Runtime.dynCall('vi', GLFW.mouseWheelFunc, [GLFW.wheelPos]);
          event.preventDefault();
        }
      },onFullScreenEventChange:function (event) {
        var width;
        var height;
        if (document["fullScreen"] || document["mozFullScreen"] || document["webkitIsFullScreen"]) {
          width = screen["width"];
          height = screen["height"];
        } else {
          width = GLFW.windowWidth;
          height = GLFW.windowHeight;
          // TODO set position
          document.removeEventListener('fullscreenchange', GLFW.onFullScreenEventChange, true);
          document.removeEventListener('mozfullscreenchange', GLFW.onFullScreenEventChange, true);
          document.removeEventListener('webkitfullscreenchange', GLFW.onFullScreenEventChange, true);
        }
        Browser.setCanvasSize(width, height);
  
        if (GLFW.resizeFunc) {
          Runtime.dynCall('vii', GLFW.resizeFunc, [width, height]);
        }
      },requestFullScreen:function () {
        var RFS = Module["canvas"]['requestFullscreen'] ||
                  Module["canvas"]['requestFullScreen'] ||
                  Module["canvas"]['mozRequestFullScreen'] ||
                  Module["canvas"]['webkitRequestFullScreen'] ||
                  (function() {});
        RFS.apply(Module["canvas"], []);
      },cancelFullScreen:function () {
        var CFS = document['exitFullscreen'] ||
                  document['cancelFullScreen'] ||
                  document['mozCancelFullScreen'] ||
                  document['webkitCancelFullScreen'] ||
            (function() {});
        CFS.apply(document, []);
      }};function _glfwGetTime() {
      return (Date.now()/1000) - GLFW.initTime;
    }

  function _glCompileShader(shader) {
      GLctx.compileShader(GL.shaders[shader]);
    }

  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }

  function _glDeleteTextures(n, textures) {
      for (var i = 0; i < n; i++) {
        var id = HEAP32[(((textures)+(i*4))>>2)];
        var texture = GL.textures[id];
        GLctx.deleteTexture(texture);
        texture.name = 0;
        GL.textures[id] = null;
      }
    }

  
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }function _isxdigit_l(chr) {
      return _isxdigit(chr); // no locale support yet
    }

  function _glfwSetMousePosCallback(cbfun) {
      GLFW.mousePosFunc = cbfun;
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

   
  Module["_memmove"] = _memmove;

  function _glGenTextures(n, textures) {
      for (var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.textures);
        var texture = GLctx.createTexture();
        texture.name = id;
        GL.textures[id] = texture;
        HEAP32[(((textures)+(i*4))>>2)]=id;
      }
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function _newlocale(mask, locale, base) {
      return _malloc(4);
    }

  function _glDepthFunc(x0) { GLctx.depthFunc(x0) }

  var _sin=Math_sin;

  function _pthread_cond_wait() {
      return 0;
    }

  
  
  
  var ___cxa_exception_header_size=8;
  
  function _free() {
  }
  Module["_free"] = _free;function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr - ___cxa_exception_header_size);
      } catch(e) { // XXX FIXME
      }
    }
  
  var ___cxa_last_thrown_exception=0;
  
  var ___cxa_caught_exceptions=[];function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = ___cxa_caught_exceptions.pop();
      if (ptr) {
        header = ptr - ___cxa_exception_header_size;
        var destructor = HEAP32[(((header)+(4))>>2)];
        if (destructor) {
          Runtime.dynCall('vi', destructor, [ptr]);
          HEAP32[(((header)+(4))>>2)]=0;
        }
        ___cxa_free_exception(ptr);
        ___cxa_last_thrown_exception = 0;
      }
    }function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = ___cxa_caught_exceptions.pop();
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  function _fmod(x, y) {
      return x % y;
    }

  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }

  function _glCreateShader(shaderType) {
      var id = GL.getNewId(GL.shaders);
      GL.shaders[id] = GLctx.createShader(shaderType);
      return id;
    }

  function _glUniform1i(location, v0) {
      location = GL.uniforms[location];
      GLctx.uniform1i(location, v0);
    }

  var _cosf=Math_cos;

  
  
  
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function get() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function unget() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
  
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
  
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
                if (next === 0) return i > 0 ? fields : fields-1; // we failed to read the full length of this field
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
  
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
  
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
  
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
  
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
  
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
  
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
  
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16);
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text);
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text);
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j];
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      function get() { return HEAP8[(((s)+(index++))|0)]; };
      function unget() { index--; };
      return __scanString(format, get, unget, varargs);
    }function _vsscanf(s, format, va_arg) {
      return _sscanf(s, format, HEAP32[((va_arg)>>2)]);
    }

  function _glDisable(x0) { GLctx.disable(x0) }

  
  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }

   
  Module["_memset"] = _memset;

  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {
      GLctx.vertexAttribPointer(index, size, type, normalized, stride, ptr);
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function _emscripten_async_wget_data(url, arg, onload, onerror) {
      Browser.asyncLoad(Pointer_stringify(url), function(byteArray) {
        var buffer = _malloc(byteArray.length);
        HEAPU8.set(byteArray, buffer);
        Runtime.dynCall('viii', onload, [arg, buffer, byteArray.length]);
        _free(buffer);
      }, function() {
        if (onerror) Runtime.dynCall('vi', onerror, [arg]);
      }, true /* no need for run dependency, this is async but will not do any prepare etc. step */ );
    }

  function _glGetUniformLocation(program, name) {
      name = Pointer_stringify(name);
  
      var arrayOffset = 0;
      // If user passed an array accessor "[index]", parse the array index off the accessor.
      if (name.indexOf(']', name.length-1) !== -1) {
        var ls = name.lastIndexOf('[');
        var arrayIndex = name.slice(ls+1, -1);
        if (arrayIndex.length > 0) {
          arrayOffset = parseInt(arrayIndex);
          if (arrayOffset < 0) {
            return -1;
          }
        }
        name = name.slice(0, ls);
      }
  
      var ptable = GL.programInfos[program];
      if (!ptable) {
        return -1;
      }
      var utable = ptable.uniforms;
      var uniformInfo = utable[name]; // returns pair [ dimension_of_uniform_array, uniform_location ]
      if (uniformInfo && arrayOffset < uniformInfo[0]) { // Check if user asked for an out-of-bounds element, i.e. for 'vec4 colors[3];' user could ask for 'colors[10]' which should return -1.
        return uniformInfo[1]+arrayOffset;
      } else {
        return -1;
      }
    }

  
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }function _isdigit_l(chr) {
      return _isdigit(chr); // no locale support yet
    }

  var _sqrtf=Math_sqrt;

  var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        
        // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
        // Module['forcedAspectRatio'] = 4 / 3;
        
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'] ||
                                    canvas['msRequestPointerLock'] ||
                                    function(){};
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 document['msExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
  
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
  
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
  
  
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
        
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvasContainer.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        return Math.max(-1, Math.min(1, event.type === 'DOMMouseScroll' ? event.detail : -event.wheelDelta));
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              Browser.lastTouches[touch.identifier] = Browser.touches[touch.identifier];
              Browser.touches[touch.identifier] = { x: adjustedX, y: adjustedY };
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      }};

  
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Runtime.getNativeFieldSize(type);
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _freelocale(locale) {
      _free(locale);
    }

  function _glAttachShader(program, shader) {
      GLctx.attachShader(GL.programs[program],
                              GL.shaders[shader]);
    }

  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg) {
      Module['noExitRuntime'] = true;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
        if (Browser.mainLoop.shouldPause) {
          // catch pauses from non-main loop sources
          Browser.mainLoop.paused = true;
          Browser.mainLoop.shouldPause = false;
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        if (Module['preMainLoop']) {
          Module['preMainLoop']();
        }
  
        try {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        } catch (e) {
          if (e instanceof ExitStatus) {
            return;
          } else {
            if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
            throw e;
          }
        }
  
        if (Module['postMainLoop']) {
          Module['postMainLoop']();
        }
  
        if (Browser.mainLoop.shouldPause) {
          // catch pauses from the main loop itself
          Browser.mainLoop.paused = true;
          Browser.mainLoop.shouldPause = false;
          return;
        }
        Browser.mainLoop.scheduler();
      }
      if (fps && fps > 0) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          setTimeout(Browser.mainLoop.runner, 1000/fps); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      }
      Browser.mainLoop.scheduler();
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  function _copysign(a, b) {
      return __reallyNegative(a) === __reallyNegative(b) ? a : -a;
    }

  function _glUniform3f(location, v0, v1, v2) {
      location = GL.uniforms[location];
      GLctx.uniform3f(location, v0, v1, v2);
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }

  function _glDrawElements(mode, count, type, indices) {
  
      GLctx.drawElements(mode, count, type, indices);
  
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      ___cxa_caught_exceptions.push(___cxa_last_thrown_exception);
      return ptr;
    }

  var _sinf=Math_sin;


  var _cos=Math_cos;

  function __ZNSt9exceptionD2Ev() {}

  function _glGetShaderiv(shader, pname, p) {
      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH
        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);
        // Work around a bug in Chromium which causes getShaderInfoLog to return null
        if (!log) log = '(unknown error)';
        HEAP32[((p)>>2)]=log.length + 1;
      } else {
        HEAP32[((p)>>2)]=GLctx.getShaderParameter(GL.shaders[shader], pname);
      }
    }

  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;

  
   
  Module["_rand_r"] = _rand_r;
  
  var ___rand_seed=allocate([0x0273459b, 0, 0, 0], "i32", ALLOC_STATIC); 
  Module["_rand"] = _rand;

   
  Module["_i64Subtract"] = _i64Subtract;

  var _fabsf=Math_abs;

   
  Module["_i64Add"] = _i64Add;

  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  
  function ___resumeException(ptr) {
      if (!___cxa_last_thrown_exception) { ___cxa_last_thrown_exception = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = ___cxa_last_thrown_exception;
      header = thrown - ___cxa_exception_header_size;
      if (throwntype == -1) throwntype = HEAP32[((header)>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
  
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      var header = ptr - ___cxa_exception_header_size;
      HEAP32[((header)>>2)]=type;
      HEAP32[(((header)+(4))>>2)]=destructor;
      ___cxa_last_thrown_exception = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  function _glUseProgram(program) {
      GLctx.useProgram(program ? GL.programs[program] : null);
    }

  function _glfwTerminate() {}

  
  function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = HEAP32[((_stdout)>>2)];
      return _fprintf(stdout, format, varargs);
    }

  function _glDrawArrays(mode, first, count) {
  
      GLctx.drawArrays(mode, first, count);
  
    }

  
  
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var isNegative = false;
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
  
      // Check for a plus/minus sign.
      if (HEAP8[(str)] == 45) {
        str++;
        isNegative = true;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
  
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      var start = str;
  
      // Get digits.
      var chr;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
  
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return ((asm["setTempRet0"](0),0)|0);
      }
  
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str;
      }
  
      try {
        var numberString = isNegative ? '-'+Pointer_stringify(start, str - start) : Pointer_stringify(start, str - start);
        i64Math.fromString(numberString, finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
  
      return ((asm["setTempRet0"](((HEAP32[(((tempDoublePtr)+(4))>>2)])|0)),((HEAP32[((tempDoublePtr)>>2)])|0))|0);
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }function _strtoull_l(str, endptr, base) {
      return _strtoull(str, endptr, base); // no locale support yet
    }


  
  function _fputs(s, stream) {
      // int fputs(const char *restrict s, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputs.html
      var fd = _fileno(stream);
      return _write(fd, s, _strlen(s));
    }
  
  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)|0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }function _puts(s) {
      // int puts(const char *s);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/puts.html
      // NOTE: puts() always writes an extra newline.
      var stdout = HEAP32[((_stdout)>>2)];
      var ret = _fputs(s, stdout);
      if (ret < 0) {
        return ret;
      } else {
        var newlineRet = _fputc(10, stdout);
        return (newlineRet < 0) ? -1 : ret + 1;
      }
    }

  var _copysignl=_copysign;

  
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }function _strtoll_l(str, endptr, base) {
      return _strtoll(str, endptr, base); // no locale support yet
    }

  function _glClear(x0) { GLctx.clear(x0) }

  function _glfwSetCharCallback(cbfun) {
      GLFW.charFunc = cbfun;
    }

  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }

  function _glEnableVertexAttribArray(index) {
      GLctx.enableVertexAttribArray(index);
    }

  function _glBindBuffer(target, buffer) {
      var bufferObj = buffer ? GL.buffers[buffer] : null;
  
  
      GLctx.bindBuffer(target, bufferObj);
    }

  function _glUniform4f(location, v0, v1, v2, v3) {
      location = GL.uniforms[location];
      GLctx.uniform4f(location, v0, v1, v2, v3);
    }

  function _glfwOpenWindow(width, height, redbits, greenbits, bluebits, alphabits, depthbits, stencilbits, mode) {
      if (width == 0 && height > 0) {
        width = 4 * height / 3;
      }
      if (width > 0 && height == 0) {
        height = 3 * width / 4;
      }
      GLFW.params[0x00020005] = redbits; // GLFW_RED_BITS
      GLFW.params[0x00020006] = greenbits; // GLFW_GREEN_BITS
      GLFW.params[0x00020007] = bluebits; // GLFW_BLUE_BITS
      GLFW.params[0x00020008] = alphabits; // GLFW_ALPHA_BITS
      GLFW.params[0x00020009] = depthbits; // GLFW_DEPTH_BITS
      GLFW.params[0x0002000A] = stencilbits; // GLFW_STENCIL_BITS
  
      if (mode == 0x00010001) {// GLFW_WINDOW
        Browser.setCanvasSize(GLFW.initWindowWidth = width,
                              GLFW.initWindowHeight = height);
        GLFW.params[0x00030003] = true; // GLFW_STICKY_MOUSE_BUTTONS
      } else if (mode == 0x00010002) {// GLFW_FULLSCREEN
        GLFW.requestFullScreen();
        GLFW.params[0x00030003] = false; // GLFW_STICKY_MOUSE_BUTTONS
      } else {
        throw "Invalid glfwOpenWindow mode.";
      }
  
      var contextAttributes = {
        antialias: (GLFW.params[0x00020013] > 1), // GLFW_FSAA_SAMPLES
        depth: (GLFW.params[0x00020009] > 0), // GLFW_DEPTH_BITS
        stencil: (GLFW.params[0x0002000A] > 0) // GLFW_STENCIL_BITS
      }
      Module.ctx = Browser.createContext(Module['canvas'], true, true, contextAttributes);
      return 1; // GL_TRUE
    }

  function _glBufferData(target, size, data, usage) {
      switch (usage) { // fix usages, WebGL only has *_DRAW
        case 0x88E1: // GL_STREAM_READ
        case 0x88E2: // GL_STREAM_COPY
          usage = 0x88E0; // GL_STREAM_DRAW
          break;
        case 0x88E5: // GL_STATIC_READ
        case 0x88E6: // GL_STATIC_COPY
          usage = 0x88E4; // GL_STATIC_DRAW
          break;
        case 0x88E9: // GL_DYNAMIC_READ
        case 0x88EA: // GL_DYNAMIC_COPY
          usage = 0x88E8; // GL_DYNAMIC_DRAW
          break;
      }
      if (!data) {
        GLctx.bufferData(target, size, usage);
      } else {
        GLctx.bufferData(target, HEAPU8.subarray(data, data+size), usage);
      }
    }

  function _pthread_cond_broadcast() {
      return 0;
    }

  
  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }

  function _pthread_mutex_unlock() {}

  function _emscripten_async_prepare_data(data, size, suffix, arg, onload, onerror) {
      Module['noExitRuntime'] = true;
  
      var _suffix = Pointer_stringify(suffix);
      if (!Browser.asyncPrepareDataCounter) Browser.asyncPrepareDataCounter = 0;
      var name = 'prepare_data_' + (Browser.asyncPrepareDataCounter++) + '.' + _suffix;
      var cname = _malloc(name.length+1);
      writeStringToMemory(name, cname);
      FS.createPreloadedFile(
        '/',
        name,
        HEAPU8.subarray((data),(data + size)),
        true, true,
        function() {
          if (onload) Runtime.dynCall('vii', onload, [arg, cname]);
        },
        function() {
          if (onerror) Runtime.dynCall('vi', onerror, [arg]);
        },
        true // don'tCreateFile - it's already there
      );
      return 0;
    }

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }


  function ___errno_location() {
      return ___errno_state;
    }

  
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _glfwInit() {
      GLFW.initTime = Date.now() / 1000;
  
      window.addEventListener("keydown", GLFW.onKeydown, true);
      window.addEventListener("keypress", GLFW.onKeyPress, true);
      window.addEventListener("keyup", GLFW.onKeyup, true);
      window.addEventListener("mousemove", GLFW.onMousemove, true);
      window.addEventListener("mousedown", GLFW.onMouseButtonDown, true);
      window.addEventListener("mouseup", GLFW.onMouseButtonUp, true);
      window.addEventListener('DOMMouseScroll', GLFW.onMouseWheel, true);
      window.addEventListener('mousewheel', GLFW.onMouseWheel, true);
  
      __ATEXIT__.push({ func: function() {
        window.removeEventListener("keydown", GLFW.onKeydown, true);
        window.removeEventListener("keypress", GLFW.onKeyPress, true);
        window.removeEventListener("keyup", GLFW.onKeyup, true);
        window.removeEventListener("mousemove", GLFW.onMousemove, true);
        window.removeEventListener("mousedown", GLFW.onMouseButtonDown, true);
        window.removeEventListener("mouseup", GLFW.onMouseButtonUp, true);
        window.removeEventListener('DOMMouseScroll', GLFW.onMouseWheel, true);
        window.removeEventListener('mousewheel', GLFW.onMouseWheel, true);
        Module["canvas"].width = Module["canvas"].height = 1;
      }});
  
      //TODO: Init with correct values
      GLFW.params = new Array();
      GLFW.params[0x00030001] = true; // GLFW_MOUSE_CURSOR
      GLFW.params[0x00030002] = false; // GLFW_STICKY_KEYS
      GLFW.params[0x00030003] = true; // GLFW_STICKY_MOUSE_BUTTONS
      GLFW.params[0x00030004] = false; // GLFW_SYSTEM_KEYS
      GLFW.params[0x00030005] = false; // GLFW_KEY_REPEAT
      GLFW.params[0x00030006] = true; // GLFW_AUTO_POLL_EVENTS
      GLFW.params[0x00020001] = true; // GLFW_OPENED
      GLFW.params[0x00020002] = true; // GLFW_ACTIVE
      GLFW.params[0x00020003] = false; // GLFW_ICONIFIED
      GLFW.params[0x00020004] = true; // GLFW_ACCELERATED
      GLFW.params[0x00020005] = 0; // GLFW_RED_BITS
      GLFW.params[0x00020006] = 0; // GLFW_GREEN_BITS
      GLFW.params[0x00020007] = 0; // GLFW_BLUE_BITS
      GLFW.params[0x00020008] = 0; // GLFW_ALPHA_BITS
      GLFW.params[0x00020009] = 0; // GLFW_DEPTH_BITS
      GLFW.params[0x0002000A] = 0; // GLFW_STENCIL_BITS
      GLFW.params[0x0002000B] = 0; // GLFW_REFRESH_RATE
      GLFW.params[0x0002000C] = 0; // GLFW_ACCUM_RED_BITS
      GLFW.params[0x0002000D] = 0; // GLFW_ACCUM_GREEN_BITS
      GLFW.params[0x0002000E] = 0; // GLFW_ACCUM_BLUE_BITS
      GLFW.params[0x0002000F] = 0; // GLFW_ACCUM_ALPHA_BITS
      GLFW.params[0x00020010] = 0; // GLFW_AUX_BUFFERS
      GLFW.params[0x00020011] = 0; // GLFW_STEREO
      GLFW.params[0x00020012] = 0; // GLFW_WINDOW_NO_RESIZE
      GLFW.params[0x00020013] = 0; // GLFW_FSAA_SAMPLES
      GLFW.params[0x00020014] = 0; // GLFW_OPENGL_VERSION_MAJOR
      GLFW.params[0x00020015] = 0; // GLFW_OPENGL_VERSION_MINOR
      GLFW.params[0x00020016] = 0; // GLFW_OPENGL_FORWARD_COMPAT
      GLFW.params[0x00020017] = 0; // GLFW_OPENGL_DEBUG_CONTEXT
      GLFW.params[0x00020018] = 0; // GLFW_OPENGL_PROFILE
  
      GLFW.keys = new Array();
  
      return 1; // GL_TRUE
    }

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _glfwSwapBuffers() {}

  function ___cxa_guard_release() {}

  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }

  
  
  
  
  function _SDL_GetTicks() {
      return Math.floor(Date.now() - SDL.startTime);
    }var SDL={defaults:{width:320,height:200,copyOnLock:true},version:null,surfaces:{},canvasPool:[],events:[],fonts:[null],audios:[null],rwops:[null],music:{audio:null,volume:1},mixerFrequency:22050,mixerFormat:32784,mixerNumChannels:2,mixerChunkSize:1024,channelMinimumNumber:0,GL:false,glAttributes:{0:3,1:3,2:2,3:0,4:0,5:1,6:16,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:1,16:0,17:0,18:0},keyboardState:null,keyboardMap:{},canRequestFullscreen:false,isRequestingFullscreen:false,textInput:false,startTime:null,initFlags:0,buttonState:0,modState:0,DOMButtons:[0,0,0],DOMEventToSDLEvent:{},TOUCH_DEFAULT_ID:0,keyCodes:{16:1249,17:1248,18:1250,20:1081,33:1099,34:1102,35:1101,36:1098,37:1104,38:1106,39:1103,40:1105,44:316,45:1097,46:127,91:1251,93:1125,96:1122,97:1113,98:1114,99:1115,100:1116,101:1117,102:1118,103:1119,104:1120,105:1121,106:1109,107:1111,109:1110,110:1123,111:1108,112:1082,113:1083,114:1084,115:1085,116:1086,117:1087,118:1088,119:1089,120:1090,121:1091,122:1092,123:1093,124:1128,125:1129,126:1130,127:1131,128:1132,129:1133,130:1134,131:1135,132:1136,133:1137,134:1138,135:1139,144:1107,160:94,161:33,162:34,163:35,164:36,165:37,166:38,167:95,168:40,169:41,170:42,171:43,172:124,173:45,174:123,175:125,176:126,181:127,182:129,183:128,188:44,190:46,191:47,192:96,219:91,220:92,221:93,222:39},scanCodes:{8:42,9:43,13:40,27:41,32:44,35:204,39:53,44:54,46:55,47:56,48:39,49:30,50:31,51:32,52:33,53:34,54:35,55:36,56:37,57:38,58:203,59:51,61:46,91:47,92:49,93:48,96:52,97:4,98:5,99:6,100:7,101:8,102:9,103:10,104:11,105:12,106:13,107:14,108:15,109:16,110:17,111:18,112:19,113:20,114:21,115:22,116:23,117:24,118:25,119:26,120:27,121:28,122:29,127:76,305:224,308:226,316:70},loadRect:function (rect) {
        return {
          x: HEAP32[((rect + 0)>>2)],
          y: HEAP32[((rect + 4)>>2)],
          w: HEAP32[((rect + 8)>>2)],
          h: HEAP32[((rect + 12)>>2)]
        };
      },loadColorToCSSRGB:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgb(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ')';
      },loadColorToCSSRGBA:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgba(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ',' + (((rgba >> 24)&255)/255) + ')';
      },translateColorToCSSRGBA:function (rgba) {
        return 'rgba(' + (rgba&0xff) + ',' + (rgba>>8 & 0xff) + ',' + (rgba>>16 & 0xff) + ',' + (rgba>>>24)/0xff + ')';
      },translateRGBAToCSSRGBA:function (r, g, b, a) {
        return 'rgba(' + (r&0xff) + ',' + (g&0xff) + ',' + (b&0xff) + ',' + (a&0xff)/255 + ')';
      },translateRGBAToColor:function (r, g, b, a) {
        return r | g << 8 | b << 16 | a << 24;
      },makeSurface:function (width, height, flags, usePageCanvas, source, rmask, gmask, bmask, amask) {
        flags = flags || 0;
        var is_SDL_HWSURFACE = flags & 0x00000001;
        var is_SDL_HWPALETTE = flags & 0x00200000;
        var is_SDL_OPENGL = flags & 0x04000000;
  
        var surf = _malloc(60);
        var pixelFormat = _malloc(44);
        //surface with SDL_HWPALETTE flag is 8bpp surface (1 byte)
        var bpp = is_SDL_HWPALETTE ? 1 : 4;
        var buffer = 0;
  
        // preemptively initialize this for software surfaces,
        // otherwise it will be lazily initialized inside of SDL_LockSurface
        if (!is_SDL_HWSURFACE && !is_SDL_OPENGL) {
          buffer = _malloc(width * height * 4);
        }
  
        HEAP32[((surf)>>2)]=flags;
        HEAP32[(((surf)+(4))>>2)]=pixelFormat;
        HEAP32[(((surf)+(8))>>2)]=width;
        HEAP32[(((surf)+(12))>>2)]=height;
        HEAP32[(((surf)+(16))>>2)]=width * bpp;  // assuming RGBA or indexed for now,
                                                                                          // since that is what ImageData gives us in browsers
        HEAP32[(((surf)+(20))>>2)]=buffer;
        HEAP32[(((surf)+(36))>>2)]=0;
        HEAP32[(((surf)+(56))>>2)]=1;
  
        HEAP32[((pixelFormat)>>2)]=0 /* XXX missing C define SDL_PIXELFORMAT_RGBA8888 */;
        HEAP32[(((pixelFormat)+(4))>>2)]=0;// TODO
        HEAP8[(((pixelFormat)+(8))|0)]=bpp * 8;
        HEAP8[(((pixelFormat)+(9))|0)]=bpp;
  
        HEAP32[(((pixelFormat)+(12))>>2)]=rmask || 0x000000ff;
        HEAP32[(((pixelFormat)+(16))>>2)]=gmask || 0x0000ff00;
        HEAP32[(((pixelFormat)+(20))>>2)]=bmask || 0x00ff0000;
        HEAP32[(((pixelFormat)+(24))>>2)]=amask || 0xff000000;
  
        // Decide if we want to use WebGL or not
        SDL.GL = SDL.GL || is_SDL_OPENGL;
        var canvas;
        if (!usePageCanvas) {
          if (SDL.canvasPool.length > 0) {
            canvas = SDL.canvasPool.pop();
          } else {
            canvas = document.createElement('canvas');
          }
          canvas.width = width;
          canvas.height = height;
        } else {
          canvas = Module['canvas'];
        }
  
        var webGLContextAttributes = {
          antialias: ((SDL.glAttributes[13 /*SDL_GL_MULTISAMPLEBUFFERS*/] != 0) && (SDL.glAttributes[14 /*SDL_GL_MULTISAMPLESAMPLES*/] > 1)),
          depth: (SDL.glAttributes[6 /*SDL_GL_DEPTH_SIZE*/] > 0),
          stencil: (SDL.glAttributes[7 /*SDL_GL_STENCIL_SIZE*/] > 0)
        };
        
        var ctx = Browser.createContext(canvas, is_SDL_OPENGL, usePageCanvas, webGLContextAttributes);
              
        SDL.surfaces[surf] = {
          width: width,
          height: height,
          canvas: canvas,
          ctx: ctx,
          surf: surf,
          buffer: buffer,
          pixelFormat: pixelFormat,
          alpha: 255,
          flags: flags,
          locked: 0,
          usePageCanvas: usePageCanvas,
          source: source,
  
          isFlagSet: function(flag) {
            return flags & flag;
          }
        };
  
        return surf;
      },copyIndexedColorData:function (surfData, rX, rY, rW, rH) {
        // HWPALETTE works with palette
        // setted by SDL_SetColors
        if (!surfData.colors) {
          return;
        }
        
        var fullWidth  = Module['canvas'].width;
        var fullHeight = Module['canvas'].height;
  
        var startX  = rX || 0;
        var startY  = rY || 0;
        var endX    = (rW || (fullWidth - startX)) + startX;
        var endY    = (rH || (fullHeight - startY)) + startY;
        
        var buffer  = surfData.buffer;
        var data    = surfData.image.data;
        var colors  = surfData.colors;
  
        for (var y = startY; y < endY; ++y) {
          var indexBase = y * fullWidth;
          var colorBase = indexBase * 4;
          for (var x = startX; x < endX; ++x) {
            // HWPALETTE have only 256 colors (not rgba)
            var index = HEAPU8[((buffer + indexBase + x)|0)] * 3;
            var colorOffset = colorBase + x * 4;
  
            data[colorOffset   ] = colors[index   ];
            data[colorOffset +1] = colors[index +1];
            data[colorOffset +2] = colors[index +2];
            //unused: data[colorOffset +3] = color[index +3];
          }
        }
      },freeSurface:function (surf) {
        var refcountPointer = surf + 56;
        var refcount = HEAP32[((refcountPointer)>>2)];
        if (refcount > 1) {
          HEAP32[((refcountPointer)>>2)]=refcount - 1;
          return;
        }
  
        var info = SDL.surfaces[surf];
        if (!info.usePageCanvas && info.canvas) SDL.canvasPool.push(info.canvas);
        if (info.buffer) _free(info.buffer);
        _free(info.pixelFormat);
        _free(surf);
        SDL.surfaces[surf] = null;
  
        if (surf === SDL.screen) {
          SDL.screen = null;
        }
      },downFingers:{},savedKeydown:null,receiveEvent:function (event) {
        switch(event.type) {
          case 'touchstart': case 'touchmove': {
            event.preventDefault();
  
            var touches = [];
            
            // Clear out any touchstart events that we've already processed
            if (event.type === 'touchstart') {
              for (var i = 0; i < event.touches.length; i++) {
                var touch = event.touches[i];
                if (SDL.downFingers[touch.identifier] != true) {
                  SDL.downFingers[touch.identifier] = true;
                  touches.push(touch);
                }
              }
            } else {
              touches = event.touches;
            }
            
            var firstTouch = touches[0];
            if (event.type == 'touchstart') {
              SDL.DOMButtons[0] = 1;
            }
            var mouseEventType;
            switch(event.type) {
              case 'touchstart': mouseEventType = 'mousedown'; break;
              case 'touchmove': mouseEventType = 'mousemove'; break;
            }
            var mouseEvent = {
              type: mouseEventType,
              button: 0,
              pageX: firstTouch.clientX,
              pageY: firstTouch.clientY
            };
            SDL.events.push(mouseEvent);
  
            for (var i = 0; i < touches.length; i++) {
              var touch = touches[i];
              SDL.events.push({
                type: event.type,
                touch: touch
              });
            };
            break;
          }
          case 'touchend': {
            event.preventDefault();
            
            // Remove the entry in the SDL.downFingers hash
            // because the finger is no longer down.
            for(var i = 0; i < event.changedTouches.length; i++) {
              var touch = event.changedTouches[i];
              if (SDL.downFingers[touch.identifier] === true) {
                delete SDL.downFingers[touch.identifier];
              }
            }
  
            var mouseEvent = {
              type: 'mouseup',
              button: 0,
              pageX: event.changedTouches[0].clientX,
              pageY: event.changedTouches[0].clientY
            };
            SDL.DOMButtons[0] = 0;
            SDL.events.push(mouseEvent);
            
            for (var i = 0; i < event.changedTouches.length; i++) {
              var touch = event.changedTouches[i];
              SDL.events.push({
                type: 'touchend',
                touch: touch
              });
            };
            break;
          }
          case 'mousemove':
            if (SDL.DOMButtons[0] === 1) {
              SDL.events.push({
                type: 'touchmove',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
            }
            if (Browser.pointerLock) {
              // workaround for firefox bug 750111
              if ('mozMovementX' in event) {
                event['movementX'] = event['mozMovementX'];
                event['movementY'] = event['mozMovementY'];
              }
              // workaround for Firefox bug 782777
              if (event['movementX'] == 0 && event['movementY'] == 0) {
                // ignore a mousemove event if it doesn't contain any movement info
                // (without pointer lock, we infer movement from pageX/pageY, so this check is unnecessary)
                event.preventDefault();
                return;
              }
            }
            // fall through
          case 'keydown': case 'keyup': case 'keypress': case 'mousedown': case 'mouseup': case 'DOMMouseScroll': case 'mousewheel':
            // If we preventDefault on keydown events, the subsequent keypress events
            // won't fire. However, it's fine (and in some cases necessary) to
            // preventDefault for keys that don't generate a character. Otherwise,
            // preventDefault is the right thing to do in general.
            if (event.type !== 'keydown' || (!SDL.unicode && !SDL.textInput) || (event.keyCode === 8 /* backspace */ || event.keyCode === 9 /* tab */)) {
              event.preventDefault();
            }
  
            if (event.type == 'DOMMouseScroll' || event.type == 'mousewheel') {
              var button = Browser.getMouseWheelDelta(event) > 0 ? 4 : 3;
              var event2 = {
                type: 'mousedown',
                button: button,
                pageX: event.pageX,
                pageY: event.pageY
              };
              SDL.events.push(event2);
              event = {
                type: 'mouseup',
                button: button,
                pageX: event.pageX,
                pageY: event.pageY
              };
            } else if (event.type == 'mousedown') {
              SDL.DOMButtons[event.button] = 1;
              SDL.events.push({
                type: 'touchstart',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
            } else if (event.type == 'mouseup') {
              // ignore extra ups, can happen if we leave the canvas while pressing down, then return,
              // since we add a mouseup in that case
              if (!SDL.DOMButtons[event.button]) {
                return;
              }
  
              SDL.events.push({
                type: 'touchend',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
              SDL.DOMButtons[event.button] = 0;
            }
  
            // We can only request fullscreen as the result of user input.
            // Due to this limitation, we toggle a boolean on keydown which
            // SDL_WM_ToggleFullScreen will check and subsequently set another
            // flag indicating for us to request fullscreen on the following
            // keyup. This isn't perfect, but it enables SDL_WM_ToggleFullScreen
            // to work as the result of a keypress (which is an extremely
            // common use case).
            if (event.type === 'keydown' || event.type === 'mousedown') {
              SDL.canRequestFullscreen = true;
            } else if (event.type === 'keyup' || event.type === 'mouseup') {
              if (SDL.isRequestingFullscreen) {
                Module['requestFullScreen'](true, true);
                SDL.isRequestingFullscreen = false;
              }
              SDL.canRequestFullscreen = false;
            }
  
            // SDL expects a unicode character to be passed to its keydown events.
            // Unfortunately, the browser APIs only provide a charCode property on
            // keypress events, so we must backfill in keydown events with their
            // subsequent keypress event's charCode.
            if (event.type === 'keypress' && SDL.savedKeydown) {
              // charCode is read-only
              SDL.savedKeydown.keypressCharCode = event.charCode;
              SDL.savedKeydown = null;
            } else if (event.type === 'keydown') {
              SDL.savedKeydown = event;
            }
  
            // Don't push keypress events unless SDL_StartTextInput has been called.
            if (event.type !== 'keypress' || SDL.textInput) {
              SDL.events.push(event);
            }
            break;
          case 'mouseout':
            // Un-press all pressed mouse buttons, because we might miss the release outside of the canvas
            for (var i = 0; i < 3; i++) {
              if (SDL.DOMButtons[i]) {
                SDL.events.push({
                  type: 'mouseup',
                  button: i,
                  pageX: event.pageX,
                  pageY: event.pageY
                });
                SDL.DOMButtons[i] = 0;
              }
            }
            event.preventDefault();
            break;
          case 'blur':
          case 'visibilitychange': {
            // Un-press all pressed keys: TODO
            for (var code in SDL.keyboardMap) {
              SDL.events.push({
                type: 'keyup',
                keyCode: SDL.keyboardMap[code]
              });
            }
            event.preventDefault();
            break;
          }
          case 'unload':
            if (Browser.mainLoop.runner) {
              SDL.events.push(event);
              // Force-run a main event loop, since otherwise this event will never be caught!
              Browser.mainLoop.runner();
            }
            return;
          case 'resize':
            SDL.events.push(event);
            // manually triggered resize event doesn't have a preventDefault member
            if (event.preventDefault) {
              event.preventDefault();
            }
            break;
        }
        if (SDL.events.length >= 10000) {
          Module.printErr('SDL event queue full, dropping events');
          SDL.events = SDL.events.slice(0, 10000);
        }
        return;
      },handleEvent:function (event) {
        if (event.handled) return;
        event.handled = true;
  
        switch (event.type) {
          case 'touchstart': case 'touchend': case 'touchmove': {
            Browser.calculateMouseEvent(event);
            break;
          }
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            var code = event.keyCode;
            if (code >= 65 && code <= 90) {
              code += 32; // make lowercase for SDL
            } else {
              code = SDL.keyCodes[event.keyCode] || event.keyCode;
            }
  
            HEAP8[(((SDL.keyboardState)+(code))|0)]=down;
            // TODO: lmeta, rmeta, numlock, capslock, KMOD_MODE, KMOD_RESERVED
            SDL.modState = (HEAP8[(((SDL.keyboardState)+(1248))|0)] ? 0x0040 | 0x0080 : 0) | // KMOD_LCTRL & KMOD_RCTRL
              (HEAP8[(((SDL.keyboardState)+(1249))|0)] ? 0x0001 | 0x0002 : 0) | // KMOD_LSHIFT & KMOD_RSHIFT
              (HEAP8[(((SDL.keyboardState)+(1250))|0)] ? 0x0100 | 0x0200 : 0); // KMOD_LALT & KMOD_RALT
  
            if (down) {
              SDL.keyboardMap[code] = event.keyCode; // save the DOM input, which we can use to unpress it during blur
            } else {
              delete SDL.keyboardMap[code];
            }
  
            break;
          }
          case 'mousedown': case 'mouseup':
            if (event.type == 'mousedown') {
              // SDL_BUTTON(x) is defined as (1 << ((x)-1)).  SDL buttons are 1-3,
              // and DOM buttons are 0-2, so this means that the below formula is
              // correct.
              SDL.buttonState |= 1 << event.button;
            } else if (event.type == 'mouseup') {
              SDL.buttonState &= ~(1 << event.button);
            }
            // fall through
          case 'mousemove': {
            Browser.calculateMouseEvent(event);
            break;
          }
        }
      },makeCEvent:function (event, ptr) {
        if (typeof event === 'number') {
          // This is a pointer to a native C event that was SDL_PushEvent'ed
          _memcpy(ptr, event, 28); // XXX
          return;
        }
  
        SDL.handleEvent(event);
  
        switch (event.type) {
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            //Module.print('Received key event: ' + event.keyCode);
            var key = event.keyCode;
            if (key >= 65 && key <= 90) {
              key += 32; // make lowercase for SDL
            } else {
              key = SDL.keyCodes[event.keyCode] || event.keyCode;
            }
            var scan;
            if (key >= 1024) {
              scan = key - 1024;
            } else {
              scan = SDL.scanCodes[key] || key;
            }
  
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(8))|0)]=down ? 1 : 0;
            HEAP8[(((ptr)+(9))|0)]=0; // TODO
            HEAP32[(((ptr)+(12))>>2)]=scan;
            HEAP32[(((ptr)+(16))>>2)]=key;
            HEAP16[(((ptr)+(20))>>1)]=SDL.modState;
            // some non-character keys (e.g. backspace and tab) won't have keypressCharCode set, fill in with the keyCode.
            HEAP32[(((ptr)+(24))>>2)]=event.keypressCharCode || key;
  
            break;
          }
          case 'keypress': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            // Not filling in windowID for now
            var cStr = intArrayFromString(String.fromCharCode(event.charCode));
            for (var i = 0; i < cStr.length; ++i) {
              HEAP8[(((ptr)+(8 + i))|0)]=cStr[i];
            }
            break;
          }
          case 'mousedown': case 'mouseup': case 'mousemove': {
            if (event.type != 'mousemove') {
              var down = event.type === 'mousedown';
              HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP32[(((ptr)+(4))>>2)]=0;
              HEAP32[(((ptr)+(8))>>2)]=0;
              HEAP32[(((ptr)+(12))>>2)]=0;
              HEAP8[(((ptr)+(16))|0)]=event.button+1; // DOM buttons are 0-2, SDL 1-3
              HEAP8[(((ptr)+(17))|0)]=down ? 1 : 0;
              HEAP32[(((ptr)+(20))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(24))>>2)]=Browser.mouseY;
            } else {
              HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP32[(((ptr)+(4))>>2)]=0;
              HEAP32[(((ptr)+(8))>>2)]=0;
              HEAP32[(((ptr)+(12))>>2)]=0;
              HEAP32[(((ptr)+(16))>>2)]=SDL.buttonState;
              HEAP32[(((ptr)+(20))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(24))>>2)]=Browser.mouseY;
              HEAP32[(((ptr)+(28))>>2)]=Browser.mouseMovementX;
              HEAP32[(((ptr)+(32))>>2)]=Browser.mouseMovementY;
            }
            break;
          }
          case 'touchstart': case 'touchend': case 'touchmove': {
            var touch = event.touch;
            var w = Module['canvas'].width;
            var h = Module['canvas'].height;
            var x = Browser.touches[touch.identifier].x / w;
            var y = Browser.touches[touch.identifier].y / h;
            var lx = Browser.lastTouches[touch.identifier].x / w;
            var ly = Browser.lastTouches[touch.identifier].y / h;
            var dx = x - lx;
            var dy = y - ly;
            if (touch['deviceID'] === undefined) touch.deviceID = SDL.TOUCH_DEFAULT_ID;
            if (dx === 0 && dy === 0 && event.type === 'touchmove') return; // don't send these if nothing happened
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=_SDL_GetTicks();
            (tempI64 = [touch.deviceID>>>0,(tempDouble=touch.deviceID,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[(((ptr)+(8))>>2)]=tempI64[0],HEAP32[(((ptr)+(12))>>2)]=tempI64[1]);
            (tempI64 = [touch.identifier>>>0,(tempDouble=touch.identifier,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[(((ptr)+(16))>>2)]=tempI64[0],HEAP32[(((ptr)+(20))>>2)]=tempI64[1]);
            HEAPF32[(((ptr)+(24))>>2)]=x;
            HEAPF32[(((ptr)+(28))>>2)]=y;
            HEAPF32[(((ptr)+(32))>>2)]=dx;
            HEAPF32[(((ptr)+(36))>>2)]=dy;
            if (touch.force !== undefined) {
              HEAPF32[(((ptr)+(40))>>2)]=touch.force;
            } else { // No pressure data, send a digital 0/1 pressure.
              HEAPF32[(((ptr)+(40))>>2)]=event.type == "touchend" ? 0 : 1;
            }
            break;
          }
          case 'unload': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            break;
          }
          case 'resize': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=event.w;
            HEAP32[(((ptr)+(8))>>2)]=event.h;
            break;
          }
          case 'joystick_button_up': case 'joystick_button_down': {
            var state = event.type === 'joystick_button_up' ? 0 : 1;
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(4))|0)]=event.index;
            HEAP8[(((ptr)+(5))|0)]=event.button;
            HEAP8[(((ptr)+(6))|0)]=state;
            break;
          }
          case 'joystick_axis_motion': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(4))|0)]=event.index;
            HEAP8[(((ptr)+(5))|0)]=event.axis;
            HEAP32[(((ptr)+(8))>>2)]=SDL.joystickAxisValueConversion(event.value);
            break;
          }
          default: throw 'Unhandled SDL event: ' + event.type;
        }
      },estimateTextWidth:function (fontData, text) {
        var h = fontData.size;
        var fontString = h + 'px ' + fontData.name;
        var tempCtx = SDL.ttfContext;
        tempCtx.save();
        tempCtx.font = fontString;
        var ret = tempCtx.measureText(text).width | 0;
        tempCtx.restore();
        return ret;
      },allocateChannels:function (num) { // called from Mix_AllocateChannels and init
        if (SDL.numChannels && SDL.numChannels >= num && num != 0) return;
        SDL.numChannels = num;
        SDL.channels = [];
        for (var i = 0; i < num; i++) {
          SDL.channels[i] = {
            audio: null,
            volume: 1.0
          };
        }
      },setGetVolume:function (info, volume) {
        if (!info) return 0;
        var ret = info.volume * 128; // MIX_MAX_VOLUME
        if (volume != -1) {
          info.volume = volume / 128;
          if (info.audio) info.audio.volume = info.volume;
        }
        return ret;
      },fillWebAudioBufferFromHeap:function (heapPtr, sizeSamplesPerChannel, dstAudioBuffer) {
        // The input audio data is interleaved across the channels, i.e. [L, R, L, R, L, R, ...] and is either 8-bit or 16-bit as
        // supported by the SDL API. The output audio wave data for Web Audio API must be in planar buffers of [-1,1]-normalized Float32 data,
        // so perform a buffer conversion for the data.
        var numChannels = SDL.audio.channels;
        for(var c = 0; c < numChannels; ++c) {
          var channelData = dstAudioBuffer['getChannelData'](c);
          if (channelData.length != sizeSamplesPerChannel) {
            throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + sizeSamplesPerChannel + ' samples!';
          }
          if (SDL.audio.format == 0x8010 /*AUDIO_S16LSB*/) {
            for(var j = 0; j < sizeSamplesPerChannel; ++j) {
              channelData[j] = (HEAP16[(((heapPtr)+((j*numChannels + c)*2))>>1)]) / 0x8000;
            }
          } else if (SDL.audio.format == 0x0008 /*AUDIO_U8*/) {
            for(var j = 0; j < sizeSamplesPerChannel; ++j) {
              var v = (HEAP8[(((heapPtr)+(j*numChannels + c))|0)]);
              channelData[j] = ((v >= 0) ? v-128 : v+128) /128;
            }
          }
        }
      },debugSurface:function (surfData) {
        console.log('dumping surface ' + [surfData.surf, surfData.source, surfData.width, surfData.height]);
        var image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
        var data = image.data;
        var num = Math.min(surfData.width, surfData.height);
        for (var i = 0; i < num; i++) {
          console.log('   diagonal ' + i + ':' + [data[i*surfData.width*4 + i*4 + 0], data[i*surfData.width*4 + i*4 + 1], data[i*surfData.width*4 + i*4 + 2], data[i*surfData.width*4 + i*4 + 3]]);
        }
      },joystickEventState:1,lastJoystickState:{},joystickNamePool:{},recordJoystickState:function (joystick, state) {
        // Standardize button state.
        var buttons = new Array(state.buttons.length);
        for (var i = 0; i < state.buttons.length; i++) {
          buttons[i] = SDL.getJoystickButtonState(state.buttons[i]);
        }
  
        SDL.lastJoystickState[joystick] = {
          buttons: buttons,
          axes: state.axes.slice(0),
          timestamp: state.timestamp,
          index: state.index,
          id: state.id
        };
      },getJoystickButtonState:function (button) {
        if (typeof button === 'object') {
          // Current gamepad API editor's draft (Firefox Nightly)
          // https://dvcs.w3.org/hg/gamepad/raw-file/default/gamepad.html#idl-def-GamepadButton
          return button.pressed;
        } else {
          // Current gamepad API working draft (Firefox / Chrome Stable)
          // http://www.w3.org/TR/2012/WD-gamepad-20120529/#gamepad-interface
          return button > 0;
        }
      },queryJoysticks:function () {
        for (var joystick in SDL.lastJoystickState) {
          var state = SDL.getGamepad(joystick - 1);
          var prevState = SDL.lastJoystickState[joystick];
          // Check only if the timestamp has differed.
          // NOTE: Timestamp is not available in Firefox.
          if (typeof state.timestamp !== 'number' || state.timestamp !== prevState.timestamp) {
            var i;
            for (i = 0; i < state.buttons.length; i++) {
              var buttonState = SDL.getJoystickButtonState(state.buttons[i]);
              // NOTE: The previous state already has a boolean representation of
              //       its button, so no need to standardize its button state here.
              if (buttonState !== prevState.buttons[i]) {
                // Insert button-press event.
                SDL.events.push({
                  type: buttonState ? 'joystick_button_down' : 'joystick_button_up',
                  joystick: joystick,
                  index: joystick - 1,
                  button: i
                });
              }
            }
            for (i = 0; i < state.axes.length; i++) {
              if (state.axes[i] !== prevState.axes[i]) {
                // Insert axes-change event.
                SDL.events.push({
                  type: 'joystick_axis_motion',
                  joystick: joystick,
                  index: joystick - 1,
                  axis: i,
                  value: state.axes[i]
                });
              }
            }
  
            SDL.recordJoystickState(joystick, state);
          }
        }
      },joystickAxisValueConversion:function (value) {
        // Ensures that 0 is 0, 1 is 32767, and -1 is 32768.
        return Math.ceil(((value+1) * 32767.5) - 32768);
      },getGamepads:function () {
        var fcn = navigator.getGamepads || navigator.webkitGamepads || navigator.mozGamepads || navigator.gamepads || navigator.webkitGetGamepads;
        if (fcn !== undefined) {
          // The function must be applied on the navigator object.
          return fcn.apply(navigator);
        } else {
          return [];
        }
      },getGamepad:function (deviceIndex) {
        var gamepads = SDL.getGamepads();
        if (gamepads.length > deviceIndex && deviceIndex >= 0) {
          return gamepads[deviceIndex];
        }
        return null;
      }};function _SDL_LockSurface(surf) {
      var surfData = SDL.surfaces[surf];
  
      surfData.locked++;
      if (surfData.locked > 1) return 0;
  
      if (!surfData.buffer) {
        surfData.buffer = _malloc(surfData.width * surfData.height * 4);
        HEAP32[(((surf)+(20))>>2)]=surfData.buffer;
      }
  
      // Mark in C/C++-accessible SDL structure
      // SDL_Surface has the following fields: Uint32 flags, SDL_PixelFormat *format; int w, h; Uint16 pitch; void *pixels; ...
      // So we have fields all of the same size, and 5 of them before us.
      // TODO: Use macros like in library.js
      HEAP32[(((surf)+(20))>>2)]=surfData.buffer;
  
      if (surf == SDL.screen && Module.screenIsReadOnly && surfData.image) return 0;
  
      surfData.image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
      if (surf == SDL.screen) {
        var data = surfData.image.data;
        var num = data.length;
        for (var i = 0; i < num/4; i++) {
          data[i*4+3] = 255; // opacity, as canvases blend alpha
        }
      }
  
      if (SDL.defaults.copyOnLock) {
        // Copy pixel data to somewhere accessible to 'C/C++'
        if (surfData.isFlagSet(0x00200000 /* SDL_HWPALETTE */)) {
          // If this is neaded then
          // we should compact the data from 32bpp to 8bpp index.
          // I think best way to implement this is use
          // additional colorMap hash (color->index).
          // Something like this:
          //
          // var size = surfData.width * surfData.height;
          // var data = '';
          // for (var i = 0; i<size; i++) {
          //   var color = SDL.translateRGBAToColor(
          //     surfData.image.data[i*4   ], 
          //     surfData.image.data[i*4 +1], 
          //     surfData.image.data[i*4 +2], 
          //     255);
          //   var index = surfData.colorMap[color];
          //   HEAP8[(((surfData.buffer)+(i))|0)]=index;
          // }
          throw 'CopyOnLock is not supported for SDL_LockSurface with SDL_HWPALETTE flag set' + new Error().stack;
        } else {
        HEAPU8.set(surfData.image.data, surfData.buffer);
        }
      }
  
      return 0;
    }
  
  function _SDL_FreeRW(rwopsID) {
      SDL.rwops[rwopsID] = null;
      while (SDL.rwops.length > 0 && SDL.rwops[SDL.rwops.length-1] === null) {
        SDL.rwops.pop();
      }
    }function _IMG_Load_RW(rwopsID, freeSrc) {
      try {
        // stb_image integration support
        function cleanup() {
          if (rwops && freeSrc) _SDL_FreeRW(rwopsID);
        };
        function addCleanup(func) {
          var old = cleanup;
          cleanup = function added_cleanup() {
            old();
            func();
          }
        }
        function callStbImage(func, params) {
          var x = Module['_malloc'](4);
          var y = Module['_malloc'](4);
          var comp = Module['_malloc'](4);
          addCleanup(function() {
            Module['_free'](x);
            Module['_free'](y);
            Module['_free'](comp);
            if (data) Module['_stbi_image_free'](data);
          });
          var data = Module['_' + func].apply(null, params.concat([x, y, comp, 0]));
          if (!data) return null;
          return {
            rawData: true,
            data: data,
            width: HEAP32[((x)>>2)],
            height: HEAP32[((y)>>2)],
            size: HEAP32[((x)>>2)] * HEAP32[((y)>>2)] * HEAP32[((comp)>>2)],
            bpp: HEAP32[((comp)>>2)]
          };
        }
  
        var rwops = SDL.rwops[rwopsID];
        if (rwops === undefined) {
          return 0;
        }
  
        var filename = rwops.filename;
        if (filename === undefined) {
          Runtime.warnOnce('Only file names that have been preloaded are supported for IMG_Load_RW. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js)');
          return 0;
        }
  
        if (!raw) {
          filename = PATH.resolve(filename);
          var raw = Module["preloadedImages"][filename];
          if (!raw) {
            if (raw === null) Module.printErr('Trying to reuse preloaded image, but freePreloadedMediaOnUse is set!');
            Runtime.warnOnce('Cannot find preloaded image ' + filename);
            Runtime.warnOnce('Cannot find preloaded image ' + filename + '. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js)');
            return 0;
          } else if (Module['freePreloadedMediaOnUse']) {
            Module["preloadedImages"][filename] = null;
          }
        }
  
        var surf = SDL.makeSurface(raw.width, raw.height, 0, false, 'load:' + filename);
        var surfData = SDL.surfaces[surf];
        surfData.ctx.globalCompositeOperation = "copy";
        if (!raw.rawData) {
          surfData.ctx.drawImage(raw, 0, 0, raw.width, raw.height, 0, 0, raw.width, raw.height);
        } else {
          var imageData = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
          if (raw.bpp == 4) {
            imageData.data.set(HEAPU8.subarray((raw.data),(raw.data+raw.size)));
          } else if (raw.bpp == 3) {
            var pixels = raw.size/3;
            var data = imageData.data;
            var sourcePtr = raw.data;
            var destPtr = 0;
            for (var i = 0; i < pixels; i++) {
              data[destPtr++] = HEAPU8[((sourcePtr++)|0)];
              data[destPtr++] = HEAPU8[((sourcePtr++)|0)];
              data[destPtr++] = HEAPU8[((sourcePtr++)|0)];
              data[destPtr++] = 255;
            }
          } else {
            Module.printErr('cannot handle bpp ' + raw.bpp);
            return 0;
          }
          surfData.ctx.putImageData(imageData, 0, 0);
        }
        surfData.ctx.globalCompositeOperation = "source-over";
        // XXX SDL does not specify that loaded images must have available pixel data, in fact
        //     there are cases where you just want to blit them, so you just need the hardware
        //     accelerated version. However, code everywhere seems to assume that the pixels
        //     are in fact available, so we retrieve it here. This does add overhead though.
        _SDL_LockSurface(surf);
        surfData.locked--; // The surface is not actually locked in this hack
        if (SDL.GL) {
          // After getting the pixel data, we can free the canvas and context if we do not need to do 2D canvas blitting
          surfData.canvas = surfData.ctx = null;
        }
        return surf;
      } finally {
        cleanup();
      }
    }
  
  function _SDL_RWFromFile(_name, mode) {
      var id = SDL.rwops.length; // TODO: recycle ids when they are null
      var name = Pointer_stringify(_name)
      SDL.rwops.push({ filename: name, mimetype: Browser.getMimetype(name) });
      return id;
    }function _IMG_Load(filename){
      var rwops = _SDL_RWFromFile(filename);
      var result = _IMG_Load_RW(rwops, 1);
      return result;
    }

  function _uselocale(locale) {
      return 0;
    }

  function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }

  function _glDisableVertexAttribArray(index) {
      GLctx.disableVertexAttribArray(index);
    }


  function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {
      if (pixels) {
        var data = GL.getTexPixelData(type, format, width, height, pixels, internalFormat);
        pixels = data.pixels;
        internalFormat = data.internalFormat;
      } else {
        pixels = null;
      }
      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function _glGetShaderInfoLog(shader, maxLength, length, infoLog) {
      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);
      // Work around a bug in Chromium which causes getShaderInfoLog to return null
      if (!log) log = '(unknown error)';
      log = log.substr(0, maxLength - 1);
      writeStringToMemory(log, infoLog);
      if (length) {
        HEAP32[((length)>>2)]=log.length
      }
    }

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)]
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls(Math.floor(year/100),2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ),
          // or by no characters if no timezone is determinable. 
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich). 
          // If tm_isdst is zero, the standard time offset is used. 
          // If tm_isdst is greater than zero, the daylight savings time offset is used. 
          // If tm_isdst is negative, no characters are returned. 
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%Z': function(date) {
          // Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [ tm_isdst]
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }

  function _glfwSetMouseButtonCallback(cbfun) {
      GLFW.mouseButtonFunc = cbfun;
    }


  function _glfwOpenWindowHint(target, hint) {
      GLFW.params[target] = hint;
    }

  function _glEnable(x0) { GLctx.enable(x0) }

  var _fabs=Math_abs;

  var _getc=_fgetc;

  function _glShaderSource(shader, count, string, length) {
      var source = GL.getSource(shader, count, string, length);
      GLctx.shaderSource(GL.shaders[shader], source);
    }

  function _glGenBuffers(n, buffers) {
      for (var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.buffers);
        var buffer = GLctx.createBuffer();
        buffer.name = id;
        GL.buffers[id] = buffer;
        HEAP32[(((buffers)+(i*4))>>2)]=id;
      }
    }

  function ___cxa_allocate_exception(size) {
      var ptr = _malloc(size + ___cxa_exception_header_size);
      return ptr + ___cxa_exception_header_size;
    }

  function _glDeleteShader(shader) {
      GLctx.deleteShader(GL.shaders[shader]);
      GL.shaders[shader] = null;
    }

  var _fmodl=_fmod;

  function _glCreateProgram() {
      var id = GL.getNewId(GL.programs);
      var program = GLctx.createProgram();
      program.name = id;
      GL.programs[id] = program;
      return id;
    }

  var _ceilf=Math_ceil;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  
  function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }function _vasprintf(s, format, va_arg) {
      return _asprintf(s, format, HEAP32[((va_arg)>>2)]);
    }

  function _glfwPollEvents() {}

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _glDepthMask(x0) { GLctx.depthMask(x0) }

  function _glUniformMatrix4fv(location, count, transpose, value) {
      location = GL.uniforms[location];
      var view;
      if (count == 1) {
        // avoid allocation for the common case of uploading one uniform matrix
        view = GL.miniTempBufferViews[15];
        for (var i = 0; i < 16; i++) {
          view[i] = HEAPF32[(((value)+(i*4))>>2)];
        }
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*64)>>2);
      }
      GLctx.uniformMatrix4fv(location, transpose, view);
    }

  var _BItoD=true;

  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }

  function _glfwSetKeyCallback(cbfun) {
      GLFW.keyFunc = cbfun;
    }

  function _glDeleteBuffers(n, buffers) {
      for (var i = 0; i < n; i++) {
        var id = HEAP32[(((buffers)+(i*4))>>2)];
        var buffer = GL.buffers[id];
  
        // From spec: "glDeleteBuffers silently ignores 0's and names that do not
        // correspond to existing buffer objects."
        if (!buffer) continue;
  
        GLctx.deleteBuffer(buffer);
        buffer.name = 0;
        GL.buffers[id] = null;
  
        if (id == GL.currArrayBuffer) GL.currArrayBuffer = 0;
        if (id == GL.currElementArrayBuffer) GL.currElementArrayBuffer = 0;
      }
    }

  function _SDL_FreeSurface(surf) {
      if (surf) SDL.freeSurface(surf);
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var __ZTISt9exception=allocate([allocate([1,0,0,0,0,0,0], "i8", ALLOC_STATIC)+8, 0], "i32", ALLOC_STATIC);

  var ___dso_handle=allocate(1, "i32*", ALLOC_STATIC);



var GLctx; GL.init()
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);

var Math_min = Math.min;
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vid(index,a1,a2) {
  try {
    Module["dynCall_vid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iidd(index,a1,a2,a3) {
  try {
    return Module["dynCall_iidd"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viddi(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viddi"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vidd(index,a1,a2,a3) {
  try {
    Module["dynCall_vidd"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_di(index,a1) {
  try {
    return Module["dynCall_di"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env.___rand_seed|0;var p=env.__ZTISt9exception|0;var q=env.___dso_handle|0;var r=env._stderr|0;var s=env._stdin|0;var t=env._stdout|0;var u=0;var v=0;var w=0;var x=0;var y=+env.NaN,z=+env.Infinity;var A=0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0.0;var J=0;var K=0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=0;var S=0;var T=global.Math.floor;var U=global.Math.abs;var V=global.Math.sqrt;var W=global.Math.pow;var X=global.Math.cos;var Y=global.Math.sin;var Z=global.Math.tan;var _=global.Math.acos;var $=global.Math.asin;var aa=global.Math.atan;var ba=global.Math.atan2;var ca=global.Math.exp;var da=global.Math.log;var ea=global.Math.ceil;var fa=global.Math.imul;var ga=env.abort;var ha=env.assert;var ia=env.asmPrintInt;var ja=env.asmPrintFloat;var ka=env.min;var la=env.invoke_viiiii;var ma=env.invoke_vid;var na=env.invoke_vi;var oa=env.invoke_vii;var pa=env.invoke_ii;var qa=env.invoke_iidd;var ra=env.invoke_iiiiii;var sa=env.invoke_viddi;var ta=env.invoke_vidd;var ua=env.invoke_iiii;var va=env.invoke_viiiiid;var wa=env.invoke_viiiiiiii;var xa=env.invoke_viiiiii;var ya=env.invoke_di;var za=env.invoke_viiiiiii;var Aa=env.invoke_viiiiiid;var Ba=env.invoke_viiiiiiiii;var Ca=env.invoke_iii;var Da=env.invoke_iiiii;var Ea=env.invoke_viii;var Fa=env.invoke_v;var Ga=env.invoke_iiiiiiiii;var Ha=env.invoke_viiii;var Ia=env._glUseProgram;var Ja=env._fabs;var Ka=env._vsscanf;var La=env.__ZSt9terminatev;var Ma=env._glUniformMatrix4fv;var Na=env.___cxa_guard_acquire;var Oa=env._SDL_RWFromFile;var Pa=env._sscanf;var Qa=env.__ZSt18uncaught_exceptionv;var Ra=env.___ctype_toupper_loc;var Sa=env._glBindBuffer;var Ta=env._glGetShaderInfoLog;var Ua=env.__addDays;var Va=env._catgets;var Wa=env._sbrk;var Xa=env._glBlendFunc;var Ya=env._newlocale;var Za=env._glDisableVertexAttribArray;var _a=env.___cxa_begin_catch;var $a=env._glCreateShader;var ab=env.__parseInt64;var bb=env._cos;var cb=env._fileno;var db=env._glfwTerminate;var eb=env._fread;var fb=env._puts;var gb=env._IMG_Load;var hb=env._glUniform3f;var ib=env._glfwInit;var jb=env._write;var kb=env.__isLeapYear;var lb=env._glGenBuffers;var mb=env._glShaderSource;var nb=env.__ZNSt9exceptionD2Ev;var ob=env.___cxa_does_inherit;var pb=env._strtoll_l;var qb=env.___cxa_rethrow;var rb=env._catclose;var sb=env._glEnableVertexAttribArray;var tb=env._glVertexAttribPointer;var ub=env._send;var vb=env.___cxa_is_number_type;var wb=env._glfwOpenWindow;var xb=env.___cxa_free_exception;var yb=env.___cxa_find_matching_catch;var zb=env._isxdigit_l;var Ab=env._glDrawElements;var Bb=env.___cxa_guard_release;var Cb=env._SDL_LockSurface;var Db=env._strerror_r;var Eb=env.___setErrNo;var Fb=env._glDeleteTextures;var Gb=env._glDepthFunc;var Hb=env._isdigit_l;var Ib=env.___resumeException;var Jb=env._freelocale;var Kb=env._glTexImage2D;var Lb=env._glEnable;var Mb=env._printf;var Nb=env._glGenTextures;var Ob=env._sprintf;var Pb=env._vasprintf;var Qb=env._glAttachShader;var Rb=env._vsnprintf;var Sb=env._glCreateProgram;var Tb=env._strtoull_l;var Ub=env._read;var Vb=env._glfwOpenWindowHint;var Wb=env._fwrite;var Xb=env._time;var Yb=env._pthread_mutex_lock;var Zb=env._glfwSetMouseButtonCallback;var _b=env._catopen;var $b=env._exit;var ac=env._glfwPollEvents;var bc=env.___ctype_b_loc;var cc=env._fmod;var dc=env._sin;var ec=env._fabsf;var fc=env.___cxa_allocate_exception;var gc=env._ceilf;var hc=env._strtoll;var ic=env._glfwSetMousePosCallback;var jc=env._pwrite;var kc=env._glClearColor;var lc=env._uselocale;var mc=env._glBindTexture;var nc=env._snprintf;var oc=env.___errno_location;var pc=env.___cxa_end_catch;var qc=env._glfwSetCharCallback;var rc=env._SDL_FreeSurface;var sc=env._glUniform1i;var tc=env._strtoull;var uc=env._strftime;var vc=env._glDrawArrays;var wc=env._sinf;var xc=env._isxdigit;var yc=env._floorf;var zc=env._sqrtf;var Ac=env._glActiveTexture;var Bc=env._pthread_cond_broadcast;var Cc=env._recv;var Dc=env._fgetc;var Ec=env._glCompileShader;var Fc=env._sysconf;var Gc=env.__getFloat;var Hc=env._abort;var Ic=env._glDeleteBuffers;var Jc=env._glBufferData;var Kc=env._emscripten_async_wget_data;var Lc=env._isspace;var Mc=env.___cxa_pure_virtual;var Nc=env._pthread_cond_wait;var Oc=env._glDeleteShader;var Pc=env._SDL_GetTicks;var Qc=env._cosf;var Rc=env._glfwGetTime;var Sc=env._ungetc;var Tc=env._glLinkProgram;var Uc=env._SDL_FreeRW;var Vc=env._strftime_l;var Wc=env._fprintf;var Xc=env.__reallyNegative;var Yc=env._glUniform4f;var Zc=env._glGetUniformLocation;var _c=env._glTexParameteri;var $c=env._glClear;var ad=env._asprintf;var bd=env.__exit;var cd=env._IMG_Load_RW;var dd=env.__arraySum;var ed=env._emscripten_async_prepare_data;var fd=env._glGetShaderiv;var gd=env.___ctype_tolower_loc;var hd=env._atexit;var id=env._pthread_mutex_unlock;var jd=env._pread;var kd=env._mkport;var ld=env._fflush;var md=env._glfwSwapBuffers;var nd=env._emscripten_memcpy_big;var od=env._emscripten_set_main_loop;var pd=env.__scanString;var qd=env._glDepthMask;var rd=env._copysign;var sd=env._fputc;var td=env.___cxa_throw;var ud=env._glfwSetKeyCallback;var vd=env._glDisable;var wd=env._isdigit;var xd=env._strerror;var yd=env.__formatString;var zd=env._fputs;var Ad=0.0;
// EMSCRIPTEN_START_FUNCS
function Yd(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function Zd(){return i|0}function _d(a){a=a|0;i=a}function $d(a,b){a=a|0;b=b|0;if((u|0)==0){u=a;v=b}}function ae(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function be(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function ce(a){a=a|0;J=a}function de(a){a=a|0;K=a}function ee(a){a=a|0;L=a}function fe(a){a=a|0;M=a}function ge(a){a=a|0;N=a}function he(a){a=a|0;O=a}function ie(a){a=a|0;P=a}function je(a){a=a|0;Q=a}function ke(a){a=a|0;R=a}function le(a){a=a|0;S=a}function me(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;c[a>>2]=b;fb(8)|0;e=ws(52)|0;Ge(e,0,b);c[a+4>>2]=e;Lb(2929);Gb(513);i=d;return}function ne(a){a=a|0;var b=0,d=0;b=i;d=c[a+4>>2]|0;if((d|0)==0){i=b;return}Dd[c[(c[d>>2]|0)+4>>2]&255](d);i=b;return}function oe(a){a=a|0;var b=0,d=0;b=i;d=c[a+4>>2]|0;Jd[c[(c[d>>2]|0)+8>>2]&15](d,0.0,0.0);i=b;return}function pe(a){a=a|0;var b=0,d=0,e=0.0,f=0.0,h=0,j=0,k=0,l=0.0;b=i;i=i+64|0;d=b;kc(.9019607901573181,.9254902005195618,.9333333373069763,1.0);$c(16640);qd(0);Lb(3042);Xa(770,771);e=+g[1118];f=+g[1120];h=d+60|0;j=d+44|0;c[j>>2]=0;c[j+4>>2]=0;j=d+0|0;k=j+40|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(k|0));g[h>>2]=1.0;g[d>>2]=2.0/e;l=0.0-f;g[d+20>>2]=2.0/l;g[d+40>>2]=-2.0;h=d+48|0;g[h>>2]=-(e+0.0)/e;g[h+4>>2]=-(f+0.0)/l;g[h+8>>2]=-1.0;h=c[a+4>>2]|0;Id[c[(c[h>>2]|0)+12>>2]&15](h,0.0,0.0,d);vd(3042);qd(1);i=b;return}function qe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;ph(a,b,0.0,0.0,1.0,1.0);c[a>>2]=32;b=a+48|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[a+36>>2]=d;c[a+40>>2]=0;g[a+108>>2]=0.0;g[a+96>>2]=0.0;c[a+44>>2]=0;i=e;return}function re(b){b=b|0;var d=0;d=i;c[b>>2]=32;if(!((a[b+48|0]&1)==0)){ys(c[b+56>>2]|0)}rh(b);ys(b);i=d;return}function se(b){b=b|0;var d=0;d=i;c[b>>2]=32;if(!((a[b+48|0]&1)==0)){ys(c[b+56>>2]|0)}rh(b);i=d;return}function te(a,b,d){a=a|0;b=+b;d=+d;var e=0,f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0;e=i;f=a+40|0;c[f>>2]=(c[f>>2]|0)+16;h=a+44|0;j=c[h>>2]|0;if((j|0)>0){c[h>>2]=j+ -16}sh(a,b,d);d=+((c[f>>2]|0)>>>0);b=+X(+(d/2.0e3))*15.0+120.0;g[a+20>>2]=b;k=d/200.0;l=+Y(+k)+-7.0;g[a+24>>2]=l;m=+X(+k);k=m;g[a+60>>2]=k;n=b;b=k/57.5;o=b+-.44999998807907104;p=n+ +X(+o)*50.0;g[a+64>>2]=p;q=l;l=q+ +Y(+o)*50.0;g[a+68>>2]=l;g[a+72>>2]=k;o=p;p=b+-3.450000047683716;g[a+76>>2]=o+ +X(+p)*20.0;r=l;g[a+80>>2]=r+ +Y(+p)*20.0;p=k;l=+X(+(d/1.0e3))*5.0;g[a+84>>2]=p+l;d=b+-1.600000023841858;g[a+88>>2]=o+ +X(+d)*22.0;g[a+92>>2]=r+ +Y(+d)*22.0;f=a+96|0;d=+g[f>>2];g[f>>2]=d+(k-d)*.10000000149011612;d=b+-1.4500000476837158;s=o+ +X(+d)*12.0;g[a+100>>2]=s;o=r+ +Y(+d)*12.0;g[a+104>>2]=o;f=c[a+36>>2]|0;if((c[(c[f+112>>2]|0)+40>>2]|0)==0){t=l}else{t=m*10.0}j=f+48|0;h=c[j>>2]|0;if((h|0)==4){u=a+108|0;m=+g[u>>2];l=m+(25.0-m)*.20000000298023224;g[u>>2]=l;if(+U(+(l+-25.0))<5.0){c[j>>2]=5;v=l}else{v=l}}else if((h|0)==3){l=+g[f+52>>2]*-1.2000000476837158+20.0;g[a+108>>2]=l;v=l}else if((h|0)==7){v=-90.0}else{v=p+t}h=a+108|0;t=+g[h>>2];p=t+(v-t)*.10000000149011612;g[h>>2]=p;t=p/57.5+-.5099999904632568;g[a+112>>2]=s+ +X(+t)*119.0;g[a+116>>2]=o+ +Y(+t)*119.0;g[a+120>>2]=p;p=b+-1.75;g[a+124>>2]=n+ +X(+p)*70.0;g[a+128>>2]=q+ +Y(+p)*70.0;g[a+132>>2]=k;i=e;return}function ue(b,d,e,f){b=b|0;d=+d;e=+e;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0,C=0,D=0.0,E=0.0,F=0.0,G=0,H=0.0,I=0.0,J=0,K=0.0,L=0.0,M=0.0,N=0,O=0.0;h=i;i=i+96|0;j=h+84|0;k=h;l=h+12|0;m=h+24|0;n=h+36|0;o=h+48|0;p=h+60|0;q=h+72|0;th(b,d,e,f);r=b+36|0;if((a[(c[r>>2]|0)+40|0]|0)!=0){a[j]=12;s=j+1|0;a[s+0|0]=a[104|0]|0;a[s+1|0]=a[105|0]|0;a[s+2|0]=a[106|0]|0;a[s+3|0]=a[107|0]|0;a[s+4|0]=a[108|0]|0;a[s+5|0]=a[109|0]|0;a[j+7|0]=0;s=Eg(j)|0;if(!((a[j]&1)==0)){ys(c[j+8>>2]|0)}Fg(s,+g[b+124>>2]+d- +g[s+28>>2]*.5,+g[b+128>>2]+e- +g[s+32>>2]*.5,f,0,+g[b+132>>2])}s=ws(16)|0;j=k+8|0;c[j>>2]=s;c[k>>2]=17;c[k+4>>2]=11;t=s+0|0;u=112|0;v=t+11|0;do{a[t]=a[u]|0;t=t+1|0;u=u+1|0}while((t|0)<(v|0));a[s+11|0]=0;s=Eg(k)|0;if(!((a[k]&1)==0)){ys(c[j>>2]|0)}j=b+100|0;k=b+104|0;w=b+108|0;Fg(s,+g[j>>2]+d- +g[s+28>>2]*.5,+g[k>>2]+e- +g[s+32>>2]*.5,f,0,+g[w>>2]);a[l]=14;s=l+1|0;a[s+0|0]=a[128|0]|0;a[s+1|0]=a[129|0]|0;a[s+2|0]=a[130|0]|0;a[s+3|0]=a[131|0]|0;a[s+4|0]=a[132|0]|0;a[s+5|0]=a[133|0]|0;a[s+6|0]=a[134|0]|0;s=l+8|0;a[s]=0;x=Eg(l)|0;if(!((a[l]&1)==0)){ys(c[s>>2]|0)}Fg(x,+g[b+76>>2]+d- +g[x+28>>2]*.5,+g[b+80>>2]+e- +g[x+32>>2]*.5,f,0,+g[b+84>>2]);a[m]=14;x=m+1|0;a[x+0|0]=a[136|0]|0;a[x+1|0]=a[137|0]|0;a[x+2|0]=a[138|0]|0;a[x+3|0]=a[139|0]|0;a[x+4|0]=a[140|0]|0;a[x+5|0]=a[141|0]|0;a[x+6|0]=a[142|0]|0;x=m+8|0;a[x]=0;s=Eg(m)|0;if(!((a[m]&1)==0)){ys(c[x>>2]|0)}Fg(s,+g[b+64>>2]+d- +g[s+28>>2]*.5,+g[b+68>>2]+e- +g[s+32>>2]*.5,f,0,+g[b+72>>2]);if((c[b+44>>2]|0)<=0){a[n]=16;s=n+1|0;x=s;a[x]=1215586627;a[x+1|0]=4748385;a[x+2|0]=18548;a[x+3|0]=72;x=s+4|0;a[x]=828662117;a[x+1|0]=3236961;a[x+2|0]=12644;a[x+3|0]=49;a[n+9|0]=0;x=Eg(n)|0;if((a[n]&1)==0){y=x}else{ys(c[n+8>>2]|0);y=x}}else{y=Eg(b+48|0)|0}Fg(y,+g[b+88>>2]+d- +g[y+28>>2]*.5,+g[b+92>>2]+e- +g[y+32>>2]*.5,f,0,+g[b+96>>2]);if((c[(c[r>>2]|0)+48>>2]|0)==3){r=ws(16)|0;y=o+8|0;c[y>>2]=r;c[o>>2]=17;c[o+4>>2]=11;t=r+0|0;u=144|0;v=t+11|0;do{a[t]=a[u]|0;t=t+1|0;u=u+1|0}while((t|0)<(v|0));a[r+11|0]=0;r=Eg(o)|0;if(!((a[o]&1)==0)){ys(c[y>>2]|0)}Fg(r,+g[j>>2]+d- +g[r+28>>2]*.5,+g[k>>2]+e- +g[r+32>>2]*.5,f,0,0.0)}a[p]=14;r=p+1|0;a[r+0|0]=a[160|0]|0;a[r+1|0]=a[161|0]|0;a[r+2|0]=a[162|0]|0;a[r+3|0]=a[163|0]|0;a[r+4|0]=a[164|0]|0;a[r+5|0]=a[165|0]|0;a[r+6|0]=a[166|0]|0;r=p+8|0;a[r]=0;y=Eg(p)|0;if(!((a[p]&1)==0)){ys(c[r>>2]|0)}Fg(y,+g[j>>2]+d- +g[y+28>>2]*.5,+g[k>>2]+e- +g[y+32>>2]*.5,f,0,+g[w>>2]);a[q]=8;w=q+1|0;a[w]=1952542530;a[w+1|0]=7627119;a[w+2|0]=29793;a[w+3|0]=116;a[q+5|0]=0;w=Eg(q)|0;if((a[q]&1)==0){z=b+20|0;A=+g[z>>2];B=A+d;C=w+28|0;D=+g[C>>2];E=D*.5;F=B-E;G=b+24|0;H=+g[G>>2];I=H+e;J=w+32|0;K=+g[J>>2];L=K*.5;M=I-L;N=b+60|0;O=+g[N>>2];Fg(w,F,M,f,0,O);i=h;return}ys(c[q+8>>2]|0);z=b+20|0;A=+g[z>>2];B=A+d;C=w+28|0;D=+g[C>>2];E=D*.5;F=B-E;G=b+24|0;H=+g[G>>2];I=H+e;J=w+32|0;K=+g[J>>2];L=K*.5;M=I-L;N=b+60|0;O=+g[N>>2];Fg(w,F,M,f,0,O);i=h;return}function ve(a){a=a|0;return+(+g[a+112>>2])}function we(a){a=a|0;return+(+g[a+116>>2])}function xe(a,b){a=a|0;b=b|0;var d=0;d=i;_j(a+48|0,b)|0;c[a+44>>2]=3e3;i=d;return}function ye(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0.0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0;j=i;i=i+464|0;k=j;l=j+440|0;m=j+428|0;n=j+416|0;o=j+404|0;p=j+392|0;q=j+380|0;r=j+368|0;s=j+356|0;t=j+344|0;u=j+332|0;v=j+320|0;w=j+308|0;x=j+296|0;y=j+284|0;z=j+272|0;A=j+260|0;B=j+248|0;C=j+236|0;D=j+452|0;E=j+104|0;F=j+80|0;G=j+68|0;H=j+56|0;I=j+92|0;J=j+20|0;K=j+8|0;L=j+32|0;M=j+44|0;N=j+212|0;O=j+116|0;P=j+128|0;Q=j+140|0;R=j+152|0;S=j+164|0;T=j+176|0;U=j+188|0;V=j+200|0;W=j+224|0;ph(b,d,0.0,0.0,10.0,10.0);c[b>>2]=200;c[b+36>>2]=e;e=b+40|0;c[e>>2]=f;g[b+48>>2]=0.0;switch((Ys()|0)%10|0|0){case 9:{g[b+24>>2]=200.0;break};case 8:case 7:{g[b+24>>2]=150.0;break};case 6:case 5:case 4:case 3:{g[b+24>>2]=100.0;break};case 2:case 1:{g[b+24>>2]=50.0;break};case 0:{g[b+24>>2]=0.0;break};default:{if((xi(272,280,46,0,k)|0)==0){c[k>>2]=280;c[k+4>>2]=46;Mb(312,k|0)|0;X=fc(8)|0;Y=ws(32)|0;c[q+8>>2]=Y;c[q>>2]=33;c[q+4>>2]=25;Z=Y+0|0;_=280|0;$=Z+25|0;do{a[Z]=a[_]|0;Z=Z+1|0;_=_+1|0}while((Z|0)<($|0));a[Y+25|0]=0;a[r]=2;a[r+1|0]=40;a[r+2|0]=0;ze(p,q,r);yi(s,46);ze(o,p,s);s=ws(32)|0;c[t+8>>2]=s;c[t>>2]=33;c[t+4>>2]=26;Z=s+0|0;_=336|0;$=Z+26|0;do{a[Z]=a[_]|0;Z=Z+1|0;_=_+1|0}while((Z|0)<($|0));a[s+26|0]=0;ze(n,o,t);a[u]=10;t=u+1|0;a[t+0|0]=a[272|0]|0;a[t+1|0]=a[273|0]|0;a[t+2|0]=a[274|0]|0;a[t+3|0]=a[275|0]|0;a[t+4|0]=a[276|0]|0;a[u+6|0]=0;ze(m,n,u);a[v]=4;u=v+1|0;a[u]=2599;a[u+1|0]=10;a[v+3|0]=0;ze(l,m,v);Fj(X,l);td(X|0,9992,51)}}}aa=+(f>>>0)*150.0+ +((((Ys()|0)>>>0)%50|0)>>>0)+20.0;f=b+24|0;g[f>>2]=+g[f>>2]+aa;X=Ys()|0;aa=+(((X>>>0)%(~~+Od[c[(c[d>>2]|0)+52>>2]&7](d)>>>0>>>0)|0)>>>0);d=b+20|0;g[d>>2]=h?-1.0e3:aa;h=b+44|0;a[h]=(Ys()|0)&1^1;X=c[e>>2]|0;if((X|0)==7){a[x]=20;Z=x+1|0;_=368|0;$=Z+10|0;do{a[Z]=a[_]|0;Z=Z+1|0;_=_+1|0}while((Z|0)<($|0));a[x+11|0]=0;l=sf(x)|0;if((a[l]&1)==0){c[w+0>>2]=c[l+0>>2];c[w+4>>2]=c[l+4>>2];c[w+8>>2]=c[l+8>>2]}else{v=c[l+8>>2]|0;m=c[l+4>>2]|0;if(m>>>0>4294967279){Vj(0)}if(m>>>0<11){a[w]=m<<1;ba=w+1|0}else{l=m+16&-16;u=ws(l)|0;c[w+8>>2]=u;c[w>>2]=l|1;c[w+4>>2]=m;ba=u}Ss(ba|0,v|0,m|0)|0;a[ba+m|0]=0}aa=+bi(w);if(!((a[w]&1)==0)){ys(c[w+8>>2]|0)}if(!((a[x]&1)==0)){ys(c[x+8>>2]|0)}g[f>>2]=aa+-90.0;g[d>>2]=280.0;a[h]=0;ca=c[e>>2]|0}else{ca=X}ai(z,ca,384);c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;ca=a[z]|0;X=(ca&1)==0;if(X){da=(ca&255)>>>1}else{da=c[z+4>>2]|0}ca=da+4|0;if(ca>>>0>4294967279){Vj(0)}if(ca>>>0<11){a[y]=8;ea=y+1|0}else{ca=da+20&-16;h=ws(ca)|0;c[y+8>>2]=h;c[y>>2]=ca|1;c[y+4>>2]=4;ea=h}a[ea]=1752394054;a[ea+1|0]=6845289;a[ea+2|0]=26739;a[ea+3|0]=104;a[ea+4|0]=0;if(X){fa=z+1|0}else{fa=c[z+8>>2]|0}ek(y,fa,da)|0;if(!((a[z]&1)==0)){ys(c[z+8>>2]|0)}Be(B,y,392);z=sf(B)|0;if((a[z]&1)==0){c[A+0>>2]=c[z+0>>2];c[A+4>>2]=c[z+4>>2];c[A+8>>2]=c[z+8>>2]}else{da=c[z+8>>2]|0;fa=c[z+4>>2]|0;if(fa>>>0>4294967279){Vj(0)}if(fa>>>0<11){a[A]=fa<<1;ga=A+1|0}else{z=fa+16&-16;X=ws(z)|0;c[A+8>>2]=X;c[A>>2]=z|1;c[A+4>>2]=fa;ga=X}Ss(ga|0,da|0,fa|0)|0;a[ga+fa|0]=0}c[b+56>>2]=ci(A)|0;if(!((a[A]&1)==0)){ys(c[A+8>>2]|0)}if(!((a[B]&1)==0)){ys(c[B+8>>2]|0)}Be(D,y,400);B=sf(D)|0;if((a[B]&1)==0){c[C+0>>2]=c[B+0>>2];c[C+4>>2]=c[B+4>>2];c[C+8>>2]=c[B+8>>2]}else{A=c[B+8>>2]|0;fa=c[B+4>>2]|0;if(fa>>>0>4294967279){Vj(0)}if(fa>>>0<11){a[C]=fa<<1;ha=C+1|0}else{B=fa+16&-16;ga=ws(B)|0;c[C+8>>2]=ga;c[C>>2]=B|1;c[C+4>>2]=fa;ha=ga}Ss(ha|0,A|0,fa|0)|0;a[ha+fa|0]=0}fa=b+60|0;g[fa>>2]=+bi(C);if(!((a[C]&1)==0)){ys(c[C+8>>2]|0)}if(!((a[D]&1)==0)){ys(c[D+8>>2]|0)}if(+g[fa>>2]>0.0){aa=+((Ys()|0)%400|0|0)/1.0e3;g[fa>>2]=aa+ +g[fa>>2]}Be(F,y,408);fa=sf(F)|0;if((a[fa]&1)==0){c[E+0>>2]=c[fa+0>>2];c[E+4>>2]=c[fa+4>>2];c[E+8>>2]=c[fa+8>>2]}else{D=c[fa+8>>2]|0;C=c[fa+4>>2]|0;if(C>>>0>4294967279){Vj(0)}if(C>>>0<11){a[E]=C<<1;ia=E+1|0}else{fa=C+16&-16;ha=ws(fa)|0;c[E+8>>2]=ha;c[E>>2]=fa|1;c[E+4>>2]=C;ia=ha}Ss(ia|0,D|0,C|0)|0;a[ia+C|0]=0}g[b+64>>2]=+((ci(E)|0)>>>0);if(!((a[E]&1)==0)){ys(c[E+8>>2]|0)}if(!((a[F]&1)==0)){ys(c[F+8>>2]|0)}Be(H,y,424);F=sf(H)|0;if((a[F]&1)==0){c[G+0>>2]=c[F+0>>2];c[G+4>>2]=c[F+4>>2];c[G+8>>2]=c[F+8>>2]}else{E=c[F+8>>2]|0;C=c[F+4>>2]|0;if(C>>>0>4294967279){Vj(0)}if(C>>>0<11){a[G]=C<<1;ja=G+1|0}else{F=C+16&-16;ia=ws(F)|0;c[G+8>>2]=ia;c[G>>2]=F|1;c[G+4>>2]=C;ja=ia}Ss(ja|0,E|0,C|0)|0;a[ja+C|0]=0}g[b+68>>2]=+bi(G);if(!((a[G]&1)==0)){ys(c[G+8>>2]|0)}if(!((a[H]&1)==0)){ys(c[H+8>>2]|0)}Be(J,y,448);H=sf(J)|0;if((a[H]&1)==0){c[I+0>>2]=c[H+0>>2];c[I+4>>2]=c[H+4>>2];c[I+8>>2]=c[H+8>>2]}else{G=c[H+8>>2]|0;C=c[H+4>>2]|0;if(C>>>0>4294967279){Vj(0)}if(C>>>0<11){a[I]=C<<1;ka=I+1|0}else{H=C+16&-16;ja=ws(H)|0;c[I+8>>2]=ja;c[I>>2]=H|1;c[I+4>>2]=C;ka=ja}Ss(ka|0,G|0,C|0)|0;a[ka+C|0]=0}g[b+72>>2]=+bi(I);if(!((a[I]&1)==0)){ys(c[I+8>>2]|0)}if(!((a[J]&1)==0)){ys(c[J+8>>2]|0)}ai(L,c[e>>2]|0,384);c[K+0>>2]=0;c[K+4>>2]=0;c[K+8>>2]=0;e=a[L]|0;J=(e&1)==0;if(J){la=(e&255)>>>1}else{la=c[L+4>>2]|0}e=la+4|0;if(e>>>0>4294967279){Vj(0)}if(e>>>0<11){a[K]=8;ma=K+1|0}else{e=la+20&-16;I=ws(e)|0;c[K+8>>2]=I;c[K>>2]=e|1;c[K+4>>2]=4;ma=I}a[ma]=1752394054;a[ma+1|0]=6845289;a[ma+2|0]=26739;a[ma+3|0]=104;a[ma+4|0]=0;if(J){na=L+1|0}else{na=c[L+8>>2]|0}ek(K,na,la)|0;la=b+80|0;c[la>>2]=Eg(K)|0;if(!((a[K]&1)==0)){ys(c[K+8>>2]|0)}if(!((a[L]&1)==0)){ys(c[L+8>>2]|0)}if((c[la>>2]|0)==0?(xi(464,280,78,0,k)|0)==0:0){c[k>>2]=280;c[k+4>>2]=78;Mb(312,k|0)|0;k=fc(8)|0;la=ws(32)|0;c[R+8>>2]=la;c[R>>2]=33;c[R+4>>2]=25;Z=la+0|0;_=280|0;$=Z+25|0;do{a[Z]=a[_]|0;Z=Z+1|0;_=_+1|0}while((Z|0)<($|0));a[la+25|0]=0;a[S]=2;a[S+1|0]=40;a[S+2|0]=0;ze(Q,R,S);yi(T,78);ze(P,Q,T);T=ws(32)|0;c[U+8>>2]=T;c[U>>2]=33;c[U+4>>2]=26;Z=T+0|0;_=336|0;$=Z+26|0;do{a[Z]=a[_]|0;Z=Z+1|0;_=_+1|0}while((Z|0)<($|0));a[T+26|0]=0;ze(O,P,U);a[V]=18;Z=V+1|0;_=464|0;$=Z+9|0;do{a[Z]=a[_]|0;Z=Z+1|0;_=_+1|0}while((Z|0)<($|0));a[V+10|0]=0;ze(N,O,V);a[W]=4;V=W+1|0;a[V]=2599;a[V+1|0]=10;a[W+3|0]=0;ze(M,N,W);Fj(k,M);td(k|0,9992,51)}if((a[y]&1)==0){i=j;return}ys(c[y+8>>2]|0);i=j;return}function ze(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;g=a[d]|0;h=(g&1)==0;if(h){j=(g&255)>>>1}else{j=c[d+4>>2]|0}g=a[e]|0;if((g&1)==0){k=(g&255)>>>1}else{k=c[e+4>>2]|0}if(h){l=d+1|0}else{l=c[d+8>>2]|0}d=k+j|0;if(d>>>0>4294967279){Vj(0)}if(d>>>0<11){a[b]=j<<1;m=b+1|0}else{h=d+16&-16;d=ws(h)|0;c[b+8>>2]=d;c[b>>2]=h|1;c[b+4>>2]=j;m=d}Ss(m|0,l|0,j|0)|0;a[m+j|0]=0;if((a[e]&1)==0){n=e+1|0;ek(b,n,k)|0;i=f;return}else{n=c[e+8>>2]|0;ek(b,n,k)|0;i=f;return}}function Ae(a){a=a|0;_a(a|0)|0;La()}function Be(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;g=a[d]|0;if((g&1)==0){h=Ws(e|0)|0;j=(g&255)>>>1;k=d+1|0}else{g=c[d+4>>2]|0;l=Ws(e|0)|0;h=l;j=g;k=c[d+8>>2]|0}d=h+j|0;if(d>>>0>4294967279){Vj(0)}if(d>>>0<11){a[b]=j<<1;m=b+1|0}else{g=d+16&-16;d=ws(g)|0;c[b+8>>2]=d;c[b>>2]=g|1;c[b+4>>2]=j;m=d}Ss(m|0,k|0,j|0)|0;a[m+j|0]=0;ek(b,e,h)|0;i=f;return}function Ce(a){a=a|0;var b=0;b=i;rh(a);ys(a);i=b;return}function De(a){a=a|0;var b=0;b=i;rh(a);i=b;return}function Ee(b,d,e){b=b|0;d=+d;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0,s=0.0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0;f=i;i=i+32|0;h=f+12|0;j=f;k=b+20|0;l=b+24|0;sh(b,+g[k>>2]+d,+g[l>>2]+e);m=b+80|0;e=0.0- +g[(c[m>>2]|0)+28>>2]*.5;n=b+36|0;o=c[n>>2]|0;d=+Od[c[(c[o>>2]|0)+52>>2]&7](o);p=d+ +g[(c[m>>2]|0)+28>>2]*.5;m=c[n>>2]|0;do{if((c[m+48>>2]|0)==6){o=c[m+112>>2]|0;q=o+40|0;r=c[q>>2]|0;if((r|0)!=(b|0)){if((r|0)!=0){break}d=+g[k>>2];if(!(+U(+(d- +Od[c[(c[o>>2]|0)+36>>2]&7](o)))<10.0)){break}d=+g[l>>2];if(!(+U(+(d- +Od[c[(c[o>>2]|0)+40>>2]&7](o)))<10.0)){break}if(!(+g[b+72>>2]<=+g[(c[n>>2]|0)+136>>2])){break}c[q>>2]=b;c[b+76>>2]=0;break}g[k>>2]=+Od[c[(c[o>>2]|0)+36>>2]&7](o);g[l>>2]=+Od[c[(c[o>>2]|0)+40>>2]&7](o);g[b+52>>2]=-14.0;q=b+76|0;r=(c[q>>2]|0)+16|0;c[q>>2]=r;d=+(r>>>0);s=+g[b+64>>2];do{if(d>s){c[q>>2]=~~(d-s)>>>0;if((c[b+40>>2]|0)!=7){Qe(o,+g[b+68>>2]);break}a[j]=20;r=j+1|0;t=368|0;u=r+10|0;do{a[r]=a[t]|0;r=r+1|0;t=t+1|0}while((r|0)<(u|0));a[j+11|0]=0;t=sf(j)|0;if((a[t]&1)==0){c[h+0>>2]=c[t+0>>2];c[h+4>>2]=c[t+4>>2];c[h+8>>2]=c[t+8>>2]}else{r=c[t+8>>2]|0;u=c[t+4>>2]|0;if(u>>>0>4294967279){Vj(0)}if(u>>>0<11){a[h]=u<<1;v=h+1|0}else{t=u+16&-16;w=ws(t)|0;c[h+8>>2]=w;c[h>>2]=t|1;c[h+4>>2]=u;v=w}Ss(v|0,r|0,u|0)|0;a[v+u|0]=0}x=+bi(h);if(!((a[h]&1)==0)){ys(c[h+8>>2]|0)}if(!((a[j]&1)==0)){ys(c[j+8>>2]|0)}if(+g[l>>2]<x+-100.0){Qe(o,+g[b+68>>2])}}}while(0);o=c[(c[n>>2]|0)+112>>2]|0;if((c[o+40>>2]|0)==(b|0)){s=+g[o+48>>2]*-30.0;if(!(s>89.0)){if(s<-89.0){y=-89.0}else{y=s}}else{y=89.0}if((c[b+40>>2]|0)==7){z=+Y(+(+g[l>>2]/30.0))*30.0}else{z=y}}else{z=0.0}o=b+48|0;s=+g[o>>2];g[o>>2]=s+(z-s)*.019999999552965164;i=f;return}}while(0);j=c[n>>2]|0;n=j+48|0;if(((c[n>>2]|0)==7?(h=(c[j+112>>2]|0)+40|0,(c[h>>2]|0)==(b|0)):0)?(v=b+48|0,g[v>>2]=+g[v>>2]+10.0,v=b+52|0,z=+g[v>>2]+.5,g[v>>2]=z,y=+g[l>>2]+z,g[l>>2]=y,g[k>>2]=+g[k>>2]+-3.0,z>0.0&y>0.0):0){l=j+64|0;c[l>>2]=(c[b+56>>2]|0)+(c[l>>2]|0);c[n>>2]=2;c[h>>2]=0;if((b|0)==0){i=f;return}Dd[c[(c[b>>2]|0)+4>>2]&255](b);i=f;return}h=b+48|0;y=+g[h>>2];g[h>>2]=y+(0.0-y)*.019999999552965164;h=b+44|0;n=a[h]|0;y=+g[b+60>>2];z=+g[k>>2];if(n<<24>>24==0){s=z-y;g[k>>2]=s;if(!(s<e)){i=f;return}a[h]=1;g[k>>2]=e;i=f;return}else{e=y+z;g[k>>2]=e;if(!(e>p)){i=f;return}a[h]=n^1;g[k>>2]=p;i=f;return}}function Fe(b,d,e,f){b=b|0;d=+d;e=+e;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0,v=0;h=i;i=i+32|0;j=h+12|0;k=h;l=b+20|0;m=b+24|0;th(b,+g[l>>2]+d,+g[m>>2]+e,f);n=b+80|0;o=c[n>>2]|0;Fg(o,+(~~(+g[l>>2]+d- +g[o+28>>2]*.5)|0),+(~~(+g[m>>2]+e- +g[o+32>>2]*.5)|0),f,(a[b+44|0]|0)!=0,+g[b+48>>2]);o=b+40|0;if((c[o>>2]|0)==7){i=h;return}p=b+36|0;q=c[p>>2]|0;if((c[q+48>>2]|0)!=6){i=h;return}r=c[q+112>>2]|0;s=c[r+40>>2]|0;do{if((s|0)!=(b|0)){if((s|0)!=0){i=h;return}t=+g[l>>2];if(!(+U(+(t- +Od[c[(c[r>>2]|0)+36>>2]&7](r)))<30.0)){i=h;return}t=+g[m>>2];if(+U(+(t- +Od[c[(c[r>>2]|0)+40>>2]&7](r)))<30.0){u=c[p>>2]|0;break}else{i=h;return}}else{u=q}}while(0);if(+g[b+72>>2]>+g[u+136>>2]){a[j]=16;b=j+1|0;q=b;a[q]=1752394054;a[q+1|0]=6845289;a[q+2|0]=26739;a[q+3|0]=104;q=b+4|0;a[q]=1937010500;a[q+1|0]=7566447;a[q+2|0]=29556;a[q+3|0]=115;a[j+9|0]=0;q=Eg(j)|0;if((a[j]&1)==0){v=q}else{ys(c[j+8>>2]|0);v=q}}else{if(!((((c[o>>2]|0)>>>0)/3|0)>>>0>(c[u+128>>2]|0)>>>0)){i=h;return}u=ws(16)|0;o=k+8|0;c[o>>2]=u;c[k>>2]=17;c[k+4>>2]=15;q=u+0|0;j=480|0;b=q+15|0;do{a[q]=a[j]|0;q=q+1|0;j=j+1|0}while((q|0)<(b|0));a[u+15|0]=0;u=Eg(k)|0;if((a[k]&1)==0){v=u}else{ys(c[o>>2]|0);v=u}}if((v|0)==0){i=h;return}Fg(v,+(~~(+g[l>>2]+d- +g[v+28>>2]*.5)|0),+(~~(+g[m>>2]+e- +g[v+32>>2]*.5- +g[(c[n>>2]|0)+32>>2]*.5)|0),f,0,0.0);i=h;return}function Ge(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+80|0;h=f+60|0;j=f;k=f+12|0;l=f+24|0;m=f+36|0;n=f+48|0;ph(b,d,0.0,0.0,+g[1118],+g[1120]);c[b>>2]=568;c[b+36>>2]=e;e=ws(32)|0;d=h+8|0;c[d>>2]=e;c[h>>2]=33;c[h+4>>2]=16;o=e+0|0;p=640|0;q=o+16|0;do{a[o]=a[p]|0;o=o+1|0;p=p+1|0}while((o|0)<(q|0));a[e+16|0]=0;c[b+44>>2]=nf(h)|0;if(!((a[h]&1)==0)){ys(c[d>>2]|0)}d=ws(16)|0;h=j+8|0;c[h>>2]=d;c[j>>2]=17;c[j+4>>2]=15;o=d+0|0;p=664|0;q=o+15|0;do{a[o]=a[p]|0;o=o+1|0;p=p+1|0}while((o|0)<(q|0));a[d+15|0]=0;c[b+40>>2]=Ag(j)|0;if(!((a[j]&1)==0)){ys(c[h>>2]|0)}h=ws(64)|0;j=k+8|0;c[j>>2]=h;c[k>>2]=65;c[k+4>>2]=50;o=h+0|0;p=680|0;q=o+50|0;do{a[o]=a[p]|0;o=o+1|0;p=p+1|0}while((o|0)<(q|0));a[h+50|0]=0;c[132]=qg(k,20)|0;if(!((a[k]&1)==0)){ys(c[j>>2]|0)}j=ws(64)|0;k=l+8|0;c[k>>2]=j;c[l>>2]=65;c[l+4>>2]=50;o=j+0|0;p=680|0;q=o+50|0;do{a[o]=a[p]|0;o=o+1|0;p=p+1|0}while((o|0)<(q|0));a[j+50|0]=0;c[134]=qg(l,40)|0;if(!((a[l]&1)==0)){ys(c[k>>2]|0)}k=ws(64)|0;l=m+8|0;c[l>>2]=k;c[m>>2]=65;c[m+4>>2]=50;o=k+0|0;p=680|0;q=o+50|0;do{a[o]=a[p]|0;o=o+1|0;p=p+1|0}while((o|0)<(q|0));a[k+50|0]=0;c[136]=qg(m,30)|0;if(!((a[m]&1)==0)){ys(c[l>>2]|0)}l=ws(64)|0;m=n+8|0;c[m>>2]=l;c[n>>2]=65;c[n+4>>2]=50;o=l+0|0;p=680|0;q=o+50|0;do{a[o]=a[p]|0;o=o+1|0;p=p+1|0}while((o|0)<(q|0));a[l+50|0]=0;c[138]=qg(n,20)|0;if((a[n]&1)==0){r=b+48|0;c[r>>2]=0;i=f;return}ys(c[m>>2]|0);r=b+48|0;c[r>>2]=0;i=f;return}function He(a){a=a|0;var b=0;b=i;c[a>>2]=568;Dg(c[a+40>>2]|0);rf(c[a+44>>2]|0);sg(c[138]|0);sg(c[136]|0);sg(c[134]|0);sg(c[132]|0);rh(a);ys(a);i=b;return}function Ie(a){a=a|0;var b=0;b=i;c[a>>2]=568;Dg(c[a+40>>2]|0);rf(c[a+44>>2]|0);sg(c[138]|0);sg(c[136]|0);sg(c[134]|0);sg(c[132]|0);rh(a);i=b;return}function Je(a,b,d){a=a|0;b=+b;d=+d;var e=0,f=0,g=0,h=0;e=i;f=a+48|0;do{if((c[f>>2]|0)==0){if(!(rg(c[132]|0)|0)){i=e;return}if(!(rg(c[134]|0)|0)){i=e;return}if(!(rg(c[136]|0)|0)){i=e;return}if(!(rg(c[138]|0)|0)){i=e;return}if(!(of(c[a+44>>2]|0)|0)){i=e;return}if(Bg(c[a+40>>2]|0)|0){g=ws(232)|0;bf(g,a,a);c[f>>2]=g;h=a;break}else{i=e;return}}else{h=a}}while(0);sh(h,b,d);i=e;return}function Ke(a,b,c,d){a=a|0;b=+b;c=+c;d=d|0;var e=0;e=i;th(a,b,c,d);i=e;return}function Le(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=i;i=i+80|0;h=f+60|0;j=f;k=f+12|0;l=f+24|0;m=f+36|0;n=f+48|0;ph(b,d,+Od[c[(c[d>>2]|0)+52>>2]&7](d)*.5,0.0,1.0,1.0);c[b>>2]=776;c[b+36>>2]=e;c[b+40>>2]=0;g[b+44>>2]=0.0;g[b+48>>2]=0.0;e=ws(16)|0;d=j+8|0;c[d>>2]=e;c[j>>2]=17;c[j+4>>2]=13;o=e+0|0;p=848|0;q=o+13|0;do{a[o]=a[p]|0;o=o+1|0;p=p+1|0}while((o|0)<(q|0));a[e+13|0]=0;e=sf(j)|0;if((a[e]&1)==0){c[h+0>>2]=c[e+0>>2];c[h+4>>2]=c[e+4>>2];c[h+8>>2]=c[e+8>>2]}else{r=c[e+8>>2]|0;s=c[e+4>>2]|0;if(s>>>0>4294967279){Vj(0)}if(s>>>0<11){a[h]=s<<1;t=h+1|0}else{e=s+16&-16;u=ws(e)|0;c[h+8>>2]=u;c[h>>2]=e|1;c[h+4>>2]=s;t=u}Ss(t|0,r|0,s|0)|0;a[t+s|0]=0}g[b+52>>2]=+bi(h);if(!((a[h]&1)==0)){ys(c[h+8>>2]|0)}if(!((a[j]&1)==0)){ys(c[d>>2]|0)}d=ws(32)|0;j=l+8|0;c[j>>2]=d;c[l>>2]=33;c[l+4>>2]=20;o=d+0|0;p=864|0;q=o+20|0;do{a[o]=a[p]|0;o=o+1|0;p=p+1|0}while((o|0)<(q|0));a[d+20|0]=0;d=sf(l)|0;if((a[d]&1)==0){c[k+0>>2]=c[d+0>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2]}else{h=c[d+8>>2]|0;s=c[d+4>>2]|0;if(s>>>0>4294967279){Vj(0)}if(s>>>0<11){a[k]=s<<1;v=k+1|0}else{d=s+16&-16;t=ws(d)|0;c[k+8>>2]=t;c[k>>2]=d|1;c[k+4>>2]=s;v=t}Ss(v|0,h|0,s|0)|0;a[v+s|0]=0}g[b+56>>2]=+bi(k);if(!((a[k]&1)==0)){ys(c[k+8>>2]|0)}if(!((a[l]&1)==0)){ys(c[j>>2]|0)}j=ws(32)|0;l=n+8|0;c[l>>2]=j;c[n>>2]=33;c[n+4>>2]=20;o=j+0|0;p=888|0;q=o+20|0;do{a[o]=a[p]|0;o=o+1|0;p=p+1|0}while((o|0)<(q|0));a[j+20|0]=0;j=sf(n)|0;if((a[j]&1)==0){c[m+0>>2]=c[j+0>>2];c[m+4>>2]=c[j+4>>2];c[m+8>>2]=c[j+8>>2]}else{p=c[j+8>>2]|0;o=c[j+4>>2]|0;if(o>>>0>4294967279){Vj(0)}if(o>>>0<11){a[m]=o<<1;w=m+1|0}else{j=o+16&-16;q=ws(j)|0;c[m+8>>2]=q;c[m>>2]=j|1;c[m+4>>2]=o;w=q}Ss(w|0,p|0,o|0)|0;a[w+o|0]=0}g[b+60>>2]=+bi(m);if(!((a[m]&1)==0)){ys(c[m+8>>2]|0)}if((a[n]&1)==0){i=f;return}ys(c[l>>2]|0);i=f;return}function Me(a){a=a|0;var b=0;b=i;rh(a);ys(a);i=b;return}function Ne(a){a=a|0;var b=0;b=i;rh(a);i=b;return}function Oe(b,d,e){b=b|0;d=+d;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0,w=0,x=0,y=0;f=i;i=i+64|0;h=f+48|0;j=f;k=f+12|0;l=f+24|0;m=f+36|0;sh(b,d,e);n=b+36|0;o=c[n>>2]|0;p=o+48|0;switch(c[p>>2]|0){case 6:{e=+ve(c[o+116>>2]|0);q=b+20|0;d=+g[q>>2];r=b+44|0;s=b+52|0;t=(+g[r>>2]+(e-d)*+g[b+56>>2])*+g[s>>2];g[r>>2]=t;g[q>>2]=d+t;q=c[n>>2]|0;do{if((a[q+60|0]|0)==0){r=c[b+40>>2]|0;if((r|0)!=0?(((c[r+40>>2]|0)>>>0)/3|0)>>>0>(c[q+128>>2]|0)>>>0:0){break}if(Yf(0)|0){r=b+48|0;g[r>>2]=+g[r>>2]- +g[(c[n>>2]|0)+140>>2]}}}while(0);Zf(0)|0;if(!(Yf(0)|0)){a[(c[n>>2]|0)+60|0]=0}q=b+48|0;t=+g[s>>2]*+g[q>>2];g[q>>2]=t;s=b+24|0;d=+g[s>>2]+t;g[s>>2]=d;r=b+40|0;if((c[r>>2]|0)==0){u=d}else{v=c[(c[n>>2]|0)+116>>2]|0;a[h]=16;w=h+1|0;x=w;a[x]=1215586627;a[x+1|0]=4748385;a[x+2|0]=18548;a[x+3|0]=72;x=w+4|0;a[x]=878993765;a[x+1|0]=3433569;a[x+2|0]=13412;a[x+3|0]=52;a[h+9|0]=0;xe(v,h);if(!((a[h]&1)==0)){ys(c[h+8>>2]|0)}u=+g[s>>2]}do{if(u<.5){h=c[n>>2]|0;a[h+60|0]=1;v=h+48|0;if((c[r>>2]|0)==0){c[v>>2]=2;break}c[v>>2]=7;g[s>>2]=0.0;g[q>>2]=0.0;v=c[h+116>>2]|0;a[j]=16;h=j+1|0;x=h;a[x]=1215586627;a[x+1|0]=4748385;a[x+2|0]=18548;a[x+3|0]=72;x=h+4|0;a[x]=845439333;a[x+1|0]=3302497;a[x+2|0]=12900;a[x+3|0]=50;a[j+9|0]=0;xe(v,j);if(!((a[j]&1)==0)){ys(c[j+8>>2]|0)}}}while(0);a[l]=20;j=l+1|0;v=912|0;x=j+10|0;do{a[j]=a[v]|0;j=j+1|0;v=v+1|0}while((j|0)<(x|0));a[l+11|0]=0;v=sf(l)|0;if((a[v]&1)==0){c[k+0>>2]=c[v+0>>2];c[k+4>>2]=c[v+4>>2];c[k+8>>2]=c[v+8>>2]}else{j=c[v+8>>2]|0;x=c[v+4>>2]|0;if(x>>>0>4294967279){Vj(0)}if(x>>>0<11){a[k]=x<<1;y=k+1|0}else{v=x+16&-16;h=ws(v)|0;c[k+8>>2]=h;c[k>>2]=v|1;c[k+4>>2]=x;y=h}Ss(y|0,j|0,x|0)|0;a[y+x|0]=0}u=+bi(k);if(!((a[k]&1)==0)){ys(c[k+8>>2]|0)}if(!((a[l]&1)==0)){ys(c[l+8>>2]|0)}if(!(+g[s>>2]>u)){i=f;return}if((c[r>>2]|0)==0){g[s>>2]=u;g[q>>2]=-+g[q>>2];i=f;return}l=c[n>>2]|0;a[l+60|0]=1;k=c[l+116>>2]|0;a[m]=16;l=m+1|0;x=l;a[x]=1215586627;a[x+1|0]=4748385;a[x+2|0]=18548;a[x+3|0]=72;x=l+4|0;a[x]=862216549;a[x+1|0]=3368033;a[x+2|0]=13156;a[x+3|0]=51;a[m+9|0]=0;xe(k,m);if(!((a[m]&1)==0)){ys(c[m+8>>2]|0)}m=c[r>>2]|0;if((m|0)!=0){Dd[c[(c[m>>2]|0)+4>>2]&255](m)}c[r>>2]=0;g[s>>2]=0.0;g[q>>2]=0.0;i=f;return};case 7:{u=+ve(c[o+116>>2]|0)+2.0;d=+we(c[(c[n>>2]|0)+116>>2]|0)+20.0;q=b+20|0;t=+g[q>>2];g[q>>2]=t+(u-t)*.30000001192092896;q=b+24|0;t=+g[q>>2];g[q>>2]=t+(d-t)*.30000001192092896;Zf(0)|0;if(Yf(0)|0){i=f;return}a[(c[n>>2]|0)+60|0]=0;i=f;return};case 4:case 3:case 2:{t=+ve(c[o+116>>2]|0)+2.0;d=+we(c[(c[n>>2]|0)+116>>2]|0)+20.0;q=b+20|0;u=+g[q>>2];g[q>>2]=u+(t-u)*.30000001192092896;q=b+24|0;u=+g[q>>2];g[q>>2]=u+(d-u)*.30000001192092896;q=c[n>>2]|0;g[b+48>>2]=+g[q+52>>2]*+g[q+132>>2];i=f;return};case 5:{q=b+48|0;u=+g[b+52>>2]*+g[q>>2];g[q>>2]=u;q=b+24|0;g[q>>2]=+g[q>>2]+u;if(u<=.009999999776482582){c[p>>2]=6}if((a[o+60|0]|0)==0?Yf(0)|0:0){c[(c[n>>2]|0)+48>>2]=6}Zf(0)|0;if(Yf(0)|0){i=f;return}a[(c[n>>2]|0)+60|0]=0;i=f;return};default:{i=f;return}}}function Pe(b,d,e,f){b=b|0;d=+d;e=+e;f=f|0;var h=0,j=0,k=0,l=0;h=i;i=i+16|0;j=h;k=b+20|0;l=b+24|0;th(b,+g[k>>2]+d,+g[l>>2]+e,f);a[j]=8;b=j+1|0;a[b]=1802465096;a[b+1|0]=7040879;a[b+2|0]=27503;a[b+3|0]=107;a[j+5|0]=0;b=Eg(j)|0;if(!((a[j]&1)==0)){ys(c[j+8>>2]|0)}Fg(b,+(~~(+g[k>>2]+d- +g[b+28>>2]*.5)|0),+(~~(+g[l>>2]+e+-13.0)|0),f,0,0.0);i=h;return}function Qe(a,b){a=a|0;b=+b;var c=0;c=a+48|0;g[c>>2]=+g[c>>2]+b;return}function Re(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0,A=0.0,B=0;f=i;i=i+144|0;h=f+120|0;j=f+108|0;k=f+96|0;l=f+84|0;m=f+72|0;n=f+60|0;o=f+36|0;p=f+24|0;q=f+12|0;r=f;s=f+48|0;ph(b,d,0.0,0.0,1.0,1.0);c[b>>2]=968;t=ws(16)|0;u=h+8|0;c[u>>2]=t;c[h>>2]=17;c[h+4>>2]=12;v=t+0|0;w=1040|0;x=v+12|0;do{a[v]=a[w]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));a[t+12|0]=0;t=Eg(h)|0;if(!((a[h]&1)==0)){ys(c[u>>2]|0)}u=b+28|0;g[u>>2]=+g[t+28>>2];h=b+32|0;g[h>>2]=+g[t+32>>2];y=+Od[c[(c[d>>2]|0)+52>>2]&7](d);g[b+20>>2]=+T(+((y- +g[u>>2])*.5));g[b+24>>2]=-+g[h>>2];c[b+36>>2]=0;g[b+40>>2]=0.0;c[b+44>>2]=e;e=ws(76)|0;d=c[134]|0;t=ws(32)|0;z=j+8|0;c[z>>2]=t;c[j>>2]=33;c[j+4>>2]=19;v=t+0|0;w=1056|0;x=v+19|0;do{a[v]=a[w]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));a[t+19|0]=0;lh(e,b,d,j,68.0,6.0,.4627451002597809,.25882354378700256,.10196078568696976,0.0,0.0,0.0);if(!((a[j]&1)==0)){ys(c[z>>2]|0)}z=ws(76)|0;j=c[134]|0;d=ws(32)|0;e=k+8|0;c[e>>2]=d;c[k>>2]=33;c[k+4>>2]=19;v=d+0|0;w=1056|0;x=v+19|0;do{a[v]=a[w]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));a[d+19|0]=0;lh(z,b,j,k,70.0,5.0,.95686274766922,.800000011920929,.7137255072593689,0.0,0.0,0.0);if(!((a[k]&1)==0)){ys(c[e>>2]|0)}e=ws(76)|0;k=c[134]|0;j=ws(16)|0;z=l+8|0;c[z>>2]=j;c[l>>2]=17;c[l+4>>2]=12;v=j+0|0;w=1080|0;x=v+12|0;do{a[v]=a[w]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));a[j+12|0]=0;lh(e,b,k,l,98.0,34.0,.4627451002597809,.25882354378700256,.10196078568696976,0.0,0.0,0.0);if(!((a[l]&1)==0)){ys(c[z>>2]|0)}z=ws(76)|0;l=c[134]|0;k=ws(16)|0;e=m+8|0;c[e>>2]=k;c[m>>2]=17;c[m+4>>2]=12;v=k+0|0;w=1080|0;x=v+12|0;do{a[v]=a[w]|0;v=v+1|0;w=w+1|0}while((v|0)<(x|0));a[k+12|0]=0;lh(z,b,l,m,100.0,33.0,.95686274766922,.800000011920929,.7137255072593689,0.0,0.0,0.0);if(!((a[m]&1)==0)){ys(c[e>>2]|0)}a[n]=8;e=n+1|0;a[e]=1852403523;a[e+1|0]=7235951;a[e+2|0]=28265;a[e+3|0]=110;a[n+5|0]=0;e=Eg(n)|0;if(!((a[n]&1)==0)){ys(c[n+8>>2]|0)}n=ws(48)|0;a[o]=8;m=o+1|0;a[m]=1852403523;a[m+1|0]=7235951;a[m+2|0]=28265;a[m+3|0]=110;a[o+5|0]=0;gh(n,b,o,20.0,285.0,+g[e+28>>2],+g[e+32>>2]);e=b+84|0;c[e>>2]=n;if(!((a[o]&1)==0)){ys(c[o+8>>2]|0)}o=ws(76)|0;n=c[134]|0;a[p]=8;m=p+1|0;a[m]=560298306;a[m+1|0]=2188665;a[m+2|0]=8549;a[m+3|0]=33;a[p+5|0]=0;lh(o,b,n,p,253.0,286.0,.4627451002597809,.25882354378700256,.10196078568696976,0.0,0.0,0.0);if(!((a[p]&1)==0)){ys(c[p+8>>2]|0)}p=ws(76)|0;n=c[134]|0;a[q]=8;o=q+1|0;a[o]=560298306;a[o+1|0]=2188665;a[o+2|0]=8549;a[o+3|0]=33;a[q+5|0]=0;lh(p,b,n,q,255.0,285.0,.95686274766922,.800000011920929,.7137255072593689,0.0,0.0,0.0);if(!((a[q]&1)==0)){ys(c[q+8>>2]|0)}a[r]=10;q=r+1|0;a[q+0|0]=a[1096|0]|0;a[q+1|0]=a[1097|0]|0;a[q+2|0]=a[1098|0]|0;a[q+3|0]=a[1099|0]|0;a[q+4|0]=a[1100|0]|0;a[r+6|0]=0;q=Eg(r)|0;if(!((a[r]&1)==0)){ys(c[r+8>>2]|0)}r=ws(48)|0;a[s]=10;n=s+1|0;a[n+0|0]=a[1096|0]|0;a[n+1|0]=a[1097|0]|0;a[n+2|0]=a[1098|0]|0;a[n+3|0]=a[1099|0]|0;a[n+4|0]=a[1100|0]|0;a[s+6|0]=0;y=+g[q+28>>2];A=+g[q+32>>2];gh(r,b,s,+g[u>>2]-y+-25.0,+g[h>>2]-A+-17.0,y,A);c[e>>2]=r;if((a[s]&1)==0){B=b+48|0;v=B+0|0;x=v+36|0;do{c[v>>2]=0;v=v+4|0}while((v|0)<(x|0));Se(b);i=f;return}ys(c[s+8>>2]|0);B=b+48|0;v=B+0|0;x=v+36|0;do{c[v>>2]=0;v=v+4|0}while((v|0)<(x|0));Se(b);i=f;return}function Se(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0.0,Oa=0.0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0;d=i;i=i+624|0;e=d+612|0;f=d+600|0;h=d+588|0;j=d+576|0;k=d+564|0;l=d+552|0;m=d+540|0;n=d+528|0;o=d+516|0;p=d+504|0;q=d+492|0;r=d+480|0;s=d+468|0;t=d+456|0;u=d+444|0;v=d+432|0;w=d+420|0;x=d+408|0;y=d+396|0;z=d+384|0;A=d+372|0;B=d+360|0;C=d+348|0;D=d+336|0;E=d+324|0;F=d+312|0;G=d+300|0;H=d+132|0;I=d+120|0;J=d+108|0;K=d+96|0;L=d+84|0;M=d+72|0;N=d+60|0;O=d+36|0;P=d+24|0;Q=d+12|0;R=d;S=d+48|0;T=d+144|0;U=d+156|0;V=d+168|0;W=d+180|0;X=d+192|0;Y=d+204|0;Z=d+216|0;_=d+228|0;$=d+240|0;aa=d+252|0;ba=d+264|0;ca=d+276|0;da=d+288|0;ea=b+48|0;fa=c[ea>>2]|0;if((fa|0)!=0){Dd[c[(c[fa>>2]|0)+4>>2]&255](fa)}fa=b+52|0;ga=c[fa>>2]|0;if((ga|0)!=0){Dd[c[(c[ga>>2]|0)+4>>2]&255](ga)}ga=b+56|0;ha=c[ga>>2]|0;if((ha|0)!=0){Dd[c[(c[ha>>2]|0)+4>>2]&255](ha)}ha=b+60|0;ia=c[ha>>2]|0;if((ia|0)!=0){Dd[c[(c[ia>>2]|0)+4>>2]&255](ia)}ia=b+64|0;ja=c[ia>>2]|0;if((ja|0)!=0){Dd[c[(c[ja>>2]|0)+4>>2]&255](ja)}ja=b+68|0;ka=c[ja>>2]|0;if((ka|0)!=0){Dd[c[(c[ka>>2]|0)+4>>2]&255](ka)}ka=b+72|0;la=c[ka>>2]|0;if((la|0)!=0){Dd[c[(c[la>>2]|0)+4>>2]&255](la)}la=b+76|0;ma=c[la>>2]|0;if((ma|0)!=0){Dd[c[(c[ma>>2]|0)+4>>2]&255](ma)}ma=b+80|0;na=c[ma>>2]|0;if((na|0)!=0){Dd[c[(c[na>>2]|0)+4>>2]&255](na)}na=ea+0|0;oa=na+36|0;do{c[na>>2]=0;na=na+4|0}while((na|0)<(oa|0));a[e]=20;na=e+1|0;pa=1104|0;oa=na+10|0;do{a[na]=a[pa]|0;na=na+1|0;pa=pa+1|0}while((na|0)<(oa|0));a[e+11|0]=0;Eg(e)|0;if(!((a[e]&1)==0)){ys(c[e+8>>2]|0)}e=b+44|0;qa=c[(c[e>>2]|0)+120>>2]|0;ra=h+1|0;sa=j+1|0;ta=j+8|0;ua=h+8|0;va=f+8|0;wa=h+4|0;xa=j+4|0;ya=0;while(1){za=ya+1|0;ai(j,za,1128);c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;Aa=a[j]|0;Ba=(Aa&1)==0;if(Ba){Ca=(Aa&255)>>>1}else{Ca=c[xa>>2]|0}Aa=Ca+3|0;if(Aa>>>0>4294967279){Da=26;break}if(Aa>>>0<11){a[h]=6;Ea=ra}else{Aa=Ca+19&-16;Fa=ws(Aa)|0;c[ua>>2]=Fa;c[h>>2]=Aa|1;c[wa>>2]=3;Ea=Fa}a[Ea+0|0]=a[1120|0]|0;a[Ea+1|0]=a[1121|0]|0;a[Ea+2|0]=a[1122|0]|0;a[Ea+3|0]=0;ek(h,Ba?sa:c[ta>>2]|0,Ca)|0;Be(f,h,1136);Ba=tf(f)|0;if(!((a[f]&1)==0)){ys(c[va>>2]|0)}if(!((a[h]&1)==0)){ys(c[ua>>2]|0)}if(!((a[j]&1)==0)){ys(c[ta>>2]|0)}if(Ba){ya=za}else{break}}if((Da|0)==26){Vj(0)}if(qa>>>0<ya>>>0){ta=ws(48)|0;a[k]=20;na=k+1|0;pa=1104|0;oa=na+10|0;do{a[na]=a[pa]|0;na=na+1|0;pa=pa+1|0}while((na|0)<(oa|0));a[k+11|0]=0;gh(ta,b,k,50.0,90.0,280.0,60.0);c[ea>>2]=ta;if(!((a[k]&1)==0)){ys(c[k+8>>2]|0)}ai(q,qa,1160);c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;k=a[q]|0;ta=(k&1)==0;if(ta){Ga=(k&255)>>>1}else{Ga=c[q+4>>2]|0}k=Ga+12|0;if(k>>>0>4294967279){Vj(0)}if(k>>>0<11){a[p]=24;Ha=p+1|0}else{k=Ga+28&-16;ea=ws(k)|0;c[p+8>>2]=ea;c[p>>2]=k|1;c[p+4>>2]=12;Ha=ea}na=Ha+0|0;pa=1144|0;oa=na+12|0;do{a[na]=a[pa]|0;na=na+1|0;pa=pa+1|0}while((na|0)<(oa|0));a[Ha+12|0]=0;if(ta){Ia=q+1|0}else{Ia=c[q+8>>2]|0}ek(p,Ia,Ga)|0;Be(o,p,1168);ai(r,ya,1160);ze(n,o,r);Be(m,n,1176);ai(w,qa+1|0,1128);c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;qa=a[w]|0;ya=(qa&1)==0;if(ya){Ja=(qa&255)>>>1}else{Ja=c[w+4>>2]|0}qa=Ja+3|0;if(qa>>>0>4294967279){Vj(0)}if(qa>>>0<11){a[v]=6;Ka=v+1|0}else{qa=Ja+19&-16;Ga=ws(qa)|0;c[v+8>>2]=Ga;c[v>>2]=qa|1;c[v+4>>2]=3;Ka=Ga}a[Ka+0|0]=a[1120|0]|0;a[Ka+1|0]=a[1121|0]|0;a[Ka+2|0]=a[1122|0]|0;a[Ka+3|0]=0;if(ya){La=w+1|0}else{La=c[w+8>>2]|0}ek(v,La,Ja)|0;Be(u,v,1184);Ja=sf(u)|0;if((a[Ja]&1)==0){c[t+0>>2]=c[Ja+0>>2];c[t+4>>2]=c[Ja+4>>2];c[t+8>>2]=c[Ja+8>>2]}else{La=c[Ja+8>>2]|0;ya=c[Ja+4>>2]|0;if(ya>>>0>4294967279){Vj(0)}if(ya>>>0<11){a[t]=ya<<1;Ma=t+1|0}else{Ja=ya+16&-16;Ka=ws(Ja)|0;c[t+8>>2]=Ka;c[t>>2]=Ja|1;c[t+4>>2]=ya;Ma=Ka}Ss(Ma|0,La|0,ya|0)|0;a[Ma+ya|0]=0}$h(s,Te(0,ci(t)|0)|0,1200);ze(l,m,s);if(!((a[s]&1)==0)){ys(c[s+8>>2]|0)}if(!((a[t]&1)==0)){ys(c[t+8>>2]|0)}if(!((a[u]&1)==0)){ys(c[u+8>>2]|0)}if(!((a[v]&1)==0)){ys(c[v+8>>2]|0)}if(!((a[w]&1)==0)){ys(c[w+8>>2]|0)}if(!((a[m]&1)==0)){ys(c[m+8>>2]|0)}if(!((a[n]&1)==0)){ys(c[n+8>>2]|0)}if(!((a[r]&1)==0)){ys(c[r+8>>2]|0)}if(!((a[o]&1)==0)){ys(c[o+8>>2]|0)}if(!((a[p]&1)==0)){ys(c[p+8>>2]|0)}if(!((a[q]&1)==0)){ys(c[q+8>>2]|0)}q=ws(76)|0;lh(q,b,c[136]|0,l,0.0,95.0,.95686274766922,.800000011920929,.7137255072593689,0.0,0.0,0.0);c[fa>>2]=q;fa=c[q>>2]|0;p=c[fa+44>>2]|0;o=b+28|0;Na=+g[o>>2];Oa=+(~~((Na- +Od[c[fa+52>>2]&7](q))*.5)|0);Cd[p&7](q,Oa);q=ws(76)|0;p=c[138]|0;fa=ws(32)|0;r=x+8|0;c[r>>2]=fa;c[x>>2]=33;c[x+4>>2]=27;na=fa+0|0;pa=1208|0;oa=na+27|0;do{a[na]=a[pa]|0;na=na+1|0;pa=pa+1|0}while((na|0)<(oa|0));a[fa+27|0]=0;lh(q,b,p,x,0.0,120.0,.9490196108818054,.1882352977991104,.10588235408067703,0.0,0.0,0.0);c[ga>>2]=q;if((a[x]&1)==0){Pa=q}else{ys(c[r>>2]|0);Pa=c[ga>>2]|0}ga=c[Pa>>2]|0;r=c[ga+44>>2]|0;Oa=+g[o>>2];Na=+(~~((Oa- +Od[c[ga+52>>2]&7](Pa))*.5)|0);Cd[r&7](Pa,Na);if(!((a[l]&1)==0)){ys(c[l+8>>2]|0)}}l=c[(c[e>>2]|0)+124>>2]|0;Pa=z+1|0;r=A+1|0;ga=A+8|0;o=z+8|0;q=y+8|0;x=z+4|0;p=A+4|0;fa=0;while(1){n=fa+1|0;ai(A,n,1128);c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;m=a[A]|0;w=(m&1)==0;if(w){Qa=(m&255)>>>1}else{Qa=c[p>>2]|0}m=Qa+4|0;if(m>>>0>4294967279){Da=101;break}if(m>>>0<11){a[z]=8;Ra=Pa}else{m=Qa+20&-16;v=ws(m)|0;c[o>>2]=v;c[z>>2]=m|1;c[x>>2]=4;Ra=v}a[Ra]=1701999948;a[Ra+1|0]=6648437;a[Ra+2|0]=25970;a[Ra+3|0]=101;a[Ra+4|0]=0;ek(z,w?r:c[ga>>2]|0,Qa)|0;Be(y,z,1136);w=tf(y)|0;if(!((a[y]&1)==0)){ys(c[q>>2]|0)}if(!((a[z]&1)==0)){ys(c[o>>2]|0)}if(!((a[A]&1)==0)){ys(c[ga>>2]|0)}if(w){fa=n}else{break}}if((Da|0)==101){Vj(0)}if(l>>>0<fa>>>0){ga=ws(48)|0;a[B]=20;na=B+1|0;pa=1104|0;oa=na+10|0;do{a[na]=a[pa]|0;na=na+1|0;pa=pa+1|0}while((na|0)<(oa|0));a[B+11|0]=0;gh(ga,b,B,50.0,150.0,280.0,60.0);c[ha>>2]=ga;if(!((a[B]&1)==0)){ys(c[B+8>>2]|0)}ai(H,l,1160);c[G+0>>2]=0;c[G+4>>2]=0;c[G+8>>2]=0;B=a[H]|0;ga=(B&1)==0;if(ga){Sa=(B&255)>>>1}else{Sa=c[H+4>>2]|0}B=Sa+13|0;if(B>>>0>4294967279){Vj(0)}if(B>>>0<11){a[G]=26;Ta=G+1|0}else{B=Sa+29&-16;ha=ws(B)|0;c[G+8>>2]=ha;c[G>>2]=B|1;c[G+4>>2]=13;Ta=ha}na=Ta+0|0;pa=1240|0;oa=na+13|0;do{a[na]=a[pa]|0;na=na+1|0;pa=pa+1|0}while((na|0)<(oa|0));a[Ta+13|0]=0;if(ga){Ua=H+1|0}else{Ua=c[H+8>>2]|0}ek(G,Ua,Sa)|0;Be(F,G,1168);ai(I,fa,1160);ze(E,F,I);Be(D,E,1176);ai(N,l+1|0,1128);c[M+0>>2]=0;c[M+4>>2]=0;c[M+8>>2]=0;l=a[N]|0;fa=(l&1)==0;if(fa){Va=(l&255)>>>1}else{Va=c[N+4>>2]|0}l=Va+4|0;if(l>>>0>4294967279){Vj(0)}if(l>>>0<11){a[M]=8;Wa=M+1|0}else{l=Va+20&-16;Sa=ws(l)|0;c[M+8>>2]=Sa;c[M>>2]=l|1;c[M+4>>2]=4;Wa=Sa}a[Wa]=1701999948;a[Wa+1|0]=6648437;a[Wa+2|0]=25970;a[Wa+3|0]=101;a[Wa+4|0]=0;if(fa){Xa=N+1|0}else{Xa=c[N+8>>2]|0}ek(M,Xa,Va)|0;Be(L,M,1184);Va=sf(L)|0;if((a[Va]&1)==0){c[K+0>>2]=c[Va+0>>2];c[K+4>>2]=c[Va+4>>2];c[K+8>>2]=c[Va+8>>2]}else{Xa=c[Va+8>>2]|0;fa=c[Va+4>>2]|0;if(fa>>>0>4294967279){Vj(0)}if(fa>>>0<11){a[K]=fa<<1;Ya=K+1|0}else{Va=fa+16&-16;Wa=ws(Va)|0;c[K+8>>2]=Wa;c[K>>2]=Va|1;c[K+4>>2]=fa;Ya=Wa}Ss(Ya|0,Xa|0,fa|0)|0;a[Ya+fa|0]=0}$h(J,Te(0,ci(K)|0)|0,1200);ze(C,D,J);if(!((a[J]&1)==0)){ys(c[J+8>>2]|0)}if(!((a[K]&1)==0)){ys(c[K+8>>2]|0)}if(!((a[L]&1)==0)){ys(c[L+8>>2]|0)}if(!((a[M]&1)==0)){ys(c[M+8>>2]|0)}if(!((a[N]&1)==0)){ys(c[N+8>>2]|0)}if(!((a[D]&1)==0)){ys(c[D+8>>2]|0)}if(!((a[E]&1)==0)){ys(c[E+8>>2]|0)}if(!((a[I]&1)==0)){ys(c[I+8>>2]|0)}if(!((a[F]&1)==0)){ys(c[F+8>>2]|0)}if(!((a[G]&1)==0)){ys(c[G+8>>2]|0)}if(!((a[H]&1)==0)){ys(c[H+8>>2]|0)}H=ws(76)|0;lh(H,b,c[136]|0,C,0.0,155.0,.95686274766922,.800000011920929,.7137255072593689,0.0,0.0,0.0);c[ia>>2]=H;ia=c[H>>2]|0;G=c[ia+44>>2]|0;F=b+28|0;Na=+g[F>>2];Oa=+(~~((Na- +Od[c[ia+52>>2]&7](H))*.5)|0);Cd[G&7](H,Oa);H=ws(76)|0;G=c[138]|0;ia=ws(32)|0;I=O+8|0;c[I>>2]=ia;c[O>>2]=33;c[O+4>>2]=20;na=ia+0|0;pa=1256|0;oa=na+20|0;do{a[na]=a[pa]|0;na=na+1|0;pa=pa+1|0}while((na|0)<(oa|0));a[ia+20|0]=0;lh(H,b,G,O,0.0,180.0,.9490196108818054,.1882352977991104,.10588235408067703,0.0,0.0,0.0);c[ja>>2]=H;if((a[O]&1)==0){Za=H}else{ys(c[I>>2]|0);Za=c[ja>>2]|0}ja=c[Za>>2]|0;I=c[ja+44>>2]|0;Oa=+g[F>>2];Na=+(~~((Oa- +Od[c[ja+52>>2]&7](Za))*.5)|0);Cd[I&7](Za,Na);if(!((a[C]&1)==0)){ys(c[C+8>>2]|0)}}C=c[(c[e>>2]|0)+128>>2]|0;e=Q+1|0;Za=R+1|0;I=R+8|0;ja=Q+8|0;F=P+8|0;H=Q+4|0;O=R+4|0;G=0;while(1){ia=G+1|0;ai(R,ia,1128);c[Q+0>>2]=0;c[Q+4>>2]=0;c[Q+8>>2]=0;E=a[R]|0;D=(E&1)==0;if(D){_a=(E&255)>>>1}else{_a=c[O>>2]|0}E=_a+4|0;if(E>>>0>4294967279){Da=176;break}if(E>>>0<11){a[Q]=8;$a=e}else{E=_a+20&-16;N=ws(E)|0;c[ja>>2]=N;c[Q>>2]=E|1;c[H>>2]=4;$a=N}a[$a]=1818584402;a[$a+1|0]=7103845;a[$a+2|0]=27749;a[$a+3|0]=108;a[$a+4|0]=0;ek(Q,D?Za:c[I>>2]|0,_a)|0;Be(P,Q,1136);D=tf(P)|0;if(!((a[P]&1)==0)){ys(c[F>>2]|0)}if(!((a[Q]&1)==0)){ys(c[ja>>2]|0)}if(!((a[R]&1)==0)){ys(c[I>>2]|0)}if(D){G=ia}else{break}}if((Da|0)==176){Vj(0)}if(!(C>>>0<G>>>0)){i=d;return}Da=ws(48)|0;a[S]=20;na=S+1|0;pa=1104|0;oa=na+10|0;do{a[na]=a[pa]|0;na=na+1|0;pa=pa+1|0}while((na|0)<(oa|0));a[S+11|0]=0;gh(Da,b,S,50.0,210.0,280.0,60.0);c[ka>>2]=Da;if(!((a[S]&1)==0)){ys(c[S+8>>2]|0)}ai(Y,C,1160);c[X+0>>2]=0;c[X+4>>2]=0;c[X+8>>2]=0;S=a[Y]|0;Da=(S&1)==0;if(Da){ab=(S&255)>>>1}else{ab=c[Y+4>>2]|0}S=ab+13|0;if(S>>>0>4294967279){Vj(0)}if(S>>>0<11){a[X]=26;bb=X+1|0}else{S=ab+29&-16;ka=ws(S)|0;c[X+8>>2]=ka;c[X>>2]=S|1;c[X+4>>2]=13;bb=ka}na=bb+0|0;pa=1280|0;oa=na+13|0;do{a[na]=a[pa]|0;na=na+1|0;pa=pa+1|0}while((na|0)<(oa|0));a[bb+13|0]=0;if(Da){cb=Y+1|0}else{cb=c[Y+8>>2]|0}ek(X,cb,ab)|0;Be(W,X,1168);ai(Z,G,1160);ze(V,W,Z);Be(U,V,1176);ai(ca,C+1|0,1128);c[ba+0>>2]=0;c[ba+4>>2]=0;c[ba+8>>2]=0;C=a[ca]|0;G=(C&1)==0;if(G){db=(C&255)>>>1}else{db=c[ca+4>>2]|0}C=db+4|0;if(C>>>0>4294967279){Vj(0)}if(C>>>0<11){a[ba]=8;eb=ba+1|0}else{C=db+20&-16;ab=ws(C)|0;c[ba+8>>2]=ab;c[ba>>2]=C|1;c[ba+4>>2]=4;eb=ab}a[eb]=1818584402;a[eb+1|0]=7103845;a[eb+2|0]=27749;a[eb+3|0]=108;a[eb+4|0]=0;if(G){fb=ca+1|0}else{fb=c[ca+8>>2]|0}ek(ba,fb,db)|0;Be(aa,ba,1184);db=sf(aa)|0;if((a[db]&1)==0){c[$+0>>2]=c[db+0>>2];c[$+4>>2]=c[db+4>>2];c[$+8>>2]=c[db+8>>2]}else{fb=c[db+8>>2]|0;G=c[db+4>>2]|0;if(G>>>0>4294967279){Vj(0)}if(G>>>0<11){a[$]=G<<1;gb=$+1|0}else{db=G+16&-16;eb=ws(db)|0;c[$+8>>2]=eb;c[$>>2]=db|1;c[$+4>>2]=G;gb=eb}Ss(gb|0,fb|0,G|0)|0;a[gb+G|0]=0}$h(_,Te(0,ci($)|0)|0,1200);ze(T,U,_);if(!((a[_]&1)==0)){ys(c[_+8>>2]|0)}if(!((a[$]&1)==0)){ys(c[$+8>>2]|0)}if(!((a[aa]&1)==0)){ys(c[aa+8>>2]|0)}if(!((a[ba]&1)==0)){ys(c[ba+8>>2]|0)}if(!((a[ca]&1)==0)){ys(c[ca+8>>2]|0)}if(!((a[U]&1)==0)){ys(c[U+8>>2]|0)}if(!((a[V]&1)==0)){ys(c[V+8>>2]|0)}if(!((a[Z]&1)==0)){ys(c[Z+8>>2]|0)}if(!((a[W]&1)==0)){ys(c[W+8>>2]|0)}if(!((a[X]&1)==0)){ys(c[X+8>>2]|0)}if(!((a[Y]&1)==0)){ys(c[Y+8>>2]|0)}Y=ws(76)|0;lh(Y,b,c[136]|0,T,0.0,215.0,.95686274766922,.800000011920929,.7137255072593689,0.0,0.0,0.0);c[la>>2]=Y;la=c[Y>>2]|0;X=c[la+44>>2]|0;W=b+28|0;Na=+g[W>>2];Oa=+(~~((Na- +Od[c[la+52>>2]&7](Y))*.5)|0);Cd[X&7](Y,Oa);Y=ws(76)|0;X=c[138]|0;la=ws(32)|0;Z=da+8|0;c[Z>>2]=la;c[da>>2]=33;c[da+4>>2]=21;na=la+0|0;pa=1296|0;oa=na+21|0;do{a[na]=a[pa]|0;na=na+1|0;pa=pa+1|0}while((na|0)<(oa|0));a[la+21|0]=0;lh(Y,b,X,da,0.0,240.0,.9490196108818054,.1882352977991104,.10588235408067703,0.0,0.0,0.0);c[ma>>2]=Y;if((a[da]&1)==0){hb=Y}else{ys(c[Z>>2]|0);hb=c[ma>>2]|0}ma=c[hb>>2]|0;Z=c[ma+44>>2]|0;Oa=+g[W>>2];Na=+(~~((Oa- +Od[c[ma+52>>2]&7](hb))*.5)|0);Cd[Z&7](hb,Na);if((a[T]&1)==0){i=d;return}ys(c[T+8>>2]|0);i=d;return}function Te(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=i;i=i+48|0;e=b+36|0;f=b;g=b+12|0;h=b+24|0;if((d|0)==0){j=0;i=b;return j|0}ai(h,d+ -1|0,1128);c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;d=a[h]|0;k=(d&1)==0;if(k){l=(d&255)>>>1}else{l=c[h+4>>2]|0}d=l+4|0;if(d>>>0>4294967279){Vj(0)}if(d>>>0<11){a[g]=8;m=g+1|0}else{d=l+20&-16;n=ws(d)|0;c[g+8>>2]=n;c[g>>2]=d|1;c[g+4>>2]=4;m=n}a[m]=1752394054;a[m+1|0]=6845289;a[m+2|0]=26739;a[m+3|0]=104;a[m+4|0]=0;if(k){o=h+1|0}else{o=c[h+8>>2]|0}ek(g,o,l)|0;Be(f,g,1320);l=sf(f)|0;if((a[l]&1)==0){c[e+0>>2]=c[l+0>>2];c[e+4>>2]=c[l+4>>2];c[e+8>>2]=c[l+8>>2]}else{o=c[l+8>>2]|0;k=c[l+4>>2]|0;if(k>>>0>4294967279){Vj(0)}if(k>>>0<11){a[e]=k<<1;p=e+1|0}else{l=k+16&-16;m=ws(l)|0;c[e+8>>2]=m;c[e>>2]=l|1;c[e+4>>2]=k;p=m}Ss(p|0,o|0,k|0)|0;a[p+k|0]=0}k=(ci(e)|0)<<2;if(!((a[e]&1)==0)){ys(c[e+8>>2]|0)}if(!((a[f]&1)==0)){ys(c[f+8>>2]|0)}if(!((a[g]&1)==0)){ys(c[g+8>>2]|0)}if((a[h]&1)==0){j=k;i=b;return j|0}ys(c[h+8>>2]|0);j=k;i=b;return j|0}function Ue(a){a=a|0;var b=0;b=i;rh(a);ys(a);i=b;return}function Ve(a){a=a|0;var b=0;b=i;rh(a);i=b;return}function We(b,d,e){b=b|0;d=+d;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0,C=0.0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,U=0,V=0,W=0,X=0;f=i;i=i+176|0;h=f+156|0;j=f+144|0;k=f+132|0;l=f+120|0;m=f+108|0;n=f+96|0;o=f+84|0;p=f+72|0;q=f+48|0;r=f+36|0;s=f+24|0;t=f+12|0;u=f;v=f+60|0;sh(b,d,e);w=b+36|0;x=c[w>>2]|0;if((x|0)==0){y=c[b+4>>2]|0;z=+Od[c[(c[y>>2]|0)+56>>2]&7](y);A=+T(+((z- +g[b+32>>2])*.5));y=b+40|0;z=+g[y>>2]+1.0;g[y>>2]=z;B=b+24|0;C=+g[B>>2]+z;g[B>>2]=C;if(!(C>A)){i=f;return}g[B>>2]=A;A=z*-.5;g[y>>2]=A;B=~~A;if(!(+(((B|0)>-1?B:0-B|0)|0)<1.0700000524520874)){i=f;return}c[w>>2]=1;g[y>>2]=0.0;i=f;return}else if((x|0)==2?(x=b+40|0,A=+g[x>>2]+1.0,g[x>>2]=A,x=b+24|0,z=+g[x>>2]+A,g[x>>2]=z,x=c[b+4>>2]|0,z>+Od[c[(c[x>>2]|0)+56>>2]&7](x)):0){if((b|0)==0){i=f;return}Dd[c[(c[b>>2]|0)+4>>2]&255](b);i=f;return}x=c[b+48>>2]|0;if(((x|0)!=0?Gd[c[(c[x>>2]|0)+32>>2]&1](x,+g[b+20>>2]+d,+g[b+24>>2]+e)|0:0)?Zf(0)|0:0){x=b+44|0;ai(l,(c[(c[x>>2]|0)+120>>2]|0)+1|0,1128);c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;y=a[l]|0;B=(y&1)==0;if(B){D=(y&255)>>>1}else{D=c[l+4>>2]|0}y=D+3|0;if(y>>>0>4294967279){Vj(0)}if(y>>>0<11){a[k]=6;E=k+1|0}else{y=D+19&-16;F=ws(y)|0;c[k+8>>2]=F;c[k>>2]=y|1;c[k+4>>2]=3;E=F}a[E+0|0]=a[1120|0]|0;a[E+1|0]=a[1121|0]|0;a[E+2|0]=a[1122|0]|0;a[E+3|0]=0;if(B){G=l+1|0}else{G=c[l+8>>2]|0}ek(k,G,D)|0;Be(j,k,1184);D=sf(j)|0;if((a[D]&1)==0){c[h+0>>2]=c[D+0>>2];c[h+4>>2]=c[D+4>>2];c[h+8>>2]=c[D+8>>2]}else{G=c[D+8>>2]|0;B=c[D+4>>2]|0;if(B>>>0>4294967279){Vj(0)}if(B>>>0<11){a[h]=B<<1;H=h+1|0}else{D=B+16&-16;E=ws(D)|0;c[h+8>>2]=E;c[h>>2]=D|1;c[h+4>>2]=B;H=E}Ss(H|0,G|0,B|0)|0;a[H+B|0]=0}B=Te(0,ci(h)|0)|0;if(!((a[h]&1)==0)){ys(c[h+8>>2]|0)}if(!((a[j]&1)==0)){ys(c[j+8>>2]|0)}if(!((a[k]&1)==0)){ys(c[k+8>>2]|0)}if(!((a[l]&1)==0)){ys(c[l+8>>2]|0)}l=c[x>>2]|0;x=l+64|0;k=c[x>>2]|0;if(!(k>>>0<B>>>0)){c[x>>2]=k-B;B=l+120|0;c[B>>2]=(c[B>>2]|0)+1;cf(l);Se(b);i=f;return}}l=c[b+60>>2]|0;if(((l|0)!=0?Gd[c[(c[l>>2]|0)+32>>2]&1](l,+g[b+20>>2]+d,+g[b+24>>2]+e)|0:0)?Zf(0)|0:0){l=b+44|0;ai(p,(c[(c[l>>2]|0)+124>>2]|0)+1|0,1128);c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;B=a[p]|0;k=(B&1)==0;if(k){I=(B&255)>>>1}else{I=c[p+4>>2]|0}B=I+4|0;if(B>>>0>4294967279){Vj(0)}if(B>>>0<11){a[o]=8;J=o+1|0}else{B=I+20&-16;x=ws(B)|0;c[o+8>>2]=x;c[o>>2]=B|1;c[o+4>>2]=4;J=x}a[J]=1701999948;a[J+1|0]=6648437;a[J+2|0]=25970;a[J+3|0]=101;a[J+4|0]=0;if(k){K=p+1|0}else{K=c[p+8>>2]|0}ek(o,K,I)|0;Be(n,o,1184);I=sf(n)|0;if((a[I]&1)==0){c[m+0>>2]=c[I+0>>2];c[m+4>>2]=c[I+4>>2];c[m+8>>2]=c[I+8>>2]}else{K=c[I+8>>2]|0;k=c[I+4>>2]|0;if(k>>>0>4294967279){Vj(0)}if(k>>>0<11){a[m]=k<<1;L=m+1|0}else{I=k+16&-16;J=ws(I)|0;c[m+8>>2]=J;c[m>>2]=I|1;c[m+4>>2]=k;L=J}Ss(L|0,K|0,k|0)|0;a[L+k|0]=0}k=Te(0,ci(m)|0)|0;if(!((a[m]&1)==0)){ys(c[m+8>>2]|0)}if(!((a[n]&1)==0)){ys(c[n+8>>2]|0)}if(!((a[o]&1)==0)){ys(c[o+8>>2]|0)}if(!((a[p]&1)==0)){ys(c[p+8>>2]|0)}p=c[l>>2]|0;l=p+64|0;o=c[l>>2]|0;if(!(o>>>0<k>>>0)){c[l>>2]=o-k;k=p+124|0;c[k>>2]=(c[k>>2]|0)+1;cf(p);Se(b);i=f;return}}p=c[b+72>>2]|0;if((p|0)!=0){k=b+20|0;o=b+24|0;if(Gd[c[(c[p>>2]|0)+32>>2]&1](p,+g[k>>2]+d,+g[o>>2]+e)|0?Zf(0)|0:0){p=b+44|0;ai(t,(c[(c[p>>2]|0)+128>>2]|0)+1|0,1128);c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;l=a[t]|0;n=(l&1)==0;if(n){M=(l&255)>>>1}else{M=c[t+4>>2]|0}l=M+4|0;if(l>>>0>4294967279){Vj(0)}if(l>>>0<11){a[s]=8;N=s+1|0}else{l=M+20&-16;m=ws(l)|0;c[s+8>>2]=m;c[s>>2]=l|1;c[s+4>>2]=4;N=m}a[N]=1818584402;a[N+1|0]=7103845;a[N+2|0]=27749;a[N+3|0]=108;a[N+4|0]=0;if(n){O=t+1|0}else{O=c[t+8>>2]|0}ek(s,O,M)|0;Be(r,s,1184);M=sf(r)|0;if((a[M]&1)==0){c[q+0>>2]=c[M+0>>2];c[q+4>>2]=c[M+4>>2];c[q+8>>2]=c[M+8>>2]}else{O=c[M+8>>2]|0;n=c[M+4>>2]|0;if(n>>>0>4294967279){Vj(0)}if(n>>>0<11){a[q]=n<<1;P=q+1|0}else{M=n+16&-16;N=ws(M)|0;c[q+8>>2]=N;c[q>>2]=M|1;c[q+4>>2]=n;P=N}Ss(P|0,O|0,n|0)|0;a[P+n|0]=0}n=Te(0,ci(q)|0)|0;if(!((a[q]&1)==0)){ys(c[q+8>>2]|0)}if(!((a[r]&1)==0)){ys(c[r+8>>2]|0)}if(!((a[s]&1)==0)){ys(c[s+8>>2]|0)}if(!((a[t]&1)==0)){ys(c[t+8>>2]|0)}t=c[p>>2]|0;p=t+64|0;s=c[p>>2]|0;if(!(s>>>0<n>>>0)){c[p>>2]=s-n;n=t+128|0;c[n>>2]=(c[n>>2]|0)+1;cf(t);Se(b);i=f;return}else{Q=o;R=k}}else{Q=o;R=k}}else{Q=b+24|0;R=b+20|0}a[u]=10;k=u+1|0;a[k+0|0]=a[1096|0]|0;a[k+1|0]=a[1097|0]|0;a[k+2|0]=a[1098|0]|0;a[k+3|0]=a[1099|0]|0;a[k+4|0]=a[1100|0]|0;a[u+6|0]=0;o=b+84|0;t=c[o>>2]|0;if(Gd[c[(c[t>>2]|0)+32>>2]&1](t,+g[R>>2]+d,+g[Q>>2]+e)|0?Yf(0)|0:0){$j(u,1328)|0}if(Zf(0)|0?(t=c[o>>2]|0,Gd[c[(c[t>>2]|0)+32>>2]&1](t,+g[R>>2]+d,+g[Q>>2]+e)|0):0){c[w>>2]=2}else{w=c[o>>2]|0;Ed[c[(c[w>>2]|0)+68>>2]&63](v,w);w=a[u]|0;Q=(w&1)==0;if(Q){S=(w&255)>>>1}else{S=c[u+4>>2]|0}w=a[v]|0;R=(w&1)==0;if(R){U=(w&255)>>>1}else{U=c[v+4>>2]|0}a:do{if((S|0)==(U|0)){if(Q){V=k}else{V=c[u+8>>2]|0}if(R){W=v+1|0}else{W=c[v+8>>2]|0}if(!Q){X=(Ps(V,W,S)|0)!=0;break}if((S|0)==0){X=0}else{w=S;t=V;n=W;while(1){if((a[t]|0)!=(a[n]|0)){X=1;break a}s=w+ -1|0;if((s|0)==0){X=0;break}else{w=s;t=t+1|0;n=n+1|0}}}}else{X=1}}while(0);if(!R){ys(c[v+8>>2]|0)}if(X){X=c[o>>2]|0;if((X|0)!=0){Dd[c[(c[X>>2]|0)+4>>2]&255](X)}X=Eg(u)|0;v=ws(48)|0;e=+g[X+28>>2];d=+g[X+32>>2];gh(v,b,u,+g[b+28>>2]-e+-25.0,+g[b+32>>2]-d+-17.0,e,d);c[o>>2]=v}}if((a[u]&1)==0){i=f;return}ys(c[u+8>>2]|0);i=f;return}function Xe(b,d,e,f){b=b|0;d=+d;e=+e;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0;h=i;i=i+96|0;j=h+80|0;k=h;l=h+16|0;m=ws(16)|0;n=j+8|0;c[n>>2]=m;c[j>>2]=17;c[j+4>>2]=12;o=m+0|0;p=1040|0;q=o+12|0;do{a[o]=a[p]|0;o=o+1|0;p=p+1|0}while((o|0)<(q|0));a[m+12|0]=0;m=Eg(j)|0;if(!((a[j]&1)==0)){ys(c[n>>2]|0)}n=b+20|0;j=b+24|0;Fg(m,+g[n>>2]+d,+g[j>>2]+e,f,0,0.0);th(b,d,e,f);m=c[134]|0;$h(k,c[(c[b+44>>2]|0)+68>>2]|0,1200);b=tg(m,k,0.0,0.0,0.0)|0;if(!((a[k]&1)==0)){ys(c[k+8>>2]|0)}r=+g[n>>2]+d+65.0;d=+g[j>>2]+e+285.0;o=l+0|0;q=o+60|0;do{c[o>>2]=0;o=o+4|0}while((o|0)<(q|0));g[l>>2]=+g[f>>2];g[l+4>>2]=+g[f+4>>2];g[l+8>>2]=+g[f+8>>2];g[l+12>>2]=+g[f+12>>2];g[l+16>>2]=+g[f+16>>2];g[l+20>>2]=+g[f+20>>2];g[l+24>>2]=+g[f+24>>2];g[l+28>>2]=+g[f+28>>2];g[l+32>>2]=+g[f+32>>2];g[l+36>>2]=+g[f+36>>2];g[l+40>>2]=+g[f+40>>2];g[l+44>>2]=+g[f+44>>2];g[l+48>>2]=+g[f+48>>2];g[l+52>>2]=+g[f+52>>2];g[l+56>>2]=+g[f+56>>2];g[l+60>>2]=+g[f+60>>2];ug(b,r,d,.95686274766922,.800000011920929,.7137255072593689,l);i=h;return}function Ye(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0,D=0.0;f=i;i=i+160|0;h=f+144|0;j=f+132|0;k=f+120|0;l=f+108|0;m=f+96|0;n=f+84|0;o=f+72|0;p=f+48|0;q=f+36|0;r=f+24|0;s=f+12|0;t=f;u=f+60|0;ph(b,d,0.0,0.0,1.0,1.0);c[b>>2]=1384;v=ws(16)|0;w=h+8|0;c[w>>2]=v;c[h>>2]=17;c[h+4>>2]=12;x=v+0|0;y=1456|0;z=x+12|0;do{a[x]=a[y]|0;x=x+1|0;y=y+1|0}while((x|0)<(z|0));a[v+12|0]=0;v=Eg(h)|0;if(!((a[h]&1)==0)){ys(c[w>>2]|0)}w=v+28|0;h=b+28|0;g[h>>2]=+g[w>>2];A=v+32|0;v=b+32|0;g[v>>2]=+g[A>>2];B=+Od[c[(c[d>>2]|0)+52>>2]&7](d);g[b+20>>2]=+T(+((B- +g[h>>2])*.5));g[b+24>>2]=-+g[v>>2];c[b+36>>2]=0;g[b+40>>2]=0.0;c[b+44>>2]=e;e=ws(48)|0;d=ws(16)|0;C=j+8|0;c[C>>2]=d;c[j>>2]=17;c[j+4>>2]=12;x=d+0|0;y=1456|0;z=x+12|0;do{a[x]=a[y]|0;x=x+1|0;y=y+1|0}while((x|0)<(z|0));a[d+12|0]=0;gh(e,b,j,0.0,0.0,+g[w>>2],+g[A>>2]);if(!((a[j]&1)==0)){ys(c[C>>2]|0)}C=ws(76)|0;j=c[134]|0;A=ws(32)|0;w=k+8|0;c[w>>2]=A;c[k>>2]=33;c[k+4>>2]=16;x=A+0|0;y=1472|0;z=x+16|0;do{a[x]=a[y]|0;x=x+1|0;y=y+1|0}while((x|0)<(z|0));a[A+16|0]=0;lh(C,b,j,k,38.0,26.0,.4627451002597809,.25882354378700256,.10196078568696976,0.0,0.0,0.0);if(!((a[k]&1)==0)){ys(c[w>>2]|0)}w=ws(76)|0;k=c[134]|0;j=ws(32)|0;C=l+8|0;c[C>>2]=j;c[l>>2]=33;c[l+4>>2]=16;x=j+0|0;y=1472|0;z=x+16|0;do{a[x]=a[y]|0;x=x+1|0;y=y+1|0}while((x|0)<(z|0));a[j+16|0]=0;lh(w,b,k,l,40.0,25.0,.95686274766922,.800000011920929,.7137255072593689,0.0,0.0,0.0);if(!((a[l]&1)==0)){ys(c[C>>2]|0)}C=ws(76)|0;l=c[134]|0;k=ws(32)|0;w=m+8|0;c[w>>2]=k;c[m>>2]=33;c[m+4>>2]=23;x=k+0|0;y=1496|0;z=x+23|0;do{a[x]=a[y]|0;x=x+1|0;y=y+1|0}while((x|0)<(z|0));a[k+23|0]=0;lh(C,b,l,m,28.0,286.0,.4627451002597809,.25882354378700256,.10196078568696976,0.0,0.0,0.0);if(!((a[m]&1)==0)){ys(c[w>>2]|0)}w=ws(76)|0;m=c[134]|0;l=ws(32)|0;C=n+8|0;c[C>>2]=l;c[n>>2]=33;c[n+4>>2]=23;x=l+0|0;y=1496|0;z=x+23|0;do{a[x]=a[y]|0;x=x+1|0;y=y+1|0}while((x|0)<(z|0));a[l+23|0]=0;lh(w,b,m,n,30.0,285.0,.95686274766922,.800000011920929,.7137255072593689,0.0,0.0,0.0);if(!((a[n]&1)==0)){ys(c[C>>2]|0)}C=ws(76)|0;n=c[136]|0;m=ws(32)|0;w=o+8|0;c[w>>2]=m;c[o>>2]=33;c[o+4>>2]=26;x=m+0|0;y=1520|0;z=x+26|0;do{a[x]=a[y]|0;x=x+1|0;y=y+1|0}while((x|0)<(z|0));a[m+26|0]=0;lh(C,b,n,o,0.0,100.0,.95686274766922,.800000011920929,.7137255072593689,0.0,0.0,0.0);if(!((a[o]&1)==0)){ys(c[w>>2]|0)}w=c[C>>2]|0;o=c[w+44>>2]|0;B=+g[h>>2];D=+(~~((B- +Od[c[w+52>>2]&7](C))*.5)|0);Cd[o&7](C,D);C=ws(76)|0;o=c[136]|0;w=ws(32)|0;n=p+8|0;c[n>>2]=w;c[p>>2]=33;c[p+4>>2]=27;x=w+0|0;y=1552|0;z=x+27|0;do{a[x]=a[y]|0;x=x+1|0;y=y+1|0}while((x|0)<(z|0));a[w+27|0]=0;lh(C,b,o,p,0.0,130.0,.95686274766922,.800000011920929,.7137255072593689,0.0,0.0,0.0);if(!((a[p]&1)==0)){ys(c[n>>2]|0)}n=c[C>>2]|0;p=c[n+44>>2]|0;D=+g[h>>2];B=+(~~((D- +Od[c[n+52>>2]&7](C))*.5)|0);Cd[p&7](C,B);C=ws(76)|0;p=c[136]|0;n=ws(32)|0;o=q+8|0;c[o>>2]=n;c[q>>2]=33;c[q+4>>2]=21;x=n+0|0;y=1584|0;z=x+21|0;do{a[x]=a[y]|0;x=x+1|0;y=y+1|0}while((x|0)<(z|0));a[n+21|0]=0;lh(C,b,p,q,0.0,160.0,.95686274766922,.800000011920929,.7137255072593689,0.0,0.0,0.0);if(!((a[q]&1)==0)){ys(c[o>>2]|0)}o=c[C>>2]|0;q=c[o+44>>2]|0;B=+g[h>>2];D=+(~~((B- +Od[c[o+52>>2]&7](C))*.5)|0);Cd[q&7](C,D);C=ws(76)|0;q=c[136]|0;o=ws(32)|0;p=r+8|0;c[p>>2]=o;c[r>>2]=33;c[r+4>>2]=23;x=o+0|0;y=1608|0;z=x+23|0;do{a[x]=a[y]|0;x=x+1|0;y=y+1|0}while((x|0)<(z|0));a[o+23|0]=0;lh(C,b,q,r,0.0,190.0,.95686274766922,.800000011920929,.7137255072593689,0.0,0.0,0.0);if(!((a[r]&1)==0)){ys(c[p>>2]|0)}p=c[C>>2]|0;r=c[p+44>>2]|0;D=+g[h>>2];B=+(~~((D- +Od[c[p+52>>2]&7](C))*.5)|0);Cd[r&7](C,B);C=ws(76)|0;r=c[136]|0;p=ws(32)|0;q=s+8|0;c[q>>2]=p;c[s>>2]=33;c[s+4>>2]=22;x=p+0|0;y=1632|0;z=x+22|0;do{a[x]=a[y]|0;x=x+1|0;y=y+1|0}while((x|0)<(z|0));a[p+22|0]=0;lh(C,b,r,s,0.0,220.0,.95686274766922,.800000011920929,.7137255072593689,0.0,0.0,0.0);if(!((a[s]&1)==0)){ys(c[q>>2]|0)}q=c[C>>2]|0;s=c[q+44>>2]|0;B=+g[h>>2];D=+(~~((B- +Od[c[q+52>>2]&7](C))*.5)|0);Cd[s&7](C,D);a[t]=10;C=t+1|0;a[C+0|0]=a[1656|0]|0;a[C+1|0]=a[1657|0]|0;a[C+2|0]=a[1658|0]|0;a[C+3|0]=a[1659|0]|0;a[C+4|0]=a[1660|0]|0;a[t+6|0]=0;C=Eg(t)|0;if(!((a[t]&1)==0)){ys(c[t+8>>2]|0)}t=ws(48)|0;a[u]=10;s=u+1|0;a[s+0|0]=a[1656|0]|0;a[s+1|0]=a[1657|0]|0;a[s+2|0]=a[1658|0]|0;a[s+3|0]=a[1659|0]|0;a[s+4|0]=a[1660|0]|0;a[u+6|0]=0;D=+g[C+28>>2];B=+g[C+32>>2];gh(t,b,u,+g[h>>2]-D+-25.0,+g[v>>2]-B+-17.0,D,B);c[b+48>>2]=t;if((a[u]&1)==0){i=f;return}ys(c[u+8>>2]|0);i=f;return}function Ze(a){a=a|0;var b=0;b=i;rh(a);ys(a);i=b;return}function _e(a){a=a|0;var b=0;b=i;rh(a);i=b;return}function $e(b,d,e){b=b|0;d=+d;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0,q=0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=i;i=i+32|0;h=f+12|0;j=f;sh(b,d,e);k=b+36|0;l=c[k>>2]|0;if((l|0)==2){m=b+40|0;n=+g[m>>2]+1.0;g[m>>2]=n;m=b+24|0;o=+g[m>>2]+n;g[m>>2]=o;p=c[b+4>>2]|0;if(o>+Od[c[(c[p>>2]|0)+56>>2]&7](p)){if((b|0)==0){i=f;return}Dd[c[(c[b>>2]|0)+4>>2]&255](b);i=f;return}else{q=m}}else if((l|0)==0){l=c[b+4>>2]|0;o=+Od[c[(c[l>>2]|0)+56>>2]&7](l);n=+T(+((o- +g[b+32>>2])*.5));l=b+40|0;o=+g[l>>2]+1.0;g[l>>2]=o;m=b+24|0;r=+g[m>>2]+o;g[m>>2]=r;if(!(r>n)){i=f;return}g[m>>2]=n;n=o*-.5;g[l>>2]=n;m=~~n;if(!(+(((m|0)>-1?m:0-m|0)|0)<1.0700000524520874)){i=f;return}c[k>>2]=1;g[l>>2]=0.0;i=f;return}else{q=b+24|0}a[h]=10;l=h+1|0;a[l+0|0]=a[1656|0]|0;a[l+1|0]=a[1657|0]|0;a[l+2|0]=a[1658|0]|0;a[l+3|0]=a[1659|0]|0;a[l+4|0]=a[1660|0]|0;a[h+6|0]=0;m=b+48|0;p=c[m>>2]|0;s=b+20|0;if(Gd[c[(c[p>>2]|0)+32>>2]&1](p,+g[s>>2]+d,+g[q>>2]+e)|0?Yf(0)|0:0){$j(h,1664)|0}if(Zf(0)|0?(p=c[m>>2]|0,Gd[c[(c[p>>2]|0)+32>>2]&1](p,+g[s>>2]+d,+g[q>>2]+e)|0):0){c[k>>2]=2}else{k=c[m>>2]|0;Ed[c[(c[k>>2]|0)+68>>2]&63](j,k);k=a[h]|0;q=(k&1)==0;if(q){t=(k&255)>>>1}else{t=c[h+4>>2]|0}k=a[j]|0;s=(k&1)==0;if(s){u=(k&255)>>>1}else{u=c[j+4>>2]|0}a:do{if((t|0)==(u|0)){if(q){v=l}else{v=c[h+8>>2]|0}if(s){w=j+1|0}else{w=c[j+8>>2]|0}if(!q){x=(Ps(v,w,t)|0)!=0;break}if((t|0)==0){x=0}else{k=t;p=v;y=w;while(1){if((a[p]|0)!=(a[y]|0)){x=1;break a}z=k+ -1|0;if((z|0)==0){x=0;break}else{k=z;p=p+1|0;y=y+1|0}}}}else{x=1}}while(0);if(!s){ys(c[j+8>>2]|0)}if(x){x=c[m>>2]|0;if((x|0)!=0){Dd[c[(c[x>>2]|0)+4>>2]&255](x)}x=Eg(h)|0;j=ws(48)|0;e=+g[x+28>>2];d=+g[x+32>>2];gh(j,b,h,+g[b+28>>2]-e+-25.0,+g[b+32>>2]-d+-17.0,e,d);c[m>>2]=j}}if((a[h]&1)==0){i=f;return}ys(c[h+8>>2]|0);i=f;return}function af(a,b,c,d){a=a|0;b=+b;c=+c;d=d|0;var e=0;e=i;th(a,b,c,d);i=e;return}function bf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;f=i;i=i+144|0;h=f+132|0;j=f+120|0;k=f+108|0;l=f+96|0;m=f+84|0;n=f+72|0;o=f+60|0;p=f+36|0;q=f+24|0;r=f+12|0;s=f;t=f+48|0;u=+Od[c[(c[d>>2]|0)+52>>2]&7](d);ph(b,d,0.0,0.0,u,+Od[c[(c[d>>2]|0)+56>>2]&7](d));c[b>>2]=1712;d=b+96|0;c[d>>2]=0;v=b+100|0;c[v>>2]=0;w=b+104|0;c[w>>2]=0;a[b+60|0]=0;c[b+108>>2]=e;c[b+48>>2]=2;e=ws(32)|0;x=j+8|0;c[x>>2]=e;c[j>>2]=33;c[j+4>>2]=21;y=e+0|0;z=1784|0;A=y+21|0;do{a[y]=a[z]|0;y=y+1|0;z=z+1|0}while((y|0)<(A|0));a[e+21|0]=0;e=sf(j)|0;if((a[e]&1)==0){c[h+0>>2]=c[e+0>>2];c[h+4>>2]=c[e+4>>2];c[h+8>>2]=c[e+8>>2]}else{B=c[e+8>>2]|0;C=c[e+4>>2]|0;if(C>>>0>4294967279){Vj(0)}if(C>>>0<11){a[h]=C<<1;D=h+1|0}else{e=C+16&-16;E=ws(e)|0;c[h+8>>2]=E;c[h>>2]=e|1;c[h+4>>2]=C;D=E}Ss(D|0,B|0,C|0)|0;a[D+C|0]=0}g[b+80>>2]=+bi(h);if(!((a[h]&1)==0)){ys(c[h+8>>2]|0)}if(!((a[j]&1)==0)){ys(c[x>>2]|0)}a[l]=20;y=l+1|0;z=1808|0;A=y+10|0;do{a[y]=a[z]|0;y=y+1|0;z=z+1|0}while((y|0)<(A|0));a[l+11|0]=0;x=sf(l)|0;if((a[x]&1)==0){c[k+0>>2]=c[x+0>>2];c[k+4>>2]=c[x+4>>2];c[k+8>>2]=c[x+8>>2]}else{j=c[x+8>>2]|0;h=c[x+4>>2]|0;if(h>>>0>4294967279){Vj(0)}if(h>>>0<11){a[k]=h<<1;F=k+1|0}else{x=h+16&-16;C=ws(x)|0;c[k+8>>2]=C;c[k>>2]=x|1;c[k+4>>2]=h;F=C}Ss(F|0,j|0,h|0)|0;a[F+h|0]=0}h=b+84|0;g[h>>2]=+bi(k);if(!((a[k]&1)==0)){ys(c[k+8>>2]|0)}if(!((a[l]&1)==0)){ys(c[l+8>>2]|0)}a[n]=20;y=n+1|0;z=1824|0;A=y+10|0;do{a[y]=a[z]|0;y=y+1|0;z=z+1|0}while((y|0)<(A|0));a[n+11|0]=0;l=sf(n)|0;if((a[l]&1)==0){c[m+0>>2]=c[l+0>>2];c[m+4>>2]=c[l+4>>2];c[m+8>>2]=c[l+8>>2]}else{k=c[l+8>>2]|0;F=c[l+4>>2]|0;if(F>>>0>4294967279){Vj(0)}if(F>>>0<11){a[m]=F<<1;G=m+1|0}else{l=F+16&-16;j=ws(l)|0;c[m+8>>2]=j;c[m>>2]=l|1;c[m+4>>2]=F;G=j}Ss(G|0,k|0,F|0)|0;a[G+F|0]=0}u=+bi(m);g[b+88>>2]=u- +g[b+32>>2];if(!((a[m]&1)==0)){ys(c[m+8>>2]|0)}if(!((a[n]&1)==0)){ys(c[n+8>>2]|0)}g[b+72>>2]=0.0;g[b+76>>2]=+g[h>>2];c[b+64>>2]=1e4;c[b+68>>2]=0;a[b+40|0]=0;c[b+44>>2]=1500;h=ws(136)|0;qe(h,b,b);c[b+116>>2]=h;h=ws(64)|0;Le(h,b,b);c[b+112>>2]=h;h=q+1|0;n=r+1|0;m=r+8|0;F=q+8|0;G=p+8|0;k=o+8|0;j=o+1|0;l=o+4|0;C=q+4|0;x=r+4|0;D=0;a:while(1){$h(r,D,1840);c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;B=a[r]|0;E=(B&1)==0;if(E){H=(B&255)>>>1}else{H=c[x>>2]|0}B=H+4|0;if(B>>>0>4294967279){I=42;break}if(B>>>0<11){a[q]=8;J=h}else{B=H+20&-16;e=ws(B)|0;c[F>>2]=e;c[q>>2]=B|1;c[C>>2]=4;J=e}a[J]=1752394054;a[J+1|0]=6845289;a[J+2|0]=26739;a[J+3|0]=104;a[J+4|0]=0;ek(q,E?n:c[m>>2]|0,H)|0;Be(p,q,1848);E=sf(p)|0;if((a[E]&1)==0){c[o+0>>2]=c[E+0>>2];c[o+4>>2]=c[E+4>>2];c[o+8>>2]=c[E+8>>2]}else{e=c[E+8>>2]|0;B=c[E+4>>2]|0;if(B>>>0>4294967279){I=49;break}if(B>>>0<11){a[o]=B<<1;K=j}else{E=B+16&-16;L=ws(E)|0;c[k>>2]=L;c[o>>2]=E|1;c[l>>2]=B;K=L}Ss(K|0,e|0,B|0)|0;a[K+B|0]=0}B=ci(o)|0;if(!((a[o]&1)==0)){ys(c[k>>2]|0)}if(!((a[p]&1)==0)){ys(c[G>>2]|0)}if(!((a[q]&1)==0)){ys(c[F>>2]|0)}if(!((a[r]&1)==0)){ys(c[m>>2]|0)}if((B|0)!=0){e=0;do{L=ws(84)|0;ye(L,b,b,D,0);E=c[v>>2]|0;if((E|0)==(c[w>>2]|0)){M=c[d>>2]|0;N=E-M|0;O=N>>2;P=O+1|0;if(P>>>0>1073741823){I=68;break a}if(O>>>0<536870911){Q=N>>1;R=Q>>>0<P>>>0?P:Q;if((R|0)==0){S=0;T=0}else{U=R;I=71}}else{U=1073741823;I=71}if((I|0)==71){I=0;S=U;T=ws(U<<2)|0}R=T+(O<<2)|0;if((R|0)!=0){c[R>>2]=L}Ss(T|0,M|0,N|0)|0;c[d>>2]=T;c[v>>2]=T+(P<<2);c[w>>2]=T+(S<<2);if((M|0)!=0){ys(M)}}else{if((E|0)==0){V=0}else{c[E>>2]=L;V=c[v>>2]|0}c[v>>2]=V+4}e=e+1|0}while(e>>>0<B>>>0)}B=D+1|0;if((B|0)<8){D=B}else{I=78;break}}if((I|0)==42){Vj(0)}else if((I|0)==49){Vj(0)}else if((I|0)==68){wp(0)}else if((I|0)==78){c[b+120>>2]=0;c[b+124>>2]=0;c[b+128>>2]=0;cf(b);I=Ys()|0;D=b+28|0;g[b+144>>2]=+((I|0)%(~~+g[D>>2]|0)|0|0);I=Ys()|0;g[b+148>>2]=+((I|0)%(~~+g[D>>2]|0)|0|0);a[t]=20;y=t+1|0;z=1824|0;A=y+10|0;do{a[y]=a[z]|0;y=y+1|0;z=z+1|0}while((y|0)<(A|0));a[t+11|0]=0;z=sf(t)|0;if((a[z]&1)==0){c[s+0>>2]=c[z+0>>2];c[s+4>>2]=c[z+4>>2];c[s+8>>2]=c[z+8>>2]}else{y=c[z+8>>2]|0;A=c[z+4>>2]|0;if(A>>>0>4294967279){Vj(0)}if(A>>>0<11){a[s]=A<<1;W=s+1|0}else{z=A+16&-16;I=ws(z)|0;c[s+8>>2]=I;c[s>>2]=z|1;c[s+4>>2]=A;W=I}Ss(W|0,y|0,A|0)|0;a[W+A|0]=0}u=+bi(s);if(!((a[s]&1)==0)){ys(c[s+8>>2]|0)}if(!((a[t]&1)==0)){ys(c[t+8>>2]|0)}t=~~(u+-100.0);s=0;do{A=Ys()|0;g[b+(s<<2)+152>>2]=+((A|0)%(~~+g[D>>2]|0)|0|0);g[b+(s<<2)+172>>2]=+((Ys()|0)%(t|0)|0|0)+50.0;g[b+(s<<2)+192>>2]=+((Ys()|0)%1e4|0|0);g[b+(s<<2)+212>>2]=+(((Ys()|0)%50|0)+50|0)/1.0e4;s=s+1|0}while((s|0)<5);i=f;return}}function cf(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;d=i;i=i+144|0;e=d+132|0;f=d+120|0;h=d+108|0;j=d+96|0;k=d+84|0;l=d+72|0;m=d+60|0;n=d+36|0;o=d+24|0;p=d+12|0;q=d;r=d+48|0;ai(j,c[b+120>>2]|0,1840);c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;s=a[j]|0;t=(s&1)==0;if(t){u=(s&255)>>>1}else{u=c[j+4>>2]|0}s=u+3|0;if(s>>>0>4294967279){Vj(0)}if(s>>>0<11){a[h]=6;v=h+1|0}else{s=u+19&-16;w=ws(s)|0;c[h+8>>2]=w;c[h>>2]=s|1;c[h+4>>2]=3;v=w}a[v+0|0]=a[2056|0]|0;a[v+1|0]=a[2057|0]|0;a[v+2|0]=a[2058|0]|0;a[v+3|0]=0;if(t){x=j+1|0}else{x=c[j+8>>2]|0}ek(h,x,u)|0;Be(f,h,2064);u=sf(f)|0;if((a[u]&1)==0){c[e+0>>2]=c[u+0>>2];c[e+4>>2]=c[u+4>>2];c[e+8>>2]=c[u+8>>2]}else{x=c[u+8>>2]|0;t=c[u+4>>2]|0;if(t>>>0>4294967279){Vj(0)}if(t>>>0<11){a[e]=t<<1;y=e+1|0}else{u=t+16&-16;v=ws(u)|0;c[e+8>>2]=v;c[e>>2]=u|1;c[e+4>>2]=t;y=v}Ss(y|0,x|0,t|0)|0;a[y+t|0]=0}g[b+132>>2]=+bi(e);if(!((a[e]&1)==0)){ys(c[e+8>>2]|0)}if(!((a[f]&1)==0)){ys(c[f+8>>2]|0)}if(!((a[h]&1)==0)){ys(c[h+8>>2]|0)}if(!((a[j]&1)==0)){ys(c[j+8>>2]|0)}ai(n,c[b+124>>2]|0,1840);c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;j=a[n]|0;h=(j&1)==0;if(h){z=(j&255)>>>1}else{z=c[n+4>>2]|0}j=z+4|0;if(j>>>0>4294967279){Vj(0)}if(j>>>0<11){a[m]=8;A=m+1|0}else{j=z+20&-16;f=ws(j)|0;c[m+8>>2]=f;c[m>>2]=j|1;c[m+4>>2]=4;A=f}a[A]=1701999948;a[A+1|0]=6648437;a[A+2|0]=25970;a[A+3|0]=101;a[A+4|0]=0;if(h){B=n+1|0}else{B=c[n+8>>2]|0}ek(m,B,z)|0;Be(l,m,2064);z=sf(l)|0;if((a[z]&1)==0){c[k+0>>2]=c[z+0>>2];c[k+4>>2]=c[z+4>>2];c[k+8>>2]=c[z+8>>2]}else{B=c[z+8>>2]|0;h=c[z+4>>2]|0;if(h>>>0>4294967279){Vj(0)}if(h>>>0<11){a[k]=h<<1;C=k+1|0}else{z=h+16&-16;A=ws(z)|0;c[k+8>>2]=A;c[k>>2]=z|1;c[k+4>>2]=h;C=A}Ss(C|0,B|0,h|0)|0;a[C+h|0]=0}g[b+136>>2]=+bi(k);if(!((a[k]&1)==0)){ys(c[k+8>>2]|0)}if(!((a[l]&1)==0)){ys(c[l+8>>2]|0)}if(!((a[m]&1)==0)){ys(c[m+8>>2]|0)}if(!((a[n]&1)==0)){ys(c[n+8>>2]|0)}ai(r,c[b+128>>2]|0,1840);c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;n=a[r]|0;m=(n&1)==0;if(m){D=(n&255)>>>1}else{D=c[r+4>>2]|0}n=D+4|0;if(n>>>0>4294967279){Vj(0)}if(n>>>0<11){a[q]=8;E=q+1|0}else{n=D+20&-16;l=ws(n)|0;c[q+8>>2]=l;c[q>>2]=n|1;c[q+4>>2]=4;E=l}a[E]=1818584402;a[E+1|0]=7103845;a[E+2|0]=27749;a[E+3|0]=108;a[E+4|0]=0;if(m){F=r+1|0}else{F=c[r+8>>2]|0}ek(q,F,D)|0;Be(p,q,2064);D=sf(p)|0;if((a[D]&1)==0){c[o+0>>2]=c[D+0>>2];c[o+4>>2]=c[D+4>>2];c[o+8>>2]=c[D+8>>2]}else{F=c[D+8>>2]|0;m=c[D+4>>2]|0;if(m>>>0>4294967279){Vj(0)}if(m>>>0<11){a[o]=m<<1;G=o+1|0}else{D=m+16&-16;E=ws(D)|0;c[o+8>>2]=E;c[o>>2]=D|1;c[o+4>>2]=m;G=E}Ss(G|0,F|0,m|0)|0;a[G+m|0]=0}g[b+140>>2]=+bi(o);if(!((a[o]&1)==0)){ys(c[o+8>>2]|0)}if(!((a[p]&1)==0)){ys(c[p+8>>2]|0)}if(!((a[q]&1)==0)){ys(c[q+8>>2]|0)}if((a[r]&1)==0){i=d;return}ys(c[r+8>>2]|0);i=d;return}function df(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;c[a>>2]=1712;d=c[a+96>>2]|0;if((d|0)==0){rh(a);ys(a);i=b;return}e=a+100|0;f=c[e>>2]|0;if((f|0)!=(d|0)){c[e>>2]=f+(~((f+ -4+(0-d)|0)>>>2)<<2)}ys(d);rh(a);ys(a);i=b;return}function ef(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;c[a>>2]=1712;d=c[a+96>>2]|0;if((d|0)==0){rh(a);i=b;return}e=a+100|0;f=c[e>>2]|0;if((f|0)!=(d|0)){c[e>>2]=f+(~((f+ -4+(0-d)|0)>>>2)<<2)}ys(d);rh(a);i=b;return}function ff(b,d,e){b=b|0;d=+d;e=+e;var f=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0.0,F=0.0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0.0,V=0;f=i;i=i+176|0;j=f;l=f+152|0;m=f+140|0;n=f+128|0;o=f+116|0;p=f+104|0;q=f+92|0;r=f+164|0;s=f+56|0;t=f+44|0;u=f+32|0;v=f+20|0;w=f+8|0;x=f+68|0;y=f+80|0;z=b+68|0;A=c[z>>2]|0;B=c[b+64>>2]|0;if((A|0)<(B|0)){C=A+1|0;c[z>>2]=C;D=C}else{D=A}if((D|0)>(B|0)){c[z>>2]=D+ -1}D=b+108|0;z=c[D>>2]|0;if((Fd[c[(c[z>>2]|0)+16>>2]&127](z)|0)!=1){i=f;return}if(((a[b+40|0]|0)!=0?(z=b+44|0,B=c[z>>2]|0,(B|0)>-1):0)?(A=B+ -16|0,c[z>>2]=A,(A|0)<0):0){A=ws(52)|0;Ye(A,c[D>>2]|0,b);a[b+60|0]=1}A=b+144|0;E=+g[A>>2]+.032;g[A>>2]=E;z=b+28|0;F=+g[z>>2];if(E>F){g[A>>2]=-200.0}A=b+148|0;E=+g[A>>2]+.048;g[A>>2]=E>F?-200.0:E;A=m+1|0;B=m+11|0;C=m+8|0;G=l+8|0;H=l+1|0;I=l+4|0;J=0;do{E=+g[b+(J<<2)+212>>2]*16.0;K=b+(J<<2)+172|0;F=+g[K>>2]-E;g[K>>2]=F;L=b+(J<<2)+192|0;g[L>>2]=+g[L>>2]+E*.01;if(F<-100.0){a[m]=20;M=A+0|0;N=1824|0;O=M+10|0;do{a[M]=a[N]|0;M=M+1|0;N=N+1|0}while((M|0)<(O|0));a[B]=0;L=sf(m)|0;if((a[L]&1)==0){c[l+0>>2]=c[L+0>>2];c[l+4>>2]=c[L+4>>2];c[l+8>>2]=c[L+8>>2]}else{P=c[L+8>>2]|0;Q=c[L+4>>2]|0;if(Q>>>0>4294967279){R=17;break}if(Q>>>0<11){a[l]=Q<<1;S=H}else{L=Q+16&-16;T=ws(L)|0;c[G>>2]=T;c[l>>2]=L|1;c[I>>2]=Q;S=T}Ss(S|0,P|0,Q|0)|0;a[S+Q|0]=0}F=+bi(l);if(!((a[l]&1)==0)){ys(c[G>>2]|0)}if(!((a[m]&1)==0)){ys(c[C>>2]|0)}g[K>>2]=F+100.0}J=J+1|0}while((J|0)<5);if((R|0)==17){Vj(0)}F=d- +g[b+72>>2];R=b+76|0;E=e- +g[R>>2];a[n]=14;J=n+1|0;a[J+0|0]=a[1856|0]|0;a[J+1|0]=a[1857|0]|0;a[J+2|0]=a[1858|0]|0;a[J+3|0]=a[1859|0]|0;a[J+4|0]=a[1860|0]|0;a[J+5|0]=a[1861|0]|0;a[J+6|0]=a[1862|0]|0;J=n+8|0;a[J]=0;C=Eg(n)|0;if(!((a[n]&1)==0)){ys(c[J>>2]|0)}if((C|0)==0?(xi(1864,1872,149,0,j)|0)==0:0){c[j>>2]=1872;c[j+4>>2]=149;Mb(1904,j|0)|0;J=fc(8)|0;n=ws(32)|0;c[t+8>>2]=n;c[t>>2]=33;c[t+4>>2]=26;M=n+0|0;N=1872|0;O=M+26|0;do{a[M]=a[N]|0;M=M+1|0;N=N+1|0}while((M|0)<(O|0));a[n+26|0]=0;a[u]=2;a[u+1|0]=40;a[u+2|0]=0;ze(s,t,u);yi(v,149);ze(r,s,v);v=ws(32)|0;c[w+8>>2]=v;c[w>>2]=33;c[w+4>>2]=26;M=v+0|0;N=1928|0;O=M+26|0;do{a[M]=a[N]|0;M=M+1|0;N=N+1|0}while((M|0)<(O|0));a[v+26|0]=0;ze(q,r,w);a[x]=14;w=x+1|0;a[w+0|0]=a[1864|0]|0;a[w+1|0]=a[1865|0]|0;a[w+2|0]=a[1866|0]|0;a[w+3|0]=a[1867|0]|0;a[w+4|0]=a[1868|0]|0;a[w+5|0]=a[1869|0]|0;a[w+6|0]=a[1870|0]|0;a[x+8|0]=0;ze(p,q,x);a[y]=4;x=y+1|0;a[x]=2599;a[x+1|0]=10;a[y+3|0]=0;ze(o,p,y);Fj(J,o);td(J|0,9992,51)}U=+_f();J=b+20|0;if(((U>+g[J>>2]+d+ +g[z>>2]+-2.0- +g[C+28>>2]?(U=+_f(),U<+g[J>>2]+d+ +g[z>>2]+-2.0):0)?(d=+$f(),z=b+24|0,d>+g[z>>2]+e+2.0):0)?(d=+$f(),d<+g[z>>2]+e+ +g[C+32>>2]):0){if(Zf(0)|0){C=ws(88)|0;Re(C,c[D>>2]|0,b);a[b+60|0]=1;V=1}else{V=1}}else{V=0}D=b+36|0;c[D>>2]=(c[D>>2]|0)+16;D=b+48|0;C=c[D>>2]|0;if((C|0)==2){z=b+60|0;if((a[z]|0)==0?!(V|(Yf(0)|0)^1):0){c[D>>2]=3;g[b+52>>2]=30.0;g[b+56>>2]=1.0}Zf(0)|0;if(!(Yf(0)|0)){a[z]=0}}else if((C|0)==3){z=b+52|0;e=+g[z>>2];V=b+56|0;d=e+e*.019999999552965164*+g[V>>2];g[z>>2]=d;if(!(d>100.0)){if(d<15.0){g[V>>2]=1.0;g[z>>2]=15.0}}else{g[V>>2]=-1.0;g[z>>2]=100.0}if(!(Yf(0)|0)){c[D>>2]=4;h[k>>3]=+g[z>>2];c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];Mb(1960,j|0)|0}Zf(0)|0}else if((C|0)==4){a[b+60|0]=1}sh(b,F,E);Ed[c[(c[b>>2]|0)+28>>2]&63](b,c[b+116>>2]|0);C=c[b+112>>2]|0;E=+Od[c[(c[C>>2]|0)+40>>2]&7](C);C=c[b+4>>2]|0;F=E- +Od[c[(c[C>>2]|0)+56>>2]&7](C)*.5;E=+g[b+84>>2];d=F<E?E:F;F=+g[b+88>>2];E=+g[R>>2];g[R>>2]=E+ +g[b+80>>2]*((d>F?F:d)-E);i=f;return}function gf(b,d,e,f){b=b|0;d=+d;e=+e;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,U=0,V=0,W=0,X=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0.0,sb=0.0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0.0,Cb=0.0,Db=0.0,Eb=0,Fb=0.0,Gb=0.0,Hb=0.0,Ib=0,Jb=0.0,Kb=0.0,Lb=0.0,Nb=0,Ob=0.0,Pb=0.0,Qb=0.0,Rb=0.0,Sb=0.0;h=i;i=i+1472|0;j=h;k=h+1448|0;l=h+1436|0;m=h+1424|0;n=h+1412|0;o=h+1400|0;p=h+1388|0;q=h+1376|0;r=h+1364|0;s=h+1352|0;t=h+1340|0;u=h+1328|0;v=h+1316|0;w=h+1304|0;x=h+1292|0;y=h+1280|0;z=h+1268|0;A=h+1256|0;B=h+1244|0;C=h+1232|0;D=h+1220|0;E=h+1208|0;F=h+1196|0;G=h+1184|0;H=h+1172|0;I=h+1160|0;J=h+1148|0;K=h+1136|0;L=h+1124|0;M=h+1112|0;N=h+1100|0;O=h+1088|0;P=h+1076|0;Q=h+1064|0;R=h+1052|0;S=h+1040|0;U=h+1028|0;V=h+1016|0;W=h+1004|0;X=h+992|0;Z=h+980|0;_=h+968|0;$=h+956|0;aa=h+944|0;ba=h+932|0;ca=h+920|0;da=h+908|0;ea=h+896|0;fa=h+884|0;ga=h+872|0;ha=h+860|0;ia=h+848|0;ja=h+836|0;ka=h+824|0;la=h+812|0;ma=h+800|0;na=h+788|0;oa=h+1460|0;pa=h+320|0;qa=h+296|0;ra=h+284|0;sa=h+272|0;ta=h+260|0;ua=h+248|0;va=h+236|0;wa=h+224|0;xa=h+212|0;ya=h+200|0;za=h+188|0;Aa=h+176|0;Ba=h+164|0;Ca=h+308|0;Da=h+68|0;Ea=h+56|0;Fa=h+8|0;Ga=h+20|0;Ha=h+32|0;Ia=h+44|0;Ja=h+140|0;Ka=h+80|0;La=h+92|0;Ma=h+104|0;Na=h+116|0;Oa=h+128|0;Pa=h+152|0;Qa=h+764|0;Ra=h+332|0;Sa=h+344|0;Ta=h+408|0;Ua=h+420|0;Va=h+432|0;Wa=h+444|0;Xa=h+456|0;Ya=h+468|0;Za=h+480|0;_a=h+492|0;$a=h+504|0;ab=h+516|0;bb=h+528|0;cb=h+540|0;db=h+552|0;eb=h+568|0;fb=h+632|0;gb=h+644|0;hb=h+656|0;ib=h+668|0;jb=h+680|0;kb=h+692|0;lb=h+704|0;mb=h+716|0;nb=h+728|0;ob=h+740|0;pb=h+752|0;qb=h+776|0;rb=d- +g[b+72>>2];sb=e- +g[b+76>>2];a[l]=20;tb=l+1|0;ub=1824|0;vb=tb+10|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[l+11|0]=0;wb=sf(l)|0;if((a[wb]&1)==0){c[k+0>>2]=c[wb+0>>2];c[k+4>>2]=c[wb+4>>2];c[k+8>>2]=c[wb+8>>2]}else{xb=c[wb+8>>2]|0;yb=c[wb+4>>2]|0;if(yb>>>0>4294967279){Vj(0)}if(yb>>>0<11){a[k]=yb<<1;zb=k+1|0}else{wb=yb+16&-16;Ab=ws(wb)|0;c[k+8>>2]=Ab;c[k>>2]=wb|1;c[k+4>>2]=yb;zb=Ab}Ss(zb|0,xb|0,yb|0)|0;a[zb+yb|0]=0}Bb=+bi(k);if(!((a[k]&1)==0)){ys(c[k+8>>2]|0)}if(!((a[l]&1)==0)){ys(c[l+8>>2]|0)}a[m]=10;l=m+1|0;a[l+0|0]=a[1984|0]|0;a[l+1|0]=a[1985|0]|0;a[l+2|0]=a[1986|0]|0;a[l+3|0]=a[1987|0]|0;a[l+4|0]=a[1988|0]|0;a[m+6|0]=0;l=Eg(m)|0;if(!((a[m]&1)==0)){ys(c[m+8>>2]|0)}if((l|0)==0?(xi(1864,1872,274,0,j)|0)==0:0){c[j>>2]=1872;c[j+4>>2]=274;Mb(1904,j|0)|0;m=fc(8)|0;k=ws(32)|0;c[s+8>>2]=k;c[s>>2]=33;c[s+4>>2]=26;tb=k+0|0;ub=1872|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[k+26|0]=0;a[t]=2;a[t+1|0]=40;a[t+2|0]=0;ze(r,s,t);yi(u,274);ze(q,r,u);u=ws(32)|0;c[v+8>>2]=u;c[v>>2]=33;c[v+4>>2]=26;tb=u+0|0;ub=1928|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[u+26|0]=0;ze(p,q,v);a[w]=14;v=w+1|0;a[v+0|0]=a[1864|0]|0;a[v+1|0]=a[1865|0]|0;a[v+2|0]=a[1866|0]|0;a[v+3|0]=a[1867|0]|0;a[v+4|0]=a[1868|0]|0;a[v+5|0]=a[1869|0]|0;a[v+6|0]=a[1870|0]|0;a[w+8|0]=0;ze(o,p,w);a[x]=4;w=x+1|0;a[w]=2599;a[w+1|0]=10;a[x+3|0]=0;ze(n,o,x);Fj(m,n);td(m|0,9992,51)}m=b+20|0;Cb=+T(+(rb+ +g[m>>2]));n=b+24|0;Db=+T(+(sb+ +g[n>>2]));x=b+4|0;o=c[x>>2]|0;Hg(l,Cb,Db,+Od[c[(c[o>>2]|0)+52>>2]&7](o),Bb,f);a[y]=14;o=y+1|0;a[o+0|0]=a[1992|0]|0;a[o+1|0]=a[1993|0]|0;a[o+2|0]=a[1994|0]|0;a[o+3|0]=a[1995|0]|0;a[o+4|0]=a[1996|0]|0;a[o+5|0]=a[1997|0]|0;a[o+6|0]=a[1998|0]|0;o=y+8|0;a[o]=0;l=Eg(y)|0;if(!((a[y]&1)==0)){ys(c[o>>2]|0)}if((l|0)==0?(xi(1864,1872,280,0,j)|0)==0:0){c[j>>2]=1872;c[j+4>>2]=280;Mb(1904,j|0)|0;o=fc(8)|0;y=ws(32)|0;c[E+8>>2]=y;c[E>>2]=33;c[E+4>>2]=26;tb=y+0|0;ub=1872|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[y+26|0]=0;a[F]=2;a[F+1|0]=40;a[F+2|0]=0;ze(D,E,F);yi(G,280);ze(C,D,G);G=ws(32)|0;c[H+8>>2]=G;c[H>>2]=33;c[H+4>>2]=26;tb=G+0|0;ub=1928|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[G+26|0]=0;ze(B,C,H);a[I]=14;H=I+1|0;a[H+0|0]=a[1864|0]|0;a[H+1|0]=a[1865|0]|0;a[H+2|0]=a[1866|0]|0;a[H+3|0]=a[1867|0]|0;a[H+4|0]=a[1868|0]|0;a[H+5|0]=a[1869|0]|0;a[H+6|0]=a[1870|0]|0;a[I+8|0]=0;ze(A,B,I);a[J]=4;I=J+1|0;a[I]=2599;a[I+1|0]=10;a[J+3|0]=0;ze(z,A,J);Fj(o,z);td(o|0,9992,51)}Fg(l,rb+ +g[m>>2],Bb+(sb+ +g[n>>2])- +g[l+32>>2],f,0,0.0);l=K+1|0;o=K+8|0;z=0;do{a[K]=14;a[l+0|0]=a[2e3|0]|0;a[l+1|0]=a[2001|0]|0;a[l+2|0]=a[2002|0]|0;a[l+3|0]=a[2003|0]|0;a[l+4|0]=a[2004|0]|0;a[l+5|0]=a[2005|0]|0;a[l+6|0]=a[2006|0]|0;a[o]=0;J=Eg(K)|0;if(!((a[K]&1)==0)){ys(c[o>>2]|0)}if((J|0)==0?(xi(1864,1872,287,0,j)|0)==0:0){Eb=28;break}Db=rb+ +g[m>>2]+ +g[b+(z<<2)+152>>2]+ +Y(+(+g[b+(z<<2)+192>>2]))*130.0;Fg(J,Db,sb+ +g[n>>2]+ +g[b+(z<<2)+172>>2],f,0,0.0);z=z+1|0}while((z|0)<5);if((Eb|0)==28){c[j>>2]=1872;c[j+4>>2]=287;Mb(1904,j|0)|0;Eb=fc(8)|0;z=ws(32)|0;c[Q+8>>2]=z;c[Q>>2]=33;c[Q+4>>2]=26;tb=z+0|0;ub=1872|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[z+26|0]=0;a[R]=2;a[R+1|0]=40;a[R+2|0]=0;ze(P,Q,R);yi(S,287);ze(O,P,S);S=ws(32)|0;c[U+8>>2]=S;c[U>>2]=33;c[U+4>>2]=26;tb=S+0|0;ub=1928|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[S+26|0]=0;ze(N,O,U);a[V]=14;U=V+1|0;a[U+0|0]=a[1864|0]|0;a[U+1|0]=a[1865|0]|0;a[U+2|0]=a[1866|0]|0;a[U+3|0]=a[1867|0]|0;a[U+4|0]=a[1868|0]|0;a[U+5|0]=a[1869|0]|0;a[U+6|0]=a[1870|0]|0;a[V+8|0]=0;ze(M,N,V);a[W]=4;V=W+1|0;a[V]=2599;a[V+1|0]=10;a[W+3|0]=0;ze(L,M,W);Fj(Eb,L);td(Eb|0,9992,51)}a[X]=6;Eb=X+1|0;a[Eb+0|0]=a[2008|0]|0;a[Eb+1|0]=a[2009|0]|0;a[Eb+2|0]=a[2010|0]|0;a[X+4|0]=0;Eb=Eg(X)|0;if(!((a[X]&1)==0)){ys(c[X+8>>2]|0)}if((Eb|0)==0?(xi(1864,1872,295,0,j)|0)==0:0){c[j>>2]=1872;c[j+4>>2]=295;Mb(1904,j|0)|0;X=fc(8)|0;L=ws(32)|0;c[ca+8>>2]=L;c[ca>>2]=33;c[ca+4>>2]=26;tb=L+0|0;ub=1872|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[L+26|0]=0;a[da]=2;a[da+1|0]=40;a[da+2|0]=0;ze(ba,ca,da);yi(ea,295);ze(aa,ba,ea);ea=ws(32)|0;c[fa+8>>2]=ea;c[fa>>2]=33;c[fa+4>>2]=26;tb=ea+0|0;ub=1928|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[ea+26|0]=0;ze($,aa,fa);a[ga]=14;fa=ga+1|0;a[fa+0|0]=a[1864|0]|0;a[fa+1|0]=a[1865|0]|0;a[fa+2|0]=a[1866|0]|0;a[fa+3|0]=a[1867|0]|0;a[fa+4|0]=a[1868|0]|0;a[fa+5|0]=a[1869|0]|0;a[fa+6|0]=a[1870|0]|0;a[ga+8|0]=0;ze(_,$,ga);a[ha]=4;ga=ha+1|0;a[ga]=2599;a[ga+1|0]=10;a[ha+3|0]=0;ze(Z,_,ha);Fj(X,Z);td(X|0,9992,51)}Db=+T(+(rb+ +g[m>>2]));X=b+84|0;Cb=+T(+(sb+ +g[n>>2]+ +g[X>>2]));Z=c[x>>2]|0;Fb=+Od[c[(c[Z>>2]|0)+52>>2]&7](Z);Ig(Eb,Db,Cb,Fb,-+g[X>>2],1.0,f);a[ia]=14;X=ia+1|0;a[X+0|0]=a[2016|0]|0;a[X+1|0]=a[2017|0]|0;a[X+2|0]=a[2018|0]|0;a[X+3|0]=a[2019|0]|0;a[X+4|0]=a[2020|0]|0;a[X+5|0]=a[2021|0]|0;a[X+6|0]=a[2022|0]|0;X=ia+8|0;a[X]=0;Eb=Eg(ia)|0;if(!((a[ia]&1)==0)){ys(c[X>>2]|0)}if((Eb|0)==0?(xi(1864,1872,299,0,j)|0)==0:0){c[j>>2]=1872;c[j+4>>2]=299;Mb(1904,j|0)|0;X=fc(8)|0;ia=ws(32)|0;c[oa+8>>2]=ia;c[oa>>2]=33;c[oa+4>>2]=26;tb=ia+0|0;ub=1872|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[ia+26|0]=0;a[pa]=2;a[pa+1|0]=40;a[pa+2|0]=0;ze(na,oa,pa);yi(qa,299);ze(ma,na,qa);qa=ws(32)|0;c[ra+8>>2]=qa;c[ra>>2]=33;c[ra+4>>2]=26;tb=qa+0|0;ub=1928|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[qa+26|0]=0;ze(la,ma,ra);a[sa]=14;ra=sa+1|0;a[ra+0|0]=a[1864|0]|0;a[ra+1|0]=a[1865|0]|0;a[ra+2|0]=a[1866|0]|0;a[ra+3|0]=a[1867|0]|0;a[ra+4|0]=a[1868|0]|0;a[ra+5|0]=a[1869|0]|0;a[ra+6|0]=a[1870|0]|0;a[sa+8|0]=0;ze(ka,la,sa);a[ta]=4;sa=ta+1|0;a[sa]=2599;a[sa+1|0]=10;a[ta+3|0]=0;ze(ja,ka,ta);Fj(X,ja);td(X|0,9992,51)}Fg(Eb,rb+ +g[m>>2]+ +g[b+144>>2],sb+ +g[n>>2]+-100.0,f,0,0.0);a[ua]=14;Eb=ua+1|0;a[Eb+0|0]=a[2024|0]|0;a[Eb+1|0]=a[2025|0]|0;a[Eb+2|0]=a[2026|0]|0;a[Eb+3|0]=a[2027|0]|0;a[Eb+4|0]=a[2028|0]|0;a[Eb+5|0]=a[2029|0]|0;a[Eb+6|0]=a[2030|0]|0;Eb=ua+8|0;a[Eb]=0;X=Eg(ua)|0;if(!((a[ua]&1)==0)){ys(c[Eb>>2]|0)}if((X|0)==0?(xi(1864,1872,303,0,j)|0)==0:0){c[j>>2]=1872;c[j+4>>2]=303;Mb(1904,j|0)|0;Eb=fc(8)|0;ua=ws(32)|0;c[Aa+8>>2]=ua;c[Aa>>2]=33;c[Aa+4>>2]=26;tb=ua+0|0;ub=1872|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[ua+26|0]=0;a[Ba]=2;a[Ba+1|0]=40;a[Ba+2|0]=0;ze(za,Aa,Ba);yi(Ca,303);ze(ya,za,Ca);Ca=ws(32)|0;c[Da+8>>2]=Ca;c[Da>>2]=33;c[Da+4>>2]=26;tb=Ca+0|0;ub=1928|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[Ca+26|0]=0;ze(xa,ya,Da);a[Ea]=14;Da=Ea+1|0;a[Da+0|0]=a[1864|0]|0;a[Da+1|0]=a[1865|0]|0;a[Da+2|0]=a[1866|0]|0;a[Da+3|0]=a[1867|0]|0;a[Da+4|0]=a[1868|0]|0;a[Da+5|0]=a[1869|0]|0;a[Da+6|0]=a[1870|0]|0;a[Ea+8|0]=0;ze(wa,xa,Ea);a[Fa]=4;Ea=Fa+1|0;a[Ea]=2599;a[Ea+1|0]=10;a[Fa+3|0]=0;ze(va,wa,Fa);Fj(Eb,va);td(Eb|0,9992,51)}Fg(X,rb+ +g[m>>2]+ +g[b+148>>2],sb+ +g[n>>2]+-150.0,f,0,0.0);th(b,rb,sb,f);a[Ga]=14;X=Ga+1|0;a[X+0|0]=a[2032|0]|0;a[X+1|0]=a[2033|0]|0;a[X+2|0]=a[2034|0]|0;a[X+3|0]=a[2035|0]|0;a[X+4|0]=a[2036|0]|0;a[X+5|0]=a[2037|0]|0;a[X+6|0]=a[2038|0]|0;X=Ga+8|0;a[X]=0;Eb=Eg(Ga)|0;if(!((a[Ga]&1)==0)){ys(c[X>>2]|0)}if((Eb|0)==0?(xi(1864,1872,317,0,j)|0)==0:0){c[j>>2]=1872;c[j+4>>2]=317;Mb(1904,j|0)|0;X=fc(8)|0;Ga=ws(32)|0;c[Ma+8>>2]=Ga;c[Ma>>2]=33;c[Ma+4>>2]=26;tb=Ga+0|0;ub=1872|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[Ga+26|0]=0;a[Na]=2;a[Na+1|0]=40;a[Na+2|0]=0;ze(La,Ma,Na);yi(Oa,317);ze(Ka,La,Oa);Oa=ws(32)|0;c[Pa+8>>2]=Oa;c[Pa>>2]=33;c[Pa+4>>2]=26;tb=Oa+0|0;ub=1928|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[Oa+26|0]=0;ze(Ja,Ka,Pa);a[Qa]=14;Pa=Qa+1|0;a[Pa+0|0]=a[1864|0]|0;a[Pa+1|0]=a[1865|0]|0;a[Pa+2|0]=a[1866|0]|0;a[Pa+3|0]=a[1867|0]|0;a[Pa+4|0]=a[1868|0]|0;a[Pa+5|0]=a[1869|0]|0;a[Pa+6|0]=a[1870|0]|0;a[Qa+8|0]=0;ze(Ia,Ja,Qa);a[Ra]=4;Qa=Ra+1|0;a[Qa]=2599;a[Qa+1|0]=10;a[Ra+3|0]=0;ze(Ha,Ia,Ra);Fj(X,Ha);td(X|0,9992,51)}Fg(Eb,rb+ +g[m>>2],Bb+(sb+ +g[n>>2])- +g[Eb+32>>2],f,0,0.0);Eb=b+116|0;Bb=rb+ +ve(c[Eb>>2]|0);Fb=sb+ +we(c[Eb>>2]|0);Eb=b+112|0;X=c[Eb>>2]|0;Cb=rb+ +Od[c[(c[X>>2]|0)+36>>2]&7](X)+-2.0;X=c[Eb>>2]|0;rb=sb+ +Od[c[(c[X>>2]|0)+40>>2]&7](X)+-10.0;tb=Sa+0|0;vb=tb+60|0;do{c[tb>>2]=0;tb=tb+4|0}while((tb|0)<(vb|0));g[Sa>>2]=+g[f>>2];X=f+4|0;g[Sa+4>>2]=+g[X>>2];Eb=f+8|0;g[Sa+8>>2]=+g[Eb>>2];Ha=f+12|0;g[Sa+12>>2]=+g[Ha>>2];Ra=f+16|0;g[Sa+16>>2]=+g[Ra>>2];Ia=f+20|0;g[Sa+20>>2]=+g[Ia>>2];Qa=f+24|0;g[Sa+24>>2]=+g[Qa>>2];Ja=f+28|0;g[Sa+28>>2]=+g[Ja>>2];Pa=f+32|0;g[Sa+32>>2]=+g[Pa>>2];Ka=f+36|0;g[Sa+36>>2]=+g[Ka>>2];Oa=f+40|0;g[Sa+40>>2]=+g[Oa>>2];La=f+44|0;g[Sa+44>>2]=+g[La>>2];Na=f+48|0;g[Sa+48>>2]=+g[Na>>2];Ma=f+52|0;g[Sa+52>>2]=+g[Ma>>2];Ga=f+56|0;g[Sa+56>>2]=+g[Ga>>2];va=f+60|0;g[Sa+60>>2]=+g[va>>2];_g(Bb,Fb,Cb,rb,65416,Sa);a[Ta]=14;Sa=Ta+1|0;a[Sa+0|0]=a[2040|0]|0;a[Sa+1|0]=a[2041|0]|0;a[Sa+2|0]=a[2042|0]|0;a[Sa+3|0]=a[2043|0]|0;a[Sa+4|0]=a[2044|0]|0;a[Sa+5|0]=a[2045|0]|0;a[Sa+6|0]=a[2046|0]|0;Sa=Ta+8|0;a[Sa]=0;Fa=Eg(Ta)|0;if(!((a[Ta]&1)==0)){ys(c[Sa>>2]|0)}if((Fa|0)==0?(xi(1864,1872,332,0,j)|0)==0:0){c[j>>2]=1872;c[j+4>>2]=332;Mb(1904,j|0)|0;Sa=fc(8)|0;Ta=ws(32)|0;c[Za+8>>2]=Ta;c[Za>>2]=33;c[Za+4>>2]=26;tb=Ta+0|0;ub=1872|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[Ta+26|0]=0;a[_a]=2;a[_a+1|0]=40;a[_a+2|0]=0;ze(Ya,Za,_a);yi($a,332);ze(Xa,Ya,$a);$a=ws(32)|0;c[ab+8>>2]=$a;c[ab>>2]=33;c[ab+4>>2]=26;tb=$a+0|0;ub=1928|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[$a+26|0]=0;ze(Wa,Xa,ab);a[bb]=14;ab=bb+1|0;a[ab+0|0]=a[1864|0]|0;a[ab+1|0]=a[1865|0]|0;a[ab+2|0]=a[1866|0]|0;a[ab+3|0]=a[1867|0]|0;a[ab+4|0]=a[1868|0]|0;a[ab+5|0]=a[1869|0]|0;a[ab+6|0]=a[1870|0]|0;a[bb+8|0]=0;ze(Va,Wa,bb);a[cb]=4;bb=cb+1|0;a[bb]=2599;a[bb+1|0]=10;a[cb+3|0]=0;ze(Ua,Va,cb);Fj(Sa,Ua);td(Sa|0,9992,51)}Fg(Fa,+g[m>>2]+d+2.0,+g[n>>2]+e+2.0,f,0,0.0);Fa=c[132]|0;$h(db,c[b+68>>2]|0,2048);Sa=tg(Fa,db,0.0,0.0,0.0)|0;if(!((a[db]&1)==0)){ys(c[db+8>>2]|0)}rb=+g[m>>2]+d+34.0;Cb=+g[n>>2]+e+7.0;tb=eb+0|0;vb=tb+60|0;do{c[tb>>2]=0;tb=tb+4|0}while((tb|0)<(vb|0));g[eb>>2]=+g[f>>2];g[eb+4>>2]=+g[X>>2];g[eb+8>>2]=+g[Eb>>2];g[eb+12>>2]=+g[Ha>>2];g[eb+16>>2]=+g[Ra>>2];g[eb+20>>2]=+g[Ia>>2];g[eb+24>>2]=+g[Qa>>2];g[eb+28>>2]=+g[Ja>>2];g[eb+32>>2]=+g[Pa>>2];g[eb+36>>2]=+g[Ka>>2];g[eb+40>>2]=+g[Oa>>2];g[eb+44>>2]=+g[La>>2];g[eb+48>>2]=+g[Na>>2];g[eb+52>>2]=+g[Ma>>2];g[eb+56>>2]=+g[Ga>>2];g[eb+60>>2]=+g[va>>2];ug(Sa,rb,Cb,.95686274766922,.800000011920929,.7137255072593689,eb);a[fb]=14;eb=fb+1|0;a[eb+0|0]=a[1856|0]|0;a[eb+1|0]=a[1857|0]|0;a[eb+2|0]=a[1858|0]|0;a[eb+3|0]=a[1859|0]|0;a[eb+4|0]=a[1860|0]|0;a[eb+5|0]=a[1861|0]|0;a[eb+6|0]=a[1862|0]|0;eb=fb+8|0;a[eb]=0;Sa=Eg(fb)|0;if(!((a[fb]&1)==0)){ys(c[eb>>2]|0)}if((Sa|0)!=0){Gb=+g[m>>2];Hb=Gb+d;Ib=b+28|0;Jb=+g[Ib>>2];Kb=Hb+Jb;Lb=Kb+-2.0;Nb=Sa+28|0;Ob=+g[Nb>>2];Pb=Lb-Ob;Qb=+g[n>>2];Rb=Qb+e;Sb=Rb+2.0;Fg(Sa,Pb,Sb,f,0,0.0);i=h;return}if((xi(1864,1872,339,0,j)|0)==0){c[j>>2]=1872;c[j+4>>2]=339;Mb(1904,j|0)|0;j=fc(8)|0;eb=ws(32)|0;c[lb+8>>2]=eb;c[lb>>2]=33;c[lb+4>>2]=26;tb=eb+0|0;ub=1872|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[eb+26|0]=0;a[mb]=2;a[mb+1|0]=40;a[mb+2|0]=0;ze(kb,lb,mb);yi(nb,339);ze(jb,kb,nb);nb=ws(32)|0;c[ob+8>>2]=nb;c[ob>>2]=33;c[ob+4>>2]=26;tb=nb+0|0;ub=1928|0;vb=tb+26|0;do{a[tb]=a[ub]|0;tb=tb+1|0;ub=ub+1|0}while((tb|0)<(vb|0));a[nb+26|0]=0;ze(ib,jb,ob);a[pb]=14;ob=pb+1|0;a[ob+0|0]=a[1864|0]|0;a[ob+1|0]=a[1865|0]|0;a[ob+2|0]=a[1866|0]|0;a[ob+3|0]=a[1867|0]|0;a[ob+4|0]=a[1868|0]|0;a[ob+5|0]=a[1869|0]|0;a[ob+6|0]=a[1870|0]|0;a[pb+8|0]=0;ze(hb,ib,pb);a[qb]=4;pb=qb+1|0;a[pb]=2599;a[pb+1|0]=10;a[qb+3|0]=0;ze(gb,hb,qb);Fj(j,gb);td(j|0,9992,51)}else{Gb=+g[m>>2];Hb=Gb+d;Ib=b+28|0;Jb=+g[Ib>>2];Kb=Hb+Jb;Lb=Kb+-2.0;Nb=Sa+28|0;Ob=+g[Nb>>2];Pb=Lb-Ob;Qb=+g[n>>2];Rb=Qb+e;Sb=Rb+2.0;Fg(Sa,Pb,Sb,f,0,0.0);i=h;return}}function hf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;f=b+100|0;g=c[f>>2]|0;h=b+96|0;j=c[h>>2]|0;if((g|0)==(j|0)){wh(b,d);i=e;return}else{k=0}while(1){l=j+(k<<2)|0;m=c[l>>2]|0;n=k+1|0;if((m|0)==(d|0)){break}if(n>>>0<g-j>>2>>>0){k=n}else{o=21;break}}if((o|0)==21){wh(b,d);i=e;return}do{if((c[m+40>>2]|0)!=7){j=ws(84)|0;ye(j,b,b,c[(c[l>>2]|0)+40>>2]|0,1);n=c[f>>2]|0;p=b+104|0;if((n|0)!=(c[p>>2]|0)){if((n|0)==0){q=0}else{c[n>>2]=j;q=c[f>>2]|0}r=q+4|0;c[f>>2]=r;s=r;break}r=c[h>>2]|0;t=n-r|0;n=t>>2;u=n+1|0;if(u>>>0>1073741823){wp(0)}if(n>>>0<536870911){v=t>>1;w=v>>>0<u>>>0?u:v;if((w|0)==0){x=0;y=0}else{z=w;o=13}}else{z=1073741823;o=13}if((o|0)==13){x=z;y=ws(z<<2)|0}w=y+(n<<2)|0;if((w|0)!=0){c[w>>2]=j}j=y+(u<<2)|0;Ss(y|0,r|0,t|0)|0;c[h>>2]=y;c[f>>2]=j;c[p>>2]=y+(x<<2);if((r|0)==0){s=j}else{ys(r);s=c[f>>2]|0}}else{a[b+40|0]=1;s=g}}while(0);g=c[h>>2]|0;h=k<<2>>2;k=g+(h+1<<2)|0;x=s-k|0;Ts(g+(h<<2)|0,k|0,x|0)|0;k=g+((x>>2)+h<<2)|0;h=c[f>>2]|0;if((h|0)==(k|0)){wh(b,d);i=e;return}c[f>>2]=h+(~((h+ -4+(0-k)|0)>>>2)<<2);wh(b,d);i=e;return}function jf(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~((a+ -4+(0-d)|0)>>>2)<<2)}ys(d);i=b;return}function kf(a){a=a|0;var b=0;b=i;Mf(a,c[a+4>>2]|0);i=b;return}function lf(a){a=a|0;return}function mf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;b=i;i=i+272|0;d=b;e=b+248|0;f=b+236|0;g=b+224|0;h=b+212|0;j=b+200|0;k=b+188|0;l=b+176|0;m=b+164|0;n=b+152|0;o=b+140|0;p=b+260|0;q=b+56|0;r=b+44|0;s=b+8|0;t=b+20|0;u=b+32|0;v=b+116|0;w=b+68|0;x=b+80|0;y=b+92|0;z=b+104|0;A=b+128|0;if((c[2108>>2]|0)!=(c[526]|0)?(xi(2136,2168,15,0,d)|0)==0:0){c[d>>2]=2168;c[d+4>>2]=15;Mb(2208,d|0)|0;B=fc(8)|0;C=ws(48)|0;c[k+8>>2]=C;c[k>>2]=49;c[k+4>>2]=34;D=C+0|0;E=2168|0;F=D+34|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[C+34|0]=0;a[l]=2;a[l+1|0]=40;a[l+2|0]=0;ze(j,k,l);yi(m,15);ze(h,j,m);m=ws(32)|0;c[n+8>>2]=m;c[n>>2]=33;c[n+4>>2]=26;D=m+0|0;E=2232|0;F=D+26|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[m+26|0]=0;ze(g,h,n);n=ws(32)|0;c[o+8>>2]=n;c[o>>2]=33;c[o+4>>2]=31;D=n+0|0;E=2136|0;F=D+31|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[n+31|0]=0;ze(f,g,o);a[p]=4;o=p+1|0;a[o]=2599;a[o+1|0]=10;a[p+3|0]=0;ze(e,f,p);Fj(B,e);td(B|0,9992,51)}if((c[2128>>2]|0)==0){i=b;return}if((xi(2264,2168,16,0,d)|0)==0){c[d>>2]=2168;c[d+4>>2]=16;Mb(2208,d|0)|0;d=fc(8)|0;B=ws(48)|0;c[v+8>>2]=B;c[v>>2]=49;c[v+4>>2]=34;D=B+0|0;E=2168|0;F=D+34|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[B+34|0]=0;a[w]=2;a[w+1|0]=40;a[w+2|0]=0;ze(u,v,w);yi(x,16);ze(t,u,x);x=ws(32)|0;c[y+8>>2]=x;c[y>>2]=33;c[y+4>>2]=26;D=x+0|0;E=2232|0;F=D+26|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[x+26|0]=0;ze(s,t,y);y=ws(32)|0;c[z+8>>2]=y;c[z>>2]=33;c[z+4>>2]=24;D=y+0|0;E=2264|0;F=D+24|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[y+24|0]=0;ze(r,s,z);a[A]=4;z=A+1|0;a[z]=2599;a[z+1|0]=10;a[A+3|0]=0;ze(q,r,A);Fj(d,q);td(d|0,9992,51)}else{i=b;return}}function nf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+16|0;e=d;f=ws(4)|0;c[f>>2]=0;Be(e,b,2296);c[f>>2]=Qh(e)|0;if(!((a[e]&1)==0)){ys(c[e+8>>2]|0)}e=c[2108>>2]|0;if((e|0)!=(c[2112>>2]|0)){if((e|0)==0){g=0}else{c[e>>2]=f;g=c[2108>>2]|0}c[2108>>2]=g+4;i=d;return f|0}g=c[526]|0;b=e-g|0;e=b>>2;h=e+1|0;if(h>>>0>1073741823){wp(0)}if(e>>>0<536870911){j=b>>1;k=j>>>0<h>>>0?h:j;if((k|0)==0){l=0;m=0}else{n=k;o=11}}else{n=1073741823;o=11}if((o|0)==11){l=n;m=ws(n<<2)|0}n=m+(e<<2)|0;if((n|0)!=0){c[n>>2]=f}Ss(m|0,g|0,b|0)|0;c[526]=m;c[2108>>2]=m+(h<<2);c[2112>>2]=m+(l<<2);if((g|0)==0){i=d;return f|0}ys(g);i=d;return f|0}function of(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;d=i;i=i+65872|0;e=d;f=d+65844|0;g=d+65832|0;h=d+65820|0;j=d+65808|0;k=d+65796|0;l=d+65784|0;m=d+65772|0;n=d+65760|0;o=d+65748|0;p=d+65736|0;q=d+65856|0;r=d+65652|0;s=d+65640|0;t=d+65604|0;u=d+65616|0;v=d+65628|0;w=d+65712|0;x=d+65664|0;y=d+65676|0;z=d+65688|0;A=d+65700|0;B=d+65724|0;C=c[b>>2]|0;if((C|0)==0){D=1;i=d;return D|0}if(!(Sh(C)|0)){C=c[2108>>2]|0;E=c[526]|0;a:do{if((C|0)!=(E|0)){F=C-E>>2;G=0;while(1){H=G+1|0;if((c[E+(G<<2)>>2]|0)==(b|0)){break}if(H>>>0<F>>>0){G=H}else{I=8;break a}}if((b|0)!=0){J=b}else{I=8}}else{I=8}}while(0);if((I|0)==8){if((xi(2304,2168,44,0,e)|0)==0){c[e>>2]=2168;c[e+4>>2]=44;Mb(2208,e|0)|0;I=fc(8)|0;E=ws(48)|0;c[l+8>>2]=E;c[l>>2]=49;c[l+4>>2]=34;K=E+0|0;L=2168|0;M=K+34|0;do{a[K]=a[L]|0;K=K+1|0;L=L+1|0}while((K|0)<(M|0));a[E+34|0]=0;a[m]=2;a[m+1|0]=40;a[m+2|0]=0;ze(k,l,m);yi(n,44);ze(j,k,n);n=ws(32)|0;c[o+8>>2]=n;c[o>>2]=33;c[o+4>>2]=26;K=n+0|0;L=2232|0;M=K+26|0;do{a[K]=a[L]|0;K=K+1|0;L=L+1|0}while((K|0)<(M|0));a[n+26|0]=0;ze(h,j,o);a[p]=10;o=p+1|0;a[o+0|0]=a[2304|0]|0;a[o+1|0]=a[2305|0]|0;a[o+2|0]=a[2306|0]|0;a[o+3|0]=a[2307|0]|0;a[o+4|0]=a[2308|0]|0;a[p+6|0]=0;ze(g,h,p);a[q]=4;p=q+1|0;a[p]=2599;a[p+1|0]=10;a[q+3|0]=0;ze(f,g,q);Fj(I,f);td(I|0,9992,51)}else{J=0}}Uh(c[b>>2]|0)|0;I=Th(c[b>>2]|0)|0;if((I|0)==0?(xi(2312,2168,49,0,e)|0)==0:0){c[e>>2]=2168;c[e+4>>2]=49;Mb(2208,e|0)|0;f=fc(8)|0;q=ws(48)|0;c[w+8>>2]=q;c[w>>2]=49;c[w+4>>2]=34;K=q+0|0;L=2168|0;M=K+34|0;do{a[K]=a[L]|0;K=K+1|0;L=L+1|0}while((K|0)<(M|0));a[q+34|0]=0;a[x]=2;a[x+1|0]=40;a[x+2|0]=0;ze(v,w,x);yi(y,49);ze(u,v,y);y=ws(32)|0;c[z+8>>2]=y;c[z>>2]=33;c[z+4>>2]=26;K=y+0|0;L=2232|0;M=K+26|0;do{a[K]=a[L]|0;K=K+1|0;L=L+1|0}while((K|0)<(M|0));a[y+26|0]=0;ze(t,u,z);z=ws(16)|0;c[A+8>>2]=z;c[A>>2]=17;c[A+4>>2]=13;K=z+0|0;L=2312|0;M=K+13|0;do{a[K]=a[L]|0;K=K+1|0;L=L+1|0}while((K|0)<(M|0));a[z+13|0]=0;ze(s,t,A);a[B]=4;A=B+1|0;a[A]=2599;a[A+1|0]=10;a[B+3|0]=0;ze(r,s,B);Fj(f,r);td(f|0,9992,51)}f=xs(I+1|0)|0;Ss(f|0,Uh(c[b>>2]|0)|0,I|0)|0;a[f+I|0]=0;c[e>>2]=0;c[e+4>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;I=e+24|0;c[I>>2]=0;c[e+32>>2]=0;c[e+65596>>2]=0;r=e+65600|0;c[r>>2]=0;B=e+60|0;s=e+48|0;c[s>>2]=B;c[e+52>>2]=B;c[e+56>>2]=e+65596;pf(e,f);e=c[(c[I>>2]|0)+24>>2]|0;if((e|0)!=0){I=e;do{e=ws(28)|0;A=e+4|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[e+24>>2]=0;c[e>>2]=J;t=I+32|0;z=t;b:while(1){N=c[z>>2]|0;L=c[N>>2]|0;K=(L|0)==0;M=K?2408:L;c:do{if(!K?(c[N+8>>2]|0)==4:0){L=M+4|0;u=M;y=2328;while(1){if((a[u]|0)!=(a[y]|0)){break c}u=u+1|0;if(!(u>>>0<L>>>0)){break b}else{y=y+1|0}}}}while(0);z=N+24|0}z=c[N+4>>2]|0;$j(A,(z|0)==0?2408:z)|0;z=e+16|0;M=t;d:while(1){O=c[M>>2]|0;K=c[O>>2]|0;y=(K|0)==0;L=y?2408:K;e:do{if(!y?(c[O+8>>2]|0)==5:0){K=L+5|0;u=L;v=2336;while(1){if((a[u]|0)!=(a[v]|0)){break e}u=u+1|0;if(!(u>>>0<K>>>0)){break d}else{v=v+1|0}}}}while(0);M=O+24|0}M=c[O+4>>2]|0;$j(z,(M|0)==0?2408:M)|0;c[(qf(2120,A)|0)>>2]=e;I=c[I+44>>2]|0}while((I|0)!=0)}if((f|0)!=0){zs(f)}Vh(c[J>>2]|0);c[J>>2]=0;J=c[s>>2]|0;if((J|0)!=(B|0)){f=J;while(1){J=c[f+(0-f&3)>>2]|0;I=c[r>>2]|0;if((I|0)==0){if((f|0)!=0){zs(f)}}else{Dd[I&255](f)}c[s>>2]=J;if((J|0)==(B|0)){break}else{f=J}}}}D=(c[b>>2]|0)==0;i=d;return D|0}function pf(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+16|0;g=f;c[g>>2]=e;e=b+24|0;h=c[e>>2]|0;if((h|0)!=0){j=h;do{c[j+16>>2]=0;j=c[j+44>>2]|0}while((j|0)!=0)}c[e>>2]=0;j=b+32|0;h=c[j>>2]|0;if((h|0)!=0){k=h;do{c[k+16>>2]=0;k=c[k+24>>2]|0}while((k|0)!=0)}c[j>>2]=0;j=c[g>>2]|0;if(((a[j]|0)==-17?(a[j+1|0]|0)==-69:0)?(a[j+2|0]|0)==-65:0){k=j+3|0;c[g>>2]=k;l=k}else{l=j}j=b+28|0;k=l;while(1){l=k+1|0;if((a[2528+(d[k]|0)|0]|0)!=0){k=l;continue}c[g>>2]=k;h=a[k]|0;if(h<<24>>24==0){m=19;break}else if(!(h<<24>>24==60)){m=18;break}c[g>>2]=l;l=yf(b,g)|0;if((l|0)!=0){if((c[e>>2]|0)==0){c[l+40>>2]=0;c[e>>2]=l}else{c[l+40>>2]=c[j>>2];c[(c[j>>2]|0)+44>>2]=l}c[j>>2]=l;c[l+16>>2]=b;c[l+44>>2]=0}k=c[g>>2]|0}if((m|0)==18){k=fc(12)|0;b=c[g>>2]|0;c[k>>2]=2488;c[k+4>>2]=2416;c[k+8>>2]=b;td(k|0,2464,15)}else if((m|0)==19){i=f;return}}function qf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+16|0;f=e;g=wf(b,f,d)|0;h=c[g>>2]|0;if((h|0)!=0){j=h;k=j+28|0;i=e;return k|0}h=ws(32)|0;l=h+16|0;if((a[d]&1)==0){c[l+0>>2]=c[d+0>>2];c[l+4>>2]=c[d+4>>2];c[l+8>>2]=c[d+8>>2]}else{m=c[d+8>>2]|0;n=c[d+4>>2]|0;if(n>>>0>4294967279){Vj(0)}if(n>>>0<11){a[l]=n<<1;o=h+17|0}else{d=n+16&-16;p=ws(d)|0;c[h+24>>2]=p;c[l>>2]=d|1;c[h+20>>2]=n;o=p}Ss(o|0,m|0,n|0)|0;a[o+n|0]=0}c[h+28>>2]=0;n=c[f>>2]|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=n;c[g>>2]=h;n=c[c[b>>2]>>2]|0;if((n|0)==0){q=h}else{c[b>>2]=n;q=c[g>>2]|0}xf(c[b+4>>2]|0,q);q=b+8|0;c[q>>2]=(c[q>>2]|0)+1;j=h;k=j+28|0;i=e;return k|0}function rf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;d=i;i=i+144|0;e=d;f=d+116|0;g=d+104|0;h=d+92|0;j=d+80|0;k=d+68|0;l=d+128|0;m=d+32|0;n=d+20|0;o=d+8|0;p=d+44|0;q=d+56|0;r=c[2108>>2]|0;s=c[526]|0;a:do{if((r|0)!=(s|0)){t=r-s>>2;u=0;while(1){v=u+1|0;if((c[s+(u<<2)>>2]|0)==(b|0)){break}if(v>>>0<t>>>0){u=v}else{break a}}t=c[530]|0;b:while(1){v=(t|0)==(2124|0);w=t+28|0;do{if(v){break b}x=c[w>>2]|0}while((c[x>>2]|0)!=(b|0));w=t+4|0;v=c[w>>2]|0;if((v|0)==0){y=t;while(1){z=c[y+8>>2]|0;if((c[z>>2]|0)==(y|0)){A=z;break}else{y=z}}}else{y=v;while(1){z=c[y>>2]|0;if((z|0)==0){A=y;break}else{y=z}}}if((x|0)==0){B=v}else{if(!((a[x+16|0]&1)==0)){ys(c[x+24>>2]|0)}if(!((a[x+4|0]&1)==0)){ys(c[x+12>>2]|0)}ys(x);B=c[w>>2]|0}if((B|0)==0){y=t;while(1){z=c[y+8>>2]|0;if((c[z>>2]|0)==(y|0)){C=z;break}else{y=z}}}else{y=B;while(1){w=c[y>>2]|0;if((w|0)==0){C=y;break}else{y=w}}}if((c[530]|0)==(t|0)){c[530]=C}c[2128>>2]=(c[2128>>2]|0)+ -1;if(!((a[t+16|0]&1)==0)){ys(c[t+24>>2]|0)}vf(c[2124>>2]|0,t);ys(t);t=A}if((b|0)!=0){ys(b)}t=c[526]|0;y=u<<2>>2;w=t+(y+1<<2)|0;v=(c[2108>>2]|0)-w|0;Ts(t+(y<<2)|0,w|0,v|0)|0;w=t+((v>>2)+y<<2)|0;y=c[2108>>2]|0;if((y|0)==(w|0)){i=d;return}c[2108>>2]=y+(~((y+ -4+(0-w)|0)>>>2)<<2);i=d;return}}while(0);if((xi(2344,2168,163,0,e)|0)==0){c[e>>2]=2168;c[e+4>>2]=163;Mb(2208,e|0)|0;e=fc(8)|0;b=ws(48)|0;c[l+8>>2]=b;c[l>>2]=49;c[l+4>>2]=34;A=b+0|0;C=2168|0;B=A+34|0;do{a[A]=a[C]|0;A=A+1|0;C=C+1|0}while((A|0)<(B|0));a[b+34|0]=0;a[m]=2;a[m+1|0]=40;a[m+2|0]=0;ze(k,l,m);yi(n,163);ze(j,k,n);n=ws(32)|0;c[o+8>>2]=n;c[o>>2]=33;c[o+4>>2]=26;A=n+0|0;C=2232|0;B=A+26|0;do{a[A]=a[C]|0;A=A+1|0;C=C+1|0}while((A|0)<(B|0));a[n+26|0]=0;ze(h,j,o);a[p]=10;o=p+1|0;a[o+0|0]=a[2344|0]|0;a[o+1|0]=a[2345|0]|0;a[o+2|0]=a[2346|0]|0;a[o+3|0]=a[2347|0]|0;a[o+4|0]=a[2348|0]|0;a[p+6|0]=0;ze(g,h,p);a[q]=4;p=q+1|0;a[p]=2599;a[p+1|0]=10;a[q+3|0]=0;ze(f,g,q);Fj(e,f);td(e|0,9992,51)}else{i=d;return}}function sf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;e=d;f=d+128|0;g=d+116|0;h=d+104|0;j=d+92|0;k=d+80|0;l=d+132|0;m=d+44|0;n=d+32|0;o=d+20|0;p=d+8|0;q=d+56|0;r=d+68|0;uf(f,2120,b);s=c[f>>2]|0;if((s|0)!=(2124|0)){t=s+28|0;u=c[t>>2]|0;v=u+16|0;i=d;return v|0}if((a[b]&1)==0){w=b+1|0}else{w=c[b+8>>2]|0}c[e>>2]=w;Mb(2352,e|0)|0;if((xi(2376,2168,174,0,e)|0)==0){c[e>>2]=2168;c[e+4>>2]=174;Mb(2208,e|0)|0;e=fc(8)|0;w=ws(48)|0;c[m+8>>2]=w;c[m>>2]=49;c[m+4>>2]=34;b=w+0|0;f=2168|0;x=b+34|0;do{a[b]=a[f]|0;b=b+1|0;f=f+1|0}while((b|0)<(x|0));a[w+34|0]=0;a[n]=2;a[n+1|0]=40;a[n+2|0]=0;ze(l,m,n);yi(o,174);ze(k,l,o);o=ws(32)|0;c[p+8>>2]=o;c[p>>2]=33;c[p+4>>2]=26;b=o+0|0;f=2232|0;x=b+26|0;do{a[b]=a[f]|0;b=b+1|0;f=f+1|0}while((b|0)<(x|0));a[o+26|0]=0;ze(j,k,p);p=ws(32)|0;c[q+8>>2]=p;c[q>>2]=33;c[q+4>>2]=24;b=p+0|0;f=2376|0;x=b+24|0;do{a[b]=a[f]|0;b=b+1|0;f=f+1|0}while((b|0)<(x|0));a[p+24|0]=0;ze(h,j,q);a[r]=4;q=r+1|0;a[q]=2599;a[q+1|0]=10;a[r+3|0]=0;ze(g,h,r);Fj(e,g);td(e|0,9992,51)}else{t=s+28|0;u=c[t>>2]|0;v=u+16|0;i=d;return v|0}return 0}function tf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;uf(d,2120,a);i=b;return(c[d>>2]|0)!=(2124|0)|0}function uf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;g=c[d+4>>2]|0;h=d+4|0;if((g|0)!=0){d=a[e]|0;j=(d&1)==0;k=(d&255)>>>1;d=e+1|0;l=e+8|0;m=e+4|0;e=h;n=g;a:while(1){g=n;while(1){o=g+16|0;p=a[o]|0;q=(p&1)==0;if(q){r=(p&255)>>>1}else{r=c[g+20>>2]|0}if(j){s=k}else{s=c[m>>2]|0}if(q){t=o+1|0}else{t=c[g+24>>2]|0}if(j){u=d}else{u=c[l>>2]|0}o=s>>>0<r>>>0;q=Ps(t,u,o?s:r)|0;if((q|0)==0){v=r>>>0<s>>>0?-1:o&1}else{v=q}if((v|0)>=0){break}q=c[g+4>>2]|0;if((q|0)==0){w=e;break a}else{g=q}}q=c[g>>2]|0;if((q|0)==0){w=g;break}else{e=g;n=q}}if((w|0)!=(h|0)){n=w+16|0;if(j){x=k}else{x=c[m>>2]|0}m=a[n]|0;k=(m&1)==0;if(k){y=(m&255)>>>1}else{y=c[w+20>>2]|0}if(j){z=d}else{z=c[l>>2]|0}if(k){A=n+1|0}else{A=c[w+24>>2]|0}n=y>>>0<x>>>0;k=Ps(z,A,n?y:x)|0;if((k|0)==0){B=x>>>0<y>>>0?-1:n&1}else{B=k}if((B|0)>=0){c[b>>2]=w;i=f;return}}}c[b>>2]=h;i=f;return}function vf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;e=i;f=c[d>>2]|0;if((f|0)!=0){g=c[d+4>>2]|0;if((g|0)==0){h=d;j=f}else{f=g;while(1){g=c[f>>2]|0;if((g|0)==0){h=f;j=0;break}else{f=g}}}}else{h=d;j=0}f=h+4|0;g=c[((j|0)==0?f:h)>>2]|0;j=(g|0)==0;k=h+8|0;if(!j){c[g+8>>2]=c[k>>2]}l=c[k>>2]|0;if((c[l>>2]|0)==(h|0)){c[l>>2]=g;if((h|0)==(b|0)){m=g;n=0}else{m=b;n=c[(c[k>>2]|0)+4>>2]|0}}else{c[l+4>>2]=g;m=b;n=c[c[k>>2]>>2]|0}b=h+12|0;l=(a[b]|0)==0;if((h|0)==(d|0)){o=m}else{p=d+8|0;q=c[p>>2]|0;c[k>>2]=q;if((c[c[p>>2]>>2]|0)==(d|0)){c[q>>2]=h}else{c[q+4>>2]=h}q=c[d>>2]|0;c[h>>2]=q;c[q+8>>2]=h;q=c[d+4>>2]|0;c[f>>2]=q;if((q|0)!=0){c[q+8>>2]=h}a[b]=a[d+12|0]|0;o=(m|0)==(d|0)?h:m}if(l|(o|0)==0){i=e;return}if(j){r=o;s=n}else{a[g+12|0]=1;i=e;return}while(1){g=s+8|0;n=c[g>>2]|0;o=s+12|0;j=(a[o]|0)!=0;if((c[n>>2]|0)==(s|0)){if(j){t=r;u=s}else{a[o]=1;a[n+12|0]=0;l=s+4|0;m=c[l>>2]|0;c[n>>2]=m;if((m|0)!=0){c[m+8>>2]=n}m=n+8|0;c[g>>2]=c[m>>2];g=c[m>>2]|0;if((c[g>>2]|0)==(n|0)){c[g>>2]=s}else{c[g+4>>2]=s}c[l>>2]=n;c[m>>2]=s;m=c[l>>2]|0;t=(r|0)==(m|0)?s:r;u=c[m>>2]|0}v=c[u>>2]|0;w=(v|0)==0;if(!w?(a[v+12|0]|0)==0:0){x=66;break}m=c[u+4>>2]|0;if((m|0)!=0?(a[m+12|0]|0)==0:0){x=65;break}a[u+12|0]=0;m=c[u+8>>2]|0;y=m+12|0;if((a[y]|0)==0|(m|0)==(t|0)){x=62;break}l=c[m+8>>2]|0;z=t;A=(c[l>>2]|0)==(m|0)?l+4|0:l}else{if(j){B=r;C=s}else{a[o]=1;a[n+12|0]=0;o=n+4|0;j=c[o>>2]|0;l=c[j>>2]|0;c[o>>2]=l;if((l|0)!=0){c[l+8>>2]=n}l=n+8|0;c[j+8>>2]=c[l>>2];o=c[l>>2]|0;if((c[o>>2]|0)==(n|0)){c[o>>2]=j}else{c[o+4>>2]=j}c[j>>2]=n;c[l>>2]=j;j=c[s>>2]|0;B=(r|0)==(j|0)?s:r;C=c[j+4>>2]|0}D=c[C>>2]|0;if((D|0)!=0?(a[D+12|0]|0)==0:0){x=36;break}j=c[C+4>>2]|0;if((j|0)!=0?(a[j+12|0]|0)==0:0){E=j;x=37;break}a[C+12|0]=0;j=c[C+8>>2]|0;if((j|0)==(B|0)){F=B;x=34;break}if((a[j+12|0]|0)==0){F=j;x=34;break}l=c[j+8>>2]|0;z=B;A=(c[l>>2]|0)==(j|0)?l+4|0:l}r=z;s=c[A>>2]|0}if((x|0)==34){a[F+12|0]=1;i=e;return}else if((x|0)==36){F=c[C+4>>2]|0;if((F|0)==0){x=38}else{E=F;x=37}}else if((x|0)==62){a[y]=1;i=e;return}else if((x|0)==65){if(w){x=67}else{x=66}}if((x|0)==37){if((a[E+12|0]|0)==0){G=E;H=C;x=44}else{x=38}}else if((x|0)==66){if((a[v+12|0]|0)==0){I=v;J=u;x=73}else{x=67}}if((x|0)==38){a[D+12|0]=1;a[C+12|0]=0;v=D+4|0;E=c[v>>2]|0;c[C>>2]=E;if((E|0)!=0){c[E+8>>2]=C}E=C+8|0;c[D+8>>2]=c[E>>2];w=c[E>>2]|0;if((c[w>>2]|0)==(C|0)){c[w>>2]=D}else{c[w+4>>2]=D}c[v>>2]=C;c[E>>2]=D;G=c[v>>2]|0;H=D;x=44}else if((x|0)==67){D=u+4|0;v=c[D>>2]|0;a[v+12|0]=1;a[u+12|0]=0;E=c[v>>2]|0;c[D>>2]=E;if((E|0)!=0){c[E+8>>2]=u}E=u+8|0;c[v+8>>2]=c[E>>2];D=c[E>>2]|0;if((c[D>>2]|0)==(u|0)){c[D>>2]=v}else{c[D+4>>2]=v}c[v>>2]=u;c[E>>2]=v;I=c[v>>2]|0;J=v;x=73}if((x|0)==44){v=c[H+8>>2]|0;E=v+12|0;a[H+12|0]=a[E]|0;a[E]=1;a[G+12|0]=1;G=v+4|0;E=c[G>>2]|0;H=c[E>>2]|0;c[G>>2]=H;if((H|0)!=0){c[H+8>>2]=v}H=v+8|0;c[E+8>>2]=c[H>>2];G=c[H>>2]|0;if((c[G>>2]|0)==(v|0)){c[G>>2]=E}else{c[G+4>>2]=E}c[E>>2]=v;c[H>>2]=E;i=e;return}else if((x|0)==73){x=c[J+8>>2]|0;E=x+12|0;a[J+12|0]=a[E]|0;a[E]=1;a[I+12|0]=1;I=c[x>>2]|0;E=I+4|0;J=c[E>>2]|0;c[x>>2]=J;if((J|0)!=0){c[J+8>>2]=x}J=x+8|0;c[I+8>>2]=c[J>>2];H=c[J>>2]|0;if((c[H>>2]|0)==(x|0)){c[H>>2]=I}else{c[H+4>>2]=I}c[E>>2]=x;c[J>>2]=I;i=e;return}}function wf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;f=i;g=c[b+4>>2]|0;if((g|0)==0){h=b+4|0;c[d>>2]=h;j=h;i=f;return j|0}h=a[e]|0;b=(h&1)==0;k=(h&255)>>>1;h=e+1|0;l=e+8|0;m=e+4|0;e=g;while(1){g=e+16|0;if(b){n=k}else{n=c[m>>2]|0}o=a[g]|0;p=(o&1)==0;if(p){q=(o&255)>>>1}else{q=c[e+20>>2]|0}if(b){r=h}else{r=c[l>>2]|0}if(p){s=g+1|0}else{s=c[e+24>>2]|0}t=q>>>0<n>>>0;u=Ps(r,s,t?q:n)|0;if((u|0)==0){v=n>>>0<q>>>0?-1:t&1}else{v=u}if((v|0)<0){u=c[e>>2]|0;if((u|0)==0){w=17;break}else{e=u;continue}}if(p){x=(o&255)>>>1}else{x=c[e+20>>2]|0}if(b){y=k}else{y=c[m>>2]|0}if(p){z=g+1|0}else{z=c[e+24>>2]|0}if(b){A=h}else{A=c[l>>2]|0}g=y>>>0<x>>>0;p=Ps(z,A,g?y:x)|0;if((p|0)==0){B=x>>>0<y>>>0?-1:g&1}else{B=p}if((B|0)>=0){w=33;break}C=e+4|0;p=c[C>>2]|0;if((p|0)==0){w=32;break}else{e=p}}if((w|0)==17){c[d>>2]=e;j=e;i=f;return j|0}else if((w|0)==32){c[d>>2]=e;j=C;i=f;return j|0}else if((w|0)==33){c[d>>2]=e;j=d;i=f;return j|0}return 0}function xf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;f=(d|0)==(b|0);a[d+12|0]=f&1;if(f){i=e;return}else{g=d}while(1){h=g+8|0;j=c[h>>2]|0;d=j+12|0;if((a[d]|0)!=0){k=37;break}l=j+8|0;m=c[l>>2]|0;f=c[m>>2]|0;if((f|0)==(j|0)){n=c[m+4>>2]|0;if((n|0)==0){k=7;break}o=n+12|0;if((a[o]|0)!=0){k=7;break}a[d]=1;a[m+12|0]=(m|0)==(b|0)|0;a[o]=1}else{if((f|0)==0){k=24;break}o=f+12|0;if((a[o]|0)!=0){k=24;break}a[d]=1;a[m+12|0]=(m|0)==(b|0)|0;a[o]=1}if((m|0)==(b|0)){k=37;break}else{g=m}}if((k|0)==7){if((c[j>>2]|0)==(g|0)){p=j;q=m;r=j}else{b=j+4|0;o=c[b>>2]|0;d=c[o>>2]|0;c[b>>2]=d;if((d|0)==0){s=m}else{c[d+8>>2]=j;s=c[l>>2]|0}d=o+8|0;c[d>>2]=s;s=c[l>>2]|0;if((c[s>>2]|0)==(j|0)){c[s>>2]=o}else{c[s+4>>2]=o}c[o>>2]=j;c[l>>2]=o;s=c[d>>2]|0;p=o;q=s;r=c[s>>2]|0}a[p+12|0]=1;a[q+12|0]=0;p=r+4|0;s=c[p>>2]|0;c[q>>2]=s;if((s|0)!=0){c[s+8>>2]=q}s=q+8|0;c[r+8>>2]=c[s>>2];o=c[s>>2]|0;if((c[o>>2]|0)==(q|0)){c[o>>2]=r}else{c[o+4>>2]=r}c[p>>2]=q;c[s>>2]=r;i=e;return}else if((k|0)==24){if((c[j>>2]|0)==(g|0)){r=g+4|0;s=c[r>>2]|0;c[j>>2]=s;if((s|0)==0){t=m}else{c[s+8>>2]=j;t=c[l>>2]|0}c[h>>2]=t;t=c[l>>2]|0;if((c[t>>2]|0)==(j|0)){c[t>>2]=g}else{c[t+4>>2]=g}c[r>>2]=j;c[l>>2]=g;u=g;v=c[h>>2]|0}else{u=j;v=m}a[u+12|0]=1;a[v+12|0]=0;u=v+4|0;m=c[u>>2]|0;j=c[m>>2]|0;c[u>>2]=j;if((j|0)!=0){c[j+8>>2]=v}j=v+8|0;c[m+8>>2]=c[j>>2];u=c[j>>2]|0;if((c[u>>2]|0)==(v|0)){c[u>>2]=m}else{c[u+4>>2]=m}c[m>>2]=v;c[j>>2]=m;i=e;return}else if((k|0)==37){i=e;return}}function yf(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;g=c[e>>2]|0;h=a[g]|0;if((h|0)==63){j=g+1|0;c[e>>2]=j;k=a[j]|0;if(((k<<24>>24==88|k<<24>>24==120?(l=a[g+2|0]|0,l<<24>>24==77|l<<24>>24==109):0)?(l=a[g+3|0]|0,l<<24>>24==76|l<<24>>24==108):0)?(a[2528+(d[g+4|0]|0)|0]|0)!=0:0){l=g+5|0;while(1){c[e>>2]=l;m=a[l]|0;if(m<<24>>24==63){n=l+1|0;if((a[n]|0)==62){break}else{l=n;continue}}else if(m<<24>>24==0){o=11;break}else{l=l+1|0;continue}}if((o|0)==11){m=fc(12)|0;n=c[e>>2]|0;c[m>>2]=2488;c[m+4>>2]=2504;c[m+8>>2]=n;td(m|0,2464,15)}c[e>>2]=l+2;p=0;i=f;return p|0}else{q=k;r=j}while(1){if(q<<24>>24==0){o=16;break}else if(q<<24>>24==63){j=r+1|0;if((a[j]|0)==62){break}else{s=j}}else{s=r+1|0}c[e>>2]=s;q=a[s]|0;r=s}if((o|0)==16){s=fc(12)|0;q=c[e>>2]|0;c[s>>2]=2488;c[s+4>>2]=2504;c[s+8>>2]=q;td(s|0,2464,15)}c[e>>2]=r+2;p=0;i=f;return p|0}else if((h|0)==33){h=a[g+1|0]|0;if((h|0)==68){if(((((((a[g+2|0]|0)==79?(a[g+3|0]|0)==67:0)?(a[g+4|0]|0)==84:0)?(a[g+5|0]|0)==89:0)?(a[g+6|0]|0)==80:0)?(a[g+7|0]|0)==69:0)?(a[2528+(d[g+8|0]|0)|0]|0)!=0:0){c[e>>2]=g+9;Ef(0,e)|0;p=0;i=f;return p|0}else{t=g}}else if((h|0)==91){if((((((a[g+2|0]|0)==67?(a[g+3|0]|0)==68:0)?(a[g+4|0]|0)==65:0)?(a[g+5|0]|0)==84:0)?(a[g+6|0]|0)==65:0)?(a[g+7|0]|0)==91:0){c[e>>2]=g+8;p=Df(b,e)|0;i=f;return p|0}else{t=g}}else if((h|0)==45?(a[g+2|0]|0)==45:0){h=g+3|0;while(1){c[e>>2]=h;r=a[h]|0;if(r<<24>>24==0){o=26;break}else if(!(r<<24>>24==45)){h=h+1|0;continue}r=h+1|0;if((a[r]|0)!=45){h=r;continue}if((a[h+2|0]|0)==62){break}else{h=r}}if((o|0)==26){r=fc(12)|0;s=c[e>>2]|0;c[r>>2]=2488;c[r+4>>2]=2504;c[r+8>>2]=s;td(r|0,2464,15)}c[e>>2]=h+3;p=0;i=f;return p|0}else{t=g}while(1){g=t+1|0;c[e>>2]=g;h=a[g]|0;if(h<<24>>24==62){break}else if(h<<24>>24==0){o=44;break}else{t=g}}if((o|0)==44){o=fc(12)|0;g=c[e>>2]|0;c[o>>2]=2488;c[o+4>>2]=2504;c[o+8>>2]=g;td(o|0,2464,15)}c[e>>2]=t+2;p=0;i=f;return p|0}else{p=Cf(b,e)|0;i=f;return p|0}return 0}function zf(a){a=a|0;var b=0;b=i;nb(a|0);i=b;return}function Af(a){a=a|0;var b=0;b=i;nb(a|0);ys(a);i=b;return}function Bf(a){a=a|0;return c[a+4>>2]|0}function Cf(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=i;g=b+52|0;h=c[g>>2]|0;j=0-h&3;k=h+j|0;l=h+(j|48)|0;j=b+56|0;if(!(l>>>0>(c[j>>2]|0)>>>0)){c[g>>2]=l;if((k|0)==0){m=0}else{n=k;o=7}}else{k=c[b+65596>>2]|0;if((k|0)==0){p=xs(65546)|0}else{p=Fd[k&127](65546)|0}k=0-p&3;l=b+48|0;c[p+k>>2]=c[l>>2];c[l>>2]=p;l=k|4;c[j>>2]=p+65546;j=(0-(p+l)&3)+l|0;c[g>>2]=p+(j+48);n=p+j|0;o=7}if((o|0)==7){c[n>>2]=0;c[n+4>>2]=0;c[n+16>>2]=0;c[n+20>>2]=1;c[n+24>>2]=0;c[n+32>>2]=0;m=n}n=c[e>>2]|0;o=n;while(1){if((a[4216+(d[o]|0)|0]|0)==0){break}else{o=o+1|0}}c[e>>2]=o;if((o|0)==(n|0)){j=fc(12)|0;p=c[e>>2]|0;c[j>>2]=2488;c[j+4>>2]=2784;c[j+8>>2]=p;td(j|0,2464,15)}c[m>>2]=n;j=m+8|0;c[j>>2]=o-n;n=c[e>>2]|0;while(1){if((a[2528+(d[n]|0)|0]|0)==0){break}else{n=n+1|0}}c[e>>2]=n;Ff(b,e,m);n=c[e>>2]|0;o=a[n]|0;do{if(o<<24>>24==62){c[e>>2]=n+1;Gf(b,e,m)}else if(o<<24>>24==47){p=n+1|0;c[e>>2]=p;if((a[p]|0)==62){c[e>>2]=n+2;break}else{p=fc(12)|0;g=c[e>>2]|0;c[p>>2]=2488;c[p+4>>2]=2808;c[p+8>>2]=g;td(p|0,2464,15)}}else{p=fc(12)|0;g=c[e>>2]|0;c[p>>2]=2488;c[p+4>>2]=2808;c[p+8>>2]=g;td(p|0,2464,15)}}while(0);e=c[m>>2]|0;n=(e|0)==0;if(n){q=0;r=n?2408:e;s=r+q|0;a[s]=0;i=f;return m|0}q=c[j>>2]|0;r=n?2408:e;s=r+q|0;a[s]=0;i=f;return m|0}function Df(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;f=c[d>>2]|0;g=f;while(1){h=a[g]|0;if(h<<24>>24==0){j=6;break}else if(h<<24>>24==93?(a[g+1|0]|0)==93:0){if((a[g+2|0]|0)==62){j=8;break}if(h<<24>>24==0){j=6;break}}h=g+1|0;c[d>>2]=h;g=h}if((j|0)==6){g=fc(12)|0;h=c[d>>2]|0;c[g>>2]=2488;c[g+4>>2]=2504;c[g+8>>2]=h;td(g|0,2464,15)}else if((j|0)==8){j=b+52|0;g=c[j>>2]|0;h=0-g&3;k=g+h|0;l=g+(h|48)|0;h=b+56|0;if(!(l>>>0>(c[h>>2]|0)>>>0)){c[j>>2]=l;if((k|0)==0){m=0;n=c[d>>2]|0;o=n;p=f;q=o-p|0;r=m+4|0;c[r>>2]=f;s=m+12|0;c[s>>2]=q;t=c[d>>2]|0;a[t]=0;u=c[d>>2]|0;v=u+3|0;c[d>>2]=v;i=e;return m|0}else{w=k}}else{k=c[b+65596>>2]|0;if((k|0)==0){x=xs(65546)|0}else{x=Fd[k&127](65546)|0}k=0-x&3;l=b+48|0;c[x+k>>2]=c[l>>2];c[l>>2]=x;l=k|4;c[h>>2]=x+65546;h=(0-(x+l)&3)+l|0;c[j>>2]=x+(h+48);w=x+h|0}c[w>>2]=0;c[w+4>>2]=0;c[w+16>>2]=0;c[w+20>>2]=3;c[w+24>>2]=0;c[w+32>>2]=0;m=w;n=c[d>>2]|0;o=n;p=f;q=o-p|0;r=m+4|0;c[r>>2]=f;s=m+12|0;c[s>>2]=q;t=c[d>>2]|0;a[t]=0;u=c[d>>2]|0;v=u+3|0;c[d>>2]=v;i=e;return m|0}return 0}function Ef(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=i;e=c[d>>2]|0;f=a[e]|0;if(f<<24>>24==62){g=e;h=g+1|0;c[d>>2]=h;i=b;return 0}else{j=f;k=e}a:while(1){e=j<<24>>24;if((e|0)==91){f=k+1|0;c[d>>2]=f;l=f;f=1;while(1){m=a[l]|0;if((m|0)==0){n=7;break a}else if((m|0)==93){o=f+ -1|0}else if((m|0)==91){o=f+1|0}else{o=f}m=l+1|0;c[d>>2]=m;if((o|0)>0){l=m;f=o}else{p=m;break}}}else if((e|0)==0){n=9;break}else{f=k+1|0;c[d>>2]=f;p=f}f=a[p]|0;if(f<<24>>24==62){g=p;n=12;break}else{j=f;k=p}}if((n|0)==7){p=fc(12)|0;k=c[d>>2]|0;c[p>>2]=2488;c[p+4>>2]=2504;c[p+8>>2]=k;td(p|0,2464,15)}else if((n|0)==9){p=fc(12)|0;k=c[d>>2]|0;c[p>>2]=2488;c[p+4>>2]=2504;c[p+8>>2]=k;td(p|0,2464,15)}else if((n|0)==12){h=g+1|0;c[d>>2]=h;i=b;return 0}return 0}function Ff(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;g=i;h=c[e>>2]|0;if((a[3960+(d[h]|0)|0]|0)==0){i=g;return}j=b+52|0;k=b+56|0;l=b+65596|0;m=b+48|0;b=f+32|0;n=f+36|0;o=h;while(1){h=o+1|0;c[e>>2]=h;p=h;while(1){if((a[3960+(d[p]|0)|0]|0)==0){break}else{p=p+1|0}}c[e>>2]=p;if((p|0)==(o|0)){q=6;break}h=c[j>>2]|0;r=0-h&3;s=h+r|0;t=h+(r|28)|0;if(!(t>>>0>(c[k>>2]|0)>>>0)){c[j>>2]=t;if((s|0)==0){u=0}else{v=s;q=13}}else{s=c[l>>2]|0;if((s|0)==0){w=xs(65546)|0}else{w=Fd[s&127](65546)|0}s=0-w&3;c[w+s>>2]=c[m>>2];c[m>>2]=w;t=s|4;c[k>>2]=w+65546;s=(0-(w+t)&3)+t|0;c[j>>2]=w+(s+28);v=w+s|0;q=13}if((q|0)==13){q=0;c[v>>2]=0;c[v+4>>2]=0;c[v+16>>2]=0;u=v}s=(c[e>>2]|0)-o|0;c[u>>2]=o;c[u+8>>2]=s;if((c[b>>2]|0)==0){c[u+20>>2]=0;c[b>>2]=u}else{c[u+20>>2]=c[n>>2];c[(c[n>>2]|0)+24>>2]=u}c[n>>2]=u;c[u+16>>2]=f;c[u+24>>2]=0;t=c[e>>2]|0;while(1){x=t+1|0;if((a[2528+(d[t]|0)|0]|0)==0){break}else{t=x}}c[e>>2]=t;if((a[t]|0)!=61){q=20;break}c[e>>2]=x;p=c[u>>2]|0;r=(p|0)==0;a[(r?2408:p)+(r?0:s)|0]=0;r=c[e>>2]|0;while(1){y=r+1|0;if((a[2528+(d[r]|0)|0]|0)==0){break}else{r=y}}c[e>>2]=r;s=a[r]|0;if(!(s<<24>>24==34|s<<24>>24==39)){q=24;break}c[e>>2]=y;if(s<<24>>24==39){z=Kf(e)|0}else{z=Lf(e)|0}t=z-y|0;p=u+4|0;c[p>>2]=y;c[u+12>>2]=t;h=c[e>>2]|0;if(!((a[h]|0)==s<<24>>24)){q=29;break}c[e>>2]=h+1;h=c[p>>2]|0;p=(h|0)==0;a[(p?2408:h)+(p?0:t)|0]=0;t=c[e>>2]|0;while(1){if((a[2528+(d[t]|0)|0]|0)==0){break}else{t=t+1|0}}c[e>>2]=t;if((a[3960+(d[t]|0)|0]|0)==0){q=33;break}else{o=t}}if((q|0)==6){u=fc(12)|0;c[u>>2]=2488;c[u+4>>2]=3392;c[u+8>>2]=o;td(u|0,2464,15)}else if((q|0)==20){u=fc(12)|0;o=c[e>>2]|0;c[u>>2]=2488;c[u+4>>2]=3416;c[u+8>>2]=o;td(u|0,2464,15)}else if((q|0)==24){u=fc(12)|0;o=c[e>>2]|0;c[u>>2]=2488;c[u+4>>2]=3432;c[u+8>>2]=o;td(u|0,2464,15)}else if((q|0)==29){u=fc(12)|0;o=c[e>>2]|0;c[u>>2]=2488;c[u+4>>2]=3432;c[u+8>>2]=o;td(u|0,2464,15)}else if((q|0)==33){i=g;return}}function Gf(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;h=f+24|0;j=f+28|0;a:while(1){k=c[e>>2]|0;l=k;while(1){if((a[2528+(d[l]|0)|0]|0)==0){break}else{l=l+1|0}}c[e>>2]=l;m=a[l]|0;while(1){n=m<<24>>24;if((n|0)==0){o=19;break a}else if((n|0)==60){break}m=Hf(b,f,e,k)|0}p=c[e>>2]|0;k=p+1|0;if((a[k]|0)==47){break}c[e>>2]=k;k=yf(b,e)|0;if((k|0)==0){continue}if((c[h>>2]|0)==0){c[k+40>>2]=0;c[h>>2]=k}else{c[k+40>>2]=c[j>>2];c[(c[j>>2]|0)+44>>2]=k}c[j>>2]=k;c[k+16>>2]=f;c[k+44>>2]=0}if((o|0)==19){o=fc(12)|0;f=c[e>>2]|0;c[o>>2]=2488;c[o+4>>2]=2504;c[o+8>>2]=f;td(o|0,2464,15)}o=p+2|0;c[e>>2]=o;p=o;while(1){if((a[4216+(d[p]|0)|0]|0)==0){break}else{p=p+1|0}}c[e>>2]=p;o=p;while(1){q=o+1|0;if((a[2528+(d[o]|0)|0]|0)==0){break}else{o=q}}c[e>>2]=o;if((a[o]|0)==62){c[e>>2]=q;i=g;return}else{g=fc(12)|0;q=c[e>>2]|0;c[g>>2]=2488;c[g+4>>2]=2808;c[g+8>>2]=q;td(g|0,2464,15)}}function Hf(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=i;c[e>>2]=f;h=If(e)|0;j=b+52|0;k=c[j>>2]|0;l=0-k&3;m=k+l|0;n=k+(l|48)|0;l=b+56|0;if(!(n>>>0>(c[l>>2]|0)>>>0)){c[j>>2]=n;if((m|0)==0){o=0}else{p=m;q=7}}else{m=c[b+65596>>2]|0;if((m|0)==0){r=xs(65546)|0}else{r=Fd[m&127](65546)|0}m=0-r&3;n=b+48|0;c[r+m>>2]=c[n>>2];c[n>>2]=r;n=m|4;c[l>>2]=r+65546;l=(0-(r+n)&3)+n|0;c[j>>2]=r+(l+48);p=r+l|0;q=7}if((q|0)==7){c[p>>2]=0;c[p+4>>2]=0;c[p+16>>2]=0;c[p+20>>2]=2;c[p+24>>2]=0;c[p+32>>2]=0;o=p}p=h-f|0;c[o+4>>2]=f;c[o+12>>2]=p;q=d+24|0;if((c[q>>2]|0)==0){c[o+40>>2]=0;c[q>>2]=o;s=d+28|0}else{q=d+28|0;c[o+40>>2]=c[q>>2];c[(c[q>>2]|0)+44>>2]=o;s=q}c[s>>2]=o;c[o+16>>2]=d;c[o+44>>2]=0;o=d+4|0;s=c[o>>2]|0;if((a[(s|0)==0?2408:s]|0)!=0){t=c[e>>2]|0;u=a[t]|0;a[h]=0;i=g;return u|0}c[o>>2]=f;c[d+12>>2]=p;t=c[e>>2]|0;u=a[t]|0;a[h]=0;i=g;return u|0}function If(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+16|0;f=e;g=c[b>>2]|0;while(1){if((a[3136+(d[g]|0)|0]|0)==0){break}else{g=g+1|0}}c[b>>2]=g;c[f>>2]=g;h=g;a:while(1){g=a[h]|0;b:do{if(g<<24>>24==0|g<<24>>24==60){j=38;break a}else if(g<<24>>24==38){k=h+1|0;switch(a[k]|0){case 35:{l=h+2|0;m=a[l]|0;if(m<<24>>24==120){n=h+3|0;o=a[2824+(d[n]|0)|0]|0;if(o<<24>>24==-1){p=0;q=n}else{r=o;o=0;s=n;while(1){n=(r&255)+(o<<4)|0;t=s+1|0;u=a[2824+(d[t]|0)|0]|0;if(u<<24>>24==-1){p=n;q=t;break}else{r=u;o=n;s=t}}}Jf(f,p);v=q}else{s=a[2824+(m&255)|0]|0;if(s<<24>>24==-1){w=0;x=l}else{o=s;s=0;r=l;while(1){t=(o&255)+(s*10|0)|0;n=r+1|0;u=a[2824+(d[n]|0)|0]|0;if(u<<24>>24==-1){w=t;x=n;break}else{o=u;s=t;r=n}}}Jf(f,w);v=x}if((a[v]|0)!=59){j=36;break a}h=v+1|0;continue a;break};case 108:{if((a[h+2|0]|0)!=116){y=k;break b}if((a[h+3|0]|0)!=59){y=k;break b}a[c[f>>2]|0]=60;c[f>>2]=(c[f>>2]|0)+1;h=h+4|0;continue a;break};case 113:{if((a[h+2|0]|0)!=117){y=k;break b}if((a[h+3|0]|0)!=111){y=k;break b}if((a[h+4|0]|0)!=116){y=k;break b}if((a[h+5|0]|0)!=59){y=k;break b}a[c[f>>2]|0]=34;c[f>>2]=(c[f>>2]|0)+1;h=h+6|0;continue a;break};case 103:{if((a[h+2|0]|0)!=116){y=k;break b}if((a[h+3|0]|0)!=59){y=k;break b}a[c[f>>2]|0]=62;c[f>>2]=(c[f>>2]|0)+1;h=h+4|0;continue a;break};case 97:{r=a[h+2|0]|0;do{if(r<<24>>24==109){if((a[h+3|0]|0)!=112){y=k;break b}if((a[h+4|0]|0)!=59){if(r<<24>>24==112){break}else{y=k;break b}}else{a[c[f>>2]|0]=38;c[f>>2]=(c[f>>2]|0)+1;h=h+5|0;continue a}}else if(!(r<<24>>24==112)){y=k;break b}}while(0);if((a[h+3|0]|0)!=111){y=k;break b}if((a[h+4|0]|0)!=115){y=k;break b}if((a[h+5|0]|0)!=59){y=k;break b}a[c[f>>2]|0]=39;c[f>>2]=(c[f>>2]|0)+1;h=h+6|0;continue a;break};default:{y=k;break b}}}else{y=h+1|0}}while(0);r=c[f>>2]|0;c[f>>2]=r+1;a[r]=g;h=y}if((j|0)==36){y=fc(12)|0;c[y>>2]=2488;c[y+4>>2]=3080;c[y+8>>2]=v;td(y|0,2464,15)}else if((j|0)==38){c[b>>2]=h;i=e;return c[f>>2]|0}return 0}function Jf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;if(d>>>0<128){a[c[b>>2]|0]=d;c[b>>2]=(c[b>>2]|0)+1;i=e;return}if(d>>>0<2048){a[(c[b>>2]|0)+1|0]=d&63|128;a[c[b>>2]|0]=d>>>6|192;c[b>>2]=(c[b>>2]|0)+2;i=e;return}if(d>>>0<65536){a[(c[b>>2]|0)+2|0]=d&63|128;a[(c[b>>2]|0)+1|0]=d>>>6&63|128;a[c[b>>2]|0]=d>>>12|224;c[b>>2]=(c[b>>2]|0)+3;i=e;return}if(!(d>>>0<1114112)){f=fc(12)|0;g=c[b>>2]|0;c[f>>2]=2488;c[f+4>>2]=3096;c[f+8>>2]=g;td(f|0,2464,15)}a[(c[b>>2]|0)+3|0]=d&63|128;a[(c[b>>2]|0)+2|0]=d>>>6&63|128;a[(c[b>>2]|0)+1|0]=d>>>12&63|128;a[c[b>>2]|0]=d>>>18|240;c[b>>2]=(c[b>>2]|0)+4;i=e;return}function Kf(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+16|0;f=e;g=c[b>>2]|0;while(1){if((a[3704+(d[g]|0)|0]|0)==0){break}else{g=g+1|0}}c[b>>2]=g;c[f>>2]=g;h=g;a:while(1){g=a[h]|0;b:do{if(g<<24>>24==38){j=h+1|0;switch(a[j]|0){case 108:{if((a[h+2|0]|0)!=116){k=j;break b}if((a[h+3|0]|0)!=59){k=j;break b}a[c[f>>2]|0]=60;c[f>>2]=(c[f>>2]|0)+1;h=h+4|0;continue a;break};case 97:{l=a[h+2|0]|0;do{if(l<<24>>24==109){if((a[h+3|0]|0)!=112){k=j;break b}if((a[h+4|0]|0)!=59){if(l<<24>>24==112){break}else{k=j;break b}}else{a[c[f>>2]|0]=38;c[f>>2]=(c[f>>2]|0)+1;h=h+5|0;continue a}}else if(!(l<<24>>24==112)){k=j;break b}}while(0);if((a[h+3|0]|0)!=111){k=j;break b}if((a[h+4|0]|0)!=115){k=j;break b}if((a[h+5|0]|0)!=59){k=j;break b}a[c[f>>2]|0]=39;c[f>>2]=(c[f>>2]|0)+1;h=h+6|0;continue a;break};case 113:{if((a[h+2|0]|0)!=117){k=j;break b}if((a[h+3|0]|0)!=111){k=j;break b}if((a[h+4|0]|0)!=116){k=j;break b}if((a[h+5|0]|0)!=59){k=j;break b}a[c[f>>2]|0]=34;c[f>>2]=(c[f>>2]|0)+1;h=h+6|0;continue a;break};case 35:{l=h+2|0;m=a[l]|0;if(m<<24>>24==120){n=h+3|0;o=a[2824+(d[n]|0)|0]|0;if(o<<24>>24==-1){p=0;q=n}else{r=o;o=0;s=n;while(1){n=(r&255)+(o<<4)|0;t=s+1|0;u=a[2824+(d[t]|0)|0]|0;if(u<<24>>24==-1){p=n;q=t;break}else{r=u;o=n;s=t}}}Jf(f,p);v=q}else{s=a[2824+(m&255)|0]|0;if(s<<24>>24==-1){w=0;x=l}else{o=s;s=0;r=l;while(1){t=(o&255)+(s*10|0)|0;n=r+1|0;u=a[2824+(d[n]|0)|0]|0;if(u<<24>>24==-1){w=t;x=n;break}else{o=u;s=t;r=n}}}Jf(f,w);v=x}if((a[v]|0)!=59){y=36;break a}h=v+1|0;continue a;break};case 103:{if((a[h+2|0]|0)!=116){k=j;break b}if((a[h+3|0]|0)!=59){k=j;break b}a[c[f>>2]|0]=62;c[f>>2]=(c[f>>2]|0)+1;h=h+4|0;continue a;break};default:{k=j;break b}}}else if(g<<24>>24==0|g<<24>>24==39){y=38;break a}else{k=h+1|0}}while(0);r=c[f>>2]|0;c[f>>2]=r+1;a[r]=g;h=k}if((y|0)==36){k=fc(12)|0;c[k>>2]=2488;c[k+4>>2]=3080;c[k+8>>2]=v;td(k|0,2464,15)}else if((y|0)==38){c[b>>2]=h;i=e;return c[f>>2]|0}return 0}function Lf(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+16|0;f=e;g=c[b>>2]|0;while(1){if((a[3448+(d[g]|0)|0]|0)==0){break}else{g=g+1|0}}c[b>>2]=g;c[f>>2]=g;h=g;a:while(1){g=a[h]|0;b:do{if(g<<24>>24==0|g<<24>>24==34){j=38;break a}else if(g<<24>>24==38){k=h+1|0;switch(a[k]|0){case 35:{l=h+2|0;m=a[l]|0;if(m<<24>>24==120){n=h+3|0;o=a[2824+(d[n]|0)|0]|0;if(o<<24>>24==-1){p=0;q=n}else{r=o;o=0;s=n;while(1){n=(r&255)+(o<<4)|0;t=s+1|0;u=a[2824+(d[t]|0)|0]|0;if(u<<24>>24==-1){p=n;q=t;break}else{r=u;o=n;s=t}}}Jf(f,p);v=q}else{s=a[2824+(m&255)|0]|0;if(s<<24>>24==-1){w=0;x=l}else{o=s;s=0;r=l;while(1){t=(o&255)+(s*10|0)|0;n=r+1|0;u=a[2824+(d[n]|0)|0]|0;if(u<<24>>24==-1){w=t;x=n;break}else{o=u;s=t;r=n}}}Jf(f,w);v=x}if((a[v]|0)!=59){j=36;break a}h=v+1|0;continue a;break};case 113:{if((a[h+2|0]|0)!=117){y=k;break b}if((a[h+3|0]|0)!=111){y=k;break b}if((a[h+4|0]|0)!=116){y=k;break b}if((a[h+5|0]|0)!=59){y=k;break b}a[c[f>>2]|0]=34;c[f>>2]=(c[f>>2]|0)+1;h=h+6|0;continue a;break};case 108:{if((a[h+2|0]|0)!=116){y=k;break b}if((a[h+3|0]|0)!=59){y=k;break b}a[c[f>>2]|0]=60;c[f>>2]=(c[f>>2]|0)+1;h=h+4|0;continue a;break};case 103:{if((a[h+2|0]|0)!=116){y=k;break b}if((a[h+3|0]|0)!=59){y=k;break b}a[c[f>>2]|0]=62;c[f>>2]=(c[f>>2]|0)+1;h=h+4|0;continue a;break};case 97:{r=a[h+2|0]|0;do{if(r<<24>>24==109){if((a[h+3|0]|0)!=112){y=k;break b}if((a[h+4|0]|0)!=59){if(r<<24>>24==112){break}else{y=k;break b}}else{a[c[f>>2]|0]=38;c[f>>2]=(c[f>>2]|0)+1;h=h+5|0;continue a}}else if(!(r<<24>>24==112)){y=k;break b}}while(0);if((a[h+3|0]|0)!=111){y=k;break b}if((a[h+4|0]|0)!=115){y=k;break b}if((a[h+5|0]|0)!=59){y=k;break b}a[c[f>>2]|0]=39;c[f>>2]=(c[f>>2]|0)+1;h=h+6|0;continue a;break};default:{y=k;break b}}}else{y=h+1|0}}while(0);r=c[f>>2]|0;c[f>>2]=r+1;a[r]=g;h=y}if((j|0)==36){y=fc(12)|0;c[y>>2]=2488;c[y+4>>2]=3080;c[y+8>>2]=v;td(y|0,2464,15)}else if((j|0)==38){c[b>>2]=h;i=e;return c[f>>2]|0}return 0}function Mf(b,d){b=b|0;d=d|0;var e=0;e=i;if((d|0)==0){i=e;return}Mf(b,c[d>>2]|0);Mf(b,c[d+4>>2]|0);if(!((a[d+16|0]&1)==0)){ys(c[d+24>>2]|0)}ys(d);i=e;return}function Nf(){var a=0;a=i;c[526]=0;c[2108>>2]=0;c[2112>>2]=0;hd(147,2104,q|0)|0;c[2124>>2]=0;c[2128>>2]=0;c[530]=2124;hd(148,2120,q|0)|0;i=a;return}function Of(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~((a+ -4+(0-d)|0)>>>2)<<2)}ys(d);i=b;return}function Pf(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=4552;e=b+4|0;b=e+40|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(b|0));g[1118]=480.0;g[1120]=640.0;c[1134]=0;e=4488|0;b=e+10|0;do{a[e]=0;e=e+1|0}while((e|0)<(b|0));i=d;return}function Qf(a){a=a|0;var b=0,d=0;b=i;d=ws(1)|0;Oh(d);c[a+4>>2]=d;d=ws(4)|0;Wg(d,a);c[a+8>>2]=d;d=ws(4)|0;og(d,a);c[a+12>>2]=d;d=ws(1)|0;yg(d);c[a+16>>2]=d;d=ws(1)|0;lf(d);c[a+20>>2]=d;d=ws(8)|0;me(d,a);c[a+24>>2]=d;i=b;return}function Rf(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=4552;d=c[a+24>>2]|0;if((d|0)!=0){ne(d);ys(d)}d=c[a+20>>2]|0;if((d|0)!=0){mf(d);ys(d)}d=c[a+16>>2]|0;if((d|0)!=0){zg(d);ys(d)}d=c[a+12>>2]|0;if((d|0)!=0){pg(d);ys(d)}d=c[a+8>>2]|0;if((d|0)!=0){Xg(d);ys(d)}d=c[a+4>>2]|0;if((d|0)==0){i=b;return}Ph(d);ys(d);i=b;return}function Sf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,l=0,m=0;e=i;i=i+16|0;f=e;g=b+28|0;j=(c[g>>2]|0)+1|0;c[g>>2]=j;l=b+32|0;m=(c[l>>2]|0)+d|0;c[l>>2]=m;if((m|0)>3e4){h[k>>3]=+(m|0)/+(j|0);c[f>>2]=c[k>>2];c[f+4>>2]=c[k+4>>2];Mb(4576,f|0)|0;c[g>>2]=0;c[l>>2]=0}l=b+36|0;g=(c[l>>2]|0)+d|0;f=(g|0)>2e3?2e3:g;c[l>>2]=f;g=b+40|0;j=(c[g>>2]|0)+d|0;c[g>>2]=(j|0)>2e3?2e3:j;if((f|0)<=16){i=e;return}f=b+24|0;do{oe(c[f>>2]|0);b=(c[l>>2]|0)+ -16|0;c[l>>2]=b;a[4489|0]=0;a[4491|0]=0;a[4493|0]=0;a[4495|0]=0;a[4497|0]=0}while((b|0)>16);i=e;return}function Tf(a){a=a|0;var b=0,d=0,e=0;b=i;d=a+40|0;if((c[d>>2]|0)<=33){e=0;i=b;return e|0}pe(c[a+24>>2]|0);c[d>>2]=(c[d>>2]|0)+ -33;e=1;i=b;return e|0}function Uf(b){b=b|0;a[4488+(b<<1)|0]=1;return}function Vf(b){b=b|0;a[4489+(b<<1)|0]=1;return}function Wf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;d=c[4508>>2]|0;if((d|0)!=(c[4512>>2]|0)){if((d|0)!=0){c[d>>2]=a}c[4508>>2]=d+4;i=b;return}e=c[1126]|0;f=d-e|0;d=f>>2;g=d+1|0;if(g>>>0>1073741823){wp(0)}if(d>>>0<536870911){h=f>>1;j=h>>>0<g>>>0?g:h;if((j|0)==0){k=0;l=0}else{m=j;n=9}}else{m=1073741823;n=9}if((n|0)==9){k=m;l=ws(m<<2)|0}m=l+(d<<2)|0;if((m|0)!=0){c[m>>2]=a}Ss(l|0,e|0,f|0)|0;c[1126]=l;c[4508>>2]=l+(g<<2);c[4512>>2]=l+(k<<2);if((e|0)==0){i=b;return}ys(e);i=b;return}function Xf(a,b){a=+a;b=+b;g[1130]=a;g[1132]=b;return}function Yf(b){b=b|0;return(a[4488+(b<<1)|0]|0)!=0|0}function Zf(b){b=b|0;var c=0,d=0,e=0,f=0;c=i;d=4489+(b<<1)|0;if((a[d]|0)!=0?(e=4488+(b<<1)|0,(a[e]|0)!=0):0){a[d]=0;a[e]=0;f=1}else{f=0}i=c;return f|0}function _f(){return+(+g[1130])}function $f(){return+(+g[1132])}function ag(){var a=0;a=i;c[1126]=0;c[4508>>2]=0;c[4512>>2]=0;hd(149,4504,q|0)|0;i=a;return}function bg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=i;if((a|0)==318|(a|0)==294){d=3;e=3}else if((a|0)==295){d=4;e=3}do{if((e|0)==3){if((b|0)==1){Uf(d);break}else{Vf(d);break}}}while(0);i=c;return}function cg(a,b){a=a|0;b=b|0;b=i;Wf(a);i=b;return}function dg(a,b){a=a|0;b=b|0;var c=0;c=i;Xf(+(a|0),+(b|0));i=c;return}function eg(a,b){a=a|0;b=b|0;var c=0;c=i;do{if(a>>>0<3){if((b|0)==1){Uf(a);break}else{Vf(a);break}}}while(0);i=c;return}function fg(){var a=0,b=0,d=0,e=0;a=i;ac();b=~~(+Rc()*1.0e3);d=b-(c[1158]|0)|0;c[1156]=d+(c[1156]|0);e=c[1154]|0;Ed[c[c[e>>2]>>2]&63](e,d);c[1158]=b;b=c[1154]|0;if(!(Fd[c[(c[b>>2]|0)+4>>2]&127](b)|0)){i=a;return}md();i=a;return}function gg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;d=i;i=i+272|0;b=d;e=d+248|0;f=d+236|0;g=d+224|0;h=d+212|0;j=d+200|0;k=d+188|0;l=d+176|0;m=d+164|0;n=d+152|0;o=d+140|0;p=d+260|0;q=d+56|0;r=d+44|0;s=d+8|0;t=d+20|0;u=d+32|0;v=d+116|0;w=d+68|0;x=d+80|0;y=d+92|0;z=d+104|0;A=d+128|0;if((ib()|0)==0?(xi(4640,4648,86,0,b)|0)==0:0){c[b>>2]=4648;c[b+4>>2]=86;Mb(4696,b|0)|0;B=fc(8)|0;C=ws(48)|0;c[k+8>>2]=C;c[k>>2]=49;c[k+4>>2]=46;D=C+0|0;E=4648|0;F=D+46|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[C+46|0]=0;a[l]=2;a[l+1|0]=40;a[l+2|0]=0;ze(j,k,l);yi(m,86);ze(h,j,m);m=ws(32)|0;c[n+8>>2]=m;c[n>>2]=33;c[n+4>>2]=26;D=m+0|0;E=4720|0;F=D+26|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[m+26|0]=0;ze(g,h,n);a[o]=14;n=o+1|0;a[n+0|0]=a[4640|0]|0;a[n+1|0]=a[4641|0]|0;a[n+2|0]=a[4642|0]|0;a[n+3|0]=a[4643|0]|0;a[n+4|0]=a[4644|0]|0;a[n+5|0]=a[4645|0]|0;a[n+6|0]=a[4646|0]|0;a[o+8|0]=0;ze(f,g,o);a[p]=4;o=p+1|0;a[o]=2599;a[o+1|0]=10;a[p+3|0]=0;ze(e,f,p);Fj(B,e);td(B|0,9992,51)}Vb(131096,327681);Vb(131094,1);Vb(131092,3);Vb(131093,2);if((wb(480,640,8,8,8,0,0,0,65537)|0)==0?(xi(4640,4648,95,0,b)|0)==0:0){c[b>>2]=4648;c[b+4>>2]=95;Mb(4696,b|0)|0;b=fc(8)|0;B=ws(48)|0;c[v+8>>2]=B;c[v>>2]=49;c[v+4>>2]=46;D=B+0|0;E=4648|0;F=D+46|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[B+46|0]=0;a[w]=2;a[w+1|0]=40;a[w+2|0]=0;ze(u,v,w);yi(x,95);ze(t,u,x);x=ws(32)|0;c[y+8>>2]=x;c[y>>2]=33;c[y+4>>2]=26;D=x+0|0;E=4720|0;F=D+26|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[x+26|0]=0;ze(s,t,y);a[z]=14;y=z+1|0;a[y+0|0]=a[4640|0]|0;a[y+1|0]=a[4641|0]|0;a[y+2|0]=a[4642|0]|0;a[y+3|0]=a[4643|0]|0;a[y+4|0]=a[4644|0]|0;a[y+5|0]=a[4645|0]|0;a[y+6|0]=a[4646|0]|0;a[z+8|0]=0;ze(r,s,z);a[A]=4;z=A+1|0;a[z]=2599;a[z+1|0]=10;a[A+3|0]=0;ze(q,r,A);Fj(b,q);td(b|0,9992,51)}b=ws(44)|0;hg(b);c[1154]=b;Qf(b);ud(48);qc(49);ic(50);Zb(51);c[1156]=0;c[1158]=~~(+Rc()*1.0e3);od(2,0,1);db();b=c[1154]|0;if((b|0)==0){i=d;return 1}ig(b);ys(b);i=d;return 1}function hg(a){a=a|0;var b=0;b=i;Pf(a);c[a>>2]=4760;i=b;return}function ig(a){a=a|0;var b=0;b=i;Rf(a);i=b;return}function jg(b,c){b=b|0;c=c|0;a[b]=4;c=b+1|0;a[c]=12078;a[c+1|0]=47;a[b+3|0]=0;return}function kg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;d=i;e=ws(32)|0;c[b+8>>2]=e;c[b>>2]=33;c[b+4>>2]=18;b=e+0|0;f=4784|0;g=b+18|0;do{a[b]=a[f]|0;b=b+1|0;f=f+1|0}while((b|0)<(g|0));a[e+18|0]=0;i=d;return}function lg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;d=i;e=ws(16)|0;c[b+8>>2]=e;c[b>>2]=17;c[b+4>>2]=15;b=e+0|0;f=4808|0;g=b+15|0;do{a[b]=a[f]|0;b=b+1|0;f=f+1|0}while((b|0)<(g|0));a[e+15|0]=0;i=d;return}function mg(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~((a+ -4+(0-d)|0)>>>2)<<2)}ys(d);i=b;return}function ng(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~((a+ -4+(0-d)|0)>>>2)<<2)}ys(d);i=b;return}function og(a,b){a=a|0;b=b|0;c[a>>2]=b;return}function pg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;b=i;i=i+144|0;d=b;e=b+116|0;f=b+104|0;g=b+92|0;h=b+80|0;j=b+68|0;k=b+128|0;l=b+32|0;m=b+20|0;n=b+8|0;o=b+44|0;p=b+56|0;q=c[1220]|0;if((c[4884>>2]|0)!=(q|0)){r=q;q=0;do{s=c[r+(q<<2)>>2]|0;Fb(1,s+32|0);ch(c[s+28>>2]|0);if((s|0)!=0){if(!((a[s+4|0]&1)==0)){ys(c[s+12>>2]|0)}ys(s)}q=q+1|0;r=c[1220]|0}while(q>>>0<(c[4884>>2]|0)-r>>2>>>0)}if((c[4868>>2]|0)==(c[1216]|0)){i=b;return}if((xi(4896,4928,28,0,d)|0)==0){c[d>>2]=4928;c[d+4>>2]=28;Mb(4968,d|0)|0;d=fc(8)|0;r=ws(48)|0;c[k+8>>2]=r;c[k>>2]=49;c[k+4>>2]=38;q=r+0|0;s=4928|0;t=q+38|0;do{a[q]=a[s]|0;q=q+1|0;s=s+1|0}while((q|0)<(t|0));a[r+38|0]=0;a[l]=2;a[l+1|0]=40;a[l+2|0]=0;ze(j,k,l);yi(m,28);ze(h,j,m);m=ws(32)|0;c[n+8>>2]=m;c[n>>2]=33;c[n+4>>2]=26;q=m+0|0;s=4992|0;t=q+26|0;do{a[q]=a[s]|0;q=q+1|0;s=s+1|0}while((q|0)<(t|0));a[m+26|0]=0;ze(g,h,n);n=ws(32)|0;c[o+8>>2]=n;c[o>>2]=33;c[o+4>>2]=25;q=n+0|0;s=4896|0;t=q+25|0;do{a[q]=a[s]|0;q=q+1|0;s=s+1|0}while((q|0)<(t|0));a[n+25|0]=0;ze(f,g,o);a[p]=4;o=p+1|0;a[o]=2599;a[o+1|0]=10;a[p+3|0]=0;ze(e,f,p);Fj(d,e);td(d|0,9992,51)}else{i=b;return}}function qg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;f=ws(64)|0;g=f+0|0;h=g+64|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));c[f>>2]=Qh(b)|0;a[f+4|0]=d;c[f+8>>2]=0;c[f+12>>2]=0;d=c[4868>>2]|0;if((d|0)!=(c[4872>>2]|0)){if((d|0)==0){j=0}else{c[d>>2]=f;j=c[4868>>2]|0}c[4868>>2]=j+4;i=e;return f|0}j=c[1216]|0;b=d-j|0;d=b>>2;g=d+1|0;if(g>>>0>1073741823){wp(0)}if(d>>>0<536870911){h=b>>1;k=h>>>0<g>>>0?g:h;if((k|0)==0){l=0;m=0}else{n=k;o=9}}else{n=1073741823;o=9}if((o|0)==9){l=n;m=ws(n<<2)|0}n=m+(d<<2)|0;if((n|0)!=0){c[n>>2]=f}Ss(m|0,j|0,b|0)|0;c[1216]=m;c[4868>>2]=m+(g<<2);c[4872>>2]=m+(l<<2);if((j|0)==0){i=e;return f|0}ys(j);i=e;return f|0}function rg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;d=i;i=i+144|0;e=d;f=d+116|0;g=d+104|0;h=d+92|0;j=d+80|0;k=d+68|0;l=d+128|0;m=d+32|0;n=d+20|0;o=d+8|0;p=d+44|0;q=d+56|0;r=b+8|0;if((c[r>>2]|0)!=0){s=c[r>>2]|0;t=(s|0)!=0;i=d;return t|0}u=c[b>>2]|0;if(Sh(u)|0){s=c[r>>2]|0;t=(s|0)!=0;i=d;return t|0}v=c[4868>>2]|0;w=c[1216]|0;a:do{if((v|0)!=(w|0)){x=v-w>>2;y=0;while(1){z=y+1|0;if((c[w+(y<<2)>>2]|0)==(b|0)){break}if(z>>>0<x>>>0){y=z}else{A=8;break a}}if((b|0)!=0){B=b}else{A=8}}else{A=8}}while(0);if((A|0)==8){if((xi(5024,4928,62,0,e)|0)==0){c[e>>2]=4928;c[e+4>>2]=62;Mb(4968,e|0)|0;e=fc(8)|0;A=ws(48)|0;c[l+8>>2]=A;c[l>>2]=49;c[l+4>>2]=38;b=A+0|0;w=4928|0;v=b+38|0;do{a[b]=a[w]|0;b=b+1|0;w=w+1|0}while((b|0)<(v|0));a[A+38|0]=0;a[m]=2;a[m+1|0]=40;a[m+2|0]=0;ze(k,l,m);yi(n,62);ze(j,k,n);n=ws(32)|0;c[o+8>>2]=n;c[o>>2]=33;c[o+4>>2]=26;b=n+0|0;w=4992|0;v=b+26|0;do{a[b]=a[w]|0;b=b+1|0;w=w+1|0}while((b|0)<(v|0));a[n+26|0]=0;ze(h,j,o);o=ws(16)|0;c[p+8>>2]=o;c[p>>2]=17;c[p+4>>2]=13;b=o+0|0;w=5024|0;v=b+13|0;do{a[b]=a[w]|0;b=b+1|0;w=w+1|0}while((b|0)<(v|0));a[o+13|0]=0;ze(g,h,p);a[q]=4;p=q+1|0;a[p]=2599;a[p+1|0]=10;a[q+3|0]=0;ze(f,g,q);Fj(e,f);td(e|0,9992,51)}else{B=0}}e=B+8|0;c[e>>2]=Uh(u)|0;c[B+12>>2]=Th(u)|0;Fi(B+16|0,c[e>>2]|0,0)|0;s=c[r>>2]|0;t=(s|0)!=0;i=d;return t|0}function sg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;e=d;f=d+116|0;g=d+104|0;h=d+92|0;j=d+80|0;k=d+68|0;l=d+128|0;m=d+32|0;n=d+20|0;o=d+8|0;p=d+44|0;q=d+56|0;r=c[4868>>2]|0;s=c[1216]|0;a:do{if((r|0)!=(s|0)){t=r-s>>2;u=0;while(1){v=u+1|0;if((c[s+(u<<2)>>2]|0)==(b|0)){break}if(v>>>0<t>>>0){u=v}else{break a}}Vh(c[b>>2]|0);if((b|0)!=0){ys(b)}t=c[1216]|0;v=u<<2>>2;w=t+(v+1<<2)|0;x=(c[4868>>2]|0)-w|0;Ts(t+(v<<2)|0,w|0,x|0)|0;w=t+((x>>2)+v<<2)|0;v=c[4868>>2]|0;if((v|0)==(w|0)){i=d;return}c[4868>>2]=v+(~((v+ -4+(0-w)|0)>>>2)<<2);i=d;return}}while(0);if((xi(5040,4928,87,0,e)|0)==0){c[e>>2]=4928;c[e+4>>2]=87;Mb(4968,e|0)|0;e=fc(8)|0;b=ws(48)|0;c[l+8>>2]=b;c[l>>2]=49;c[l+4>>2]=38;s=b+0|0;r=4928|0;w=s+38|0;do{a[s]=a[r]|0;s=s+1|0;r=r+1|0}while((s|0)<(w|0));a[b+38|0]=0;a[m]=2;a[m+1|0]=40;a[m+2|0]=0;ze(k,l,m);yi(n,87);ze(j,k,n);n=ws(32)|0;c[o+8>>2]=n;c[o>>2]=33;c[o+4>>2]=26;s=n+0|0;r=4992|0;w=s+26|0;do{a[s]=a[r]|0;s=s+1|0;r=r+1|0}while((s|0)<(w|0));a[n+26|0]=0;ze(h,j,o);a[p]=10;o=p+1|0;a[o+0|0]=a[5040|0]|0;a[o+1|0]=a[5041|0]|0;a[o+2|0]=a[5042|0]|0;a[o+3|0]=a[5043|0]|0;a[o+4|0]=a[5044|0]|0;a[p+6|0]=0;ze(g,h,p);a[q]=4;p=q+1|0;a[p]=2599;a[p+1|0]=10;a[q+3|0]=0;ze(f,g,q);Fj(e,f);td(e|0,9992,51)}else{i=d;return}}function tg(b,e,f,h,j){b=b|0;e=e|0;f=+f;h=+h;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0.0,K=0,L=0,M=0.0,N=0.0,O=0,P=0,Q=0.0,R=0,S=0,U=0,V=0.0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0.0,da=0.0,ga=0.0,ha=0,ia=0.0,ja=0,ka=0.0,la=0.0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0;k=i;i=i+160|0;l=k;m=k+128|0;n=k+116|0;o=k+104|0;p=k+92|0;q=k+80|0;r=k+68|0;s=k+140|0;t=k+48|0;u=k+36|0;v=k+24|0;w=k+12|0;x=k+8|0;y=k+60|0;z=k+64|0;if(!(rg(b)|0)?(xi(5048,4928,93,0,l)|0)==0:0){c[l>>2]=4928;c[l+4>>2]=93;Mb(4968,l|0)|0;l=fc(8)|0;A=ws(48)|0;c[r+8>>2]=A;c[r>>2]=49;c[r+4>>2]=38;B=A+0|0;C=4928|0;D=B+38|0;do{a[B]=a[C]|0;B=B+1|0;C=C+1|0}while((B|0)<(D|0));a[A+38|0]=0;a[s]=2;a[s+1|0]=40;a[s+2|0]=0;ze(q,r,s);yi(t,93);ze(p,q,t);t=ws(32)|0;c[u+8>>2]=t;c[u>>2]=33;c[u+4>>2]=26;B=t+0|0;C=4992|0;D=B+26|0;do{a[B]=a[C]|0;B=B+1|0;C=C+1|0}while((B|0)<(D|0));a[t+26|0]=0;ze(o,p,u);u=ws(32)|0;c[v+8>>2]=u;c[v>>2]=33;c[v+4>>2]=17;B=u+0|0;C=5048|0;D=B+17|0;do{a[B]=a[C]|0;B=B+1|0;C=C+1|0}while((B|0)<(D|0));a[u+17|0]=0;ze(n,o,v);a[w]=4;v=w+1|0;a[v]=2599;a[v+1|0]=10;a[w+3|0]=0;ze(m,n,w);Fj(l,m);td(l|0,9992,51)}l=a[e]|0;m=(l&1)==0;if(m){E=(l&255)>>>1}else{E=c[e+4>>2]|0}if((E|0)==0){F=0;i=k;return F|0}E=c[4884>>2]|0;l=c[1220]|0;a:do{if((E|0)!=(l|0)){w=e+1|0;n=E-l>>2;v=e+8|0;b:do{if(m){o=0;while(1){u=c[l+(o<<2)>>2]|0;C=u+4|0;if((a[C]&1)==0){G=C+1|0}else{G=c[u+12>>2]|0}if(((((Qs(w,G)|0)==0?(c[u>>2]|0)==(b|0):0)?+g[u+16>>2]==f:0)?+g[u+20>>2]==h:0)?+g[u+24>>2]==j:0){H=u;break b}o=o+1|0;if(!(o>>>0<n>>>0)){break a}}}else{o=0;while(1){u=c[l+(o<<2)>>2]|0;C=u+4|0;if((a[C]&1)==0){I=C+1|0}else{I=c[u+12>>2]|0}if(((((Qs(c[v>>2]|0,I)|0)==0?(c[u>>2]|0)==(b|0):0)?+g[u+16>>2]==f:0)?+g[u+20>>2]==h:0)?+g[u+24>>2]==j:0){H=u;break b}o=o+1|0;if(!(o>>>0<n>>>0)){break a}}}}while(0);if((H|0)!=0){F=H;i=k;return F|0}}}while(0);H=ws(44)|0;I=H+4|0;B=H+0|0;D=B+44|0;do{c[B>>2]=0;B=B+4|0}while((B|0)<(D|0));c[H>>2]=b;_j(I,e)|0;g[H+16>>2]=f;g[H+20>>2]=h;g[H+24>>2]=j;c[y>>2]=0;c[z>>2]=0;I=b+16|0;j=+Oi(I,+(d[b+4|0]|0));Ni(I,x,y,z);b=c[x>>2]|0;x=~~(j*+(b|0));J=j*+(b-(c[y>>2]|0)+(c[z>>2]|0)|0);z=a[e]|0;if((z&1)==0){K=e+4|0;L=(z&255)>>>1}else{y=e+4|0;K=y;L=c[y>>2]|0}y=xs(L>>>0>107374182?-1:L*40|0)|0;L=e+1|0;b=e+8|0;B=z;z=0;D=0;M=0.0;l=0;G=0;m=y;N=f;c:while(1){E=(B&1)==0;if(E){O=(B&255)>>>1}else{O=c[K>>2]|0}if(!(G>>>0<O>>>0)){break}if(E){P=L}else{P=c[b>>2]|0}E=Hi(I,a[P+G|0]|0)|0;c[m>>2]=E;n=m+4|0;Mi(I,E,n,m+8|0);Q=N- +T(+N);g[m+12>>2]=Q;E=m+24|0;v=m+28|0;w=m+32|0;o=m+36|0;Pi(I,c[m>>2]|0,j,j,Q,0.0,E,v,w,o);if((c[E>>2]|0)!=(c[w>>2]|0)?(c[v>>2]|0)!=(c[o>>2]|0):0){R=D;S=z;U=l;V=M+j*+(c[n>>2]|0)}else{W=41}do{if((W|0)==41){W=0;if((z|0)!=(D|0)){if((z|0)!=0){g[z>>2]=M}R=D;S=z+4|0;U=l;V=0.0;break}o=D-l|0;v=o>>2;w=v+1|0;if(w>>>0>1073741823){W=46;break c}if(v>>>0<536870911){E=o>>1;u=E>>>0<w>>>0?w:E;if((u|0)==0){X=0;Y=0}else{Z=u;W=49}}else{Z=1073741823;W=49}if((W|0)==49){W=0;X=Z;Y=ws(Z<<2)|0}u=Y+(v<<2)|0;v=Y+(X<<2)|0;if((u|0)!=0){g[u>>2]=M}u=Y+(w<<2)|0;Ss(Y|0,l|0,o|0)|0;if((l|0)==0){R=v;S=u;U=Y;V=0.0}else{ys(l);R=v;S=u;U=Y;V=0.0}}}while(0);B=a[e]|0;z=S;D=R;M=V;l=U;G=G+1|0;m=m+40|0;N=N+j*+(c[n>>2]|0)}if((W|0)==46){wp(0)}if((z|0)==(D|0)){m=D-l|0;D=m>>2;G=D+1|0;if(G>>>0>1073741823){wp(0)}if(D>>>0<536870911){U=m>>1;R=U>>>0<G>>>0?G:U;if((R|0)==0){_=0}else{$=R;W=63}}else{$=1073741823;W=63}if((W|0)==63){_=ws($<<2)|0}$=_+(D<<2)|0;if(($|0)!=0){g[$>>2]=M}Ss(_|0,l|0,m|0)|0;if((l|0)==0){aa=_}else{ys(l);aa=_}}else{if((z|0)==0){aa=l}else{g[z>>2]=M;aa=l}}d:do{if(h>0.0){M=0.0;l=0;z=0;_=y;N=f;V=0.0;while(1){m=a[e]|0;if((m&1)==0){ba=(m&255)>>>1}else{ba=c[K>>2]|0}if(!(l>>>0<ba>>>0)){ca=M;da=N;ga=V;break d}if((c[_+24>>2]|0)!=(c[_+32>>2]|0)?(c[_+28>>2]|0)!=(c[_+36>>2]|0):0){ha=z;W=77}else{m=z+1|0;if(N>0.0?N+ +g[aa+(m<<2)>>2]>h:0){ia=M;ja=m;ka=0.0;la=J+V}else{ha=m;W=77}}if((W|0)==77){W=0;g[_+16>>2]=N;g[_+20>>2]=V;Q=N+j*+(c[_+4>>2]|0);ia=Q>M?Q:M;ja=ha;ka=Q;la=V}M=ia;l=l+1|0;z=ja;_=_+40|0;N=ka;V=la}}else{V=0.0;_=0;z=y;N=f;while(1){l=a[e]|0;if((l&1)==0){ma=(l&255)>>>1}else{ma=c[K>>2]|0}if(!(_>>>0<ma>>>0)){ca=V;da=N;ga=0.0;break d}g[z+16>>2]=N;g[z+20>>2]=0.0;M=N+j*+(c[z+4>>2]|0);V=M>V?M:V;_=_+1|0;z=z+40|0;N=M}}}while(0);f=+ea(+(da>ca?da:ca));ma=H+36|0;g[ma>>2]=f;ja=H+40|0;g[ja>>2]=+ea(+(J+ga));ha=Zh(~~f)|0;ba=Zh(~~+g[ja>>2])|0;f=+g[ma>>2];ga=+g[ja>>2];c[H+28>>2]=ah(0.0,0.0,f,ga,+(ha>>>0),+(ba>>>0),0.0,0.0,f,ga)|0;ja=fa(ba,ha)|0;ma=xs(ja)|0;Us(ma|0,0,ja|0)|0;ga=+(x|0);x=0;ja=y;while(1){z=a[e]|0;if((z&1)==0){na=(z&255)>>>1}else{na=c[K>>2]|0}if(!(x>>>0<na>>>0)){break}z=c[ja+28>>2]|0;_=fa(~~(ga+ +g[ja+20>>2]+ +(z|0))>>>0,ha)|0;l=c[ja+24>>2]|0;Ti(I,ma+((~~(+g[ja+16>>2]+ +(l|0))>>>0)+_)|0,(c[ja+32>>2]|0)-l|0,(c[ja+36>>2]|0)-z|0,ha,j,j,+g[ja+12>>2],0.0,c[ja>>2]|0);x=x+1|0;ja=ja+40|0}if((y|0)!=0){zs(y)}y=H+32|0;Nb(1,y|0);mc(3553,c[y>>2]|0);Kb(3553,0,6406,ha|0,ba|0,0,6406,5121,ma|0);_c(3553,10241,9729);_c(3553,10240,9729);if((ma|0)!=0){zs(ma)}ma=c[4884>>2]|0;if((ma|0)==(c[4888>>2]|0)){ba=c[1220]|0;ha=ma-ba|0;y=ha>>2;ja=y+1|0;if(ja>>>0>1073741823){wp(0)}if(y>>>0<536870911){x=ha>>1;I=x>>>0<ja>>>0?ja:x;if((I|0)==0){oa=0;pa=0}else{qa=I;W=103}}else{qa=1073741823;W=103}if((W|0)==103){oa=qa;pa=ws(qa<<2)|0}qa=pa+(y<<2)|0;if((qa|0)!=0){c[qa>>2]=H}Ss(pa|0,ba|0,ha|0)|0;c[1220]=pa;c[4884>>2]=pa+(ja<<2);c[4888>>2]=pa+(oa<<2);if((ba|0)!=0){ys(ba)}}else{if((ma|0)==0){ra=0}else{c[ma>>2]=H;ra=c[4884>>2]|0}c[4884>>2]=ra+4}if((aa|0)==0){F=H;i=k;return F|0}ys(aa);F=H;i=k;return F|0}function ug(b,d,e,f,h,j,k){b=b|0;d=+d;e=+e;f=+f;h=+h;j=+j;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0;l=i;i=i+208|0;m=l;n=l+172|0;o=l+160|0;p=l+148|0;q=l+136|0;r=l+124|0;s=l+184|0;t=l+88|0;u=l+76|0;v=l+64|0;w=l+100|0;x=l+112|0;if((b|0)==0?(xi(5072,4928,257,0,m)|0)==0:0){c[m>>2]=4928;c[m+4>>2]=257;Mb(4968,m|0)|0;y=fc(8)|0;z=ws(48)|0;c[s+8>>2]=z;c[s>>2]=49;c[s+4>>2]=38;A=z+0|0;B=4928|0;C=A+38|0;do{a[A]=a[B]|0;A=A+1|0;B=B+1|0}while((A|0)<(C|0));a[z+38|0]=0;a[t]=2;a[t+1|0]=40;a[t+2|0]=0;ze(r,s,t);yi(u,257);ze(q,r,u);u=ws(32)|0;c[v+8>>2]=u;c[v>>2]=33;c[v+4>>2]=26;A=u+0|0;B=4992|0;C=A+26|0;do{a[A]=a[B]|0;A=A+1|0;B=B+1|0}while((A|0)<(C|0));a[u+26|0]=0;ze(p,q,v);v=ws(16)|0;c[w+8>>2]=v;c[w>>2]=17;c[w+4>>2]=13;A=v+0|0;B=5072|0;C=A+13|0;do{a[A]=a[B]|0;A=A+1|0;B=B+1|0}while((A|0)<(C|0));a[v+13|0]=0;ze(o,p,w);a[x]=4;w=x+1|0;a[w]=2599;a[w+1|0]=10;a[x+3|0]=0;ze(n,o,x);Fj(y,n);td(y|0,9992,51)}A=m+0|0;C=A+52|0;do{c[A>>2]=0;A=A+4|0}while((A|0)<(C|0));D=+g[k>>2];g[m>>2]=D;E=+g[k+4>>2];g[m+4>>2]=E;F=+g[k+8>>2];g[m+8>>2]=F;G=+g[k+12>>2];g[m+12>>2]=G;H=+g[k+16>>2];g[m+16>>2]=H;I=+g[k+20>>2];g[m+20>>2]=I;J=+g[k+24>>2];g[m+24>>2]=J;K=+g[k+28>>2];g[m+28>>2]=K;L=+g[k+32>>2];g[m+32>>2]=L;M=+g[k+36>>2];g[m+36>>2]=M;N=+g[k+40>>2];g[m+40>>2]=N;O=+g[k+44>>2];g[m+44>>2]=O;P=E*d+I*e+M*0.0+ +g[k+52>>2];M=F*d+J*e+N*0.0+ +g[k+56>>2];N=G*d+K*e+O*0.0+ +g[k+60>>2];g[m+48>>2]=D*d+H*e+L*0.0+ +g[k+48>>2];g[m+52>>2]=P;g[m+56>>2]=M;g[m+60>>2]=N;Ia(c[1418]|0);Ma(c[1420]|0,1,0,m|0);Ac(33984);mc(3553,c[b+32>>2]|0);sc(c[1422]|0,0);hb(c[1424]|0,+f,+h,+j);bh(c[b+28>>2]|0);Za(0);Za(1);Ia(0);i=l;return}function vg(){var a=0;a=i;c[1216]=0;c[4868>>2]=0;c[4872>>2]=0;hd(150,4864,q|0)|0;c[1220]=0;c[4884>>2]=0;c[4888>>2]=0;hd(151,4880,q|0)|0;i=a;return}function wg(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~((a+ -4+(0-d)|0)>>>2)<<2)}ys(d);i=b;return}function xg(a){a=a|0;var b=0;b=i;Lg(a,c[a+4>>2]|0);i=b;return}function yg(a){a=a|0;return}function zg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;b=i;i=i+272|0;d=b;e=b+248|0;f=b+236|0;g=b+224|0;h=b+212|0;j=b+200|0;k=b+188|0;l=b+176|0;m=b+164|0;n=b+152|0;o=b+140|0;p=b+260|0;q=b+56|0;r=b+44|0;s=b+8|0;t=b+20|0;u=b+32|0;v=b+116|0;w=b+68|0;x=b+80|0;y=b+92|0;z=b+104|0;A=b+128|0;if((c[5092>>2]|0)!=(c[1272]|0)?(xi(5120,5160,17,0,d)|0)==0:0){c[d>>2]=5160;c[d+4>>2]=17;Mb(5208,d|0)|0;B=fc(8)|0;C=ws(48)|0;c[k+8>>2]=C;c[k>>2]=49;c[k+4>>2]=40;D=C+0|0;E=5160|0;F=D+40|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[C+40|0]=0;a[l]=2;a[l+1|0]=40;a[l+2|0]=0;ze(j,k,l);yi(m,17);ze(h,j,m);m=ws(32)|0;c[n+8>>2]=m;c[n>>2]=33;c[n+4>>2]=26;D=m+0|0;E=5232|0;F=D+26|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[m+26|0]=0;ze(g,h,n);n=ws(48)|0;c[o+8>>2]=n;c[o>>2]=49;c[o+4>>2]=32;D=n+0|0;E=5120|0;F=D+32|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[n+32|0]=0;ze(f,g,o);a[p]=4;o=p+1|0;a[o]=2599;a[o+1|0]=10;a[p+3|0]=0;ze(e,f,p);Fj(B,e);td(B|0,9992,51)}if((c[5112>>2]|0)==0){i=b;return}if((xi(5264,5160,18,0,d)|0)==0){c[d>>2]=5160;c[d+4>>2]=18;Mb(5208,d|0)|0;d=fc(8)|0;B=ws(48)|0;c[v+8>>2]=B;c[v>>2]=49;c[v+4>>2]=40;D=B+0|0;E=5160|0;F=D+40|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[B+40|0]=0;a[w]=2;a[w+1|0]=40;a[w+2|0]=0;ze(u,v,w);yi(x,18);ze(t,u,x);x=ws(32)|0;c[y+8>>2]=x;c[y>>2]=33;c[y+4>>2]=26;D=x+0|0;E=5232|0;F=D+26|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[x+26|0]=0;ze(s,t,y);y=ws(32)|0;c[z+8>>2]=y;c[z>>2]=33;c[z+4>>2]=24;D=y+0|0;E=5264|0;F=D+24|0;do{a[D]=a[E]|0;D=D+1|0;E=E+1|0}while((D|0)<(F|0));a[y+24|0]=0;ze(r,s,z);a[A]=4;z=A+1|0;a[z]=2599;a[z+1|0]=10;a[A+3|0]=0;ze(q,r,A);Fj(d,q);td(d|0,9992,51)}else{i=b;return}}function Ag(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+32|0;e=d+12|0;f=d;g=ws(16)|0;c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;Be(e,b,5296);c[g>>2]=Qh(e)|0;if(!((a[e]&1)==0)){ys(c[e+8>>2]|0)}e=ws(20)|0;Be(f,b,5304);Ng(e,f);c[g+4>>2]=e;if(!((a[f]&1)==0)){ys(c[f+8>>2]|0)}f=c[5092>>2]|0;if((f|0)!=(c[5096>>2]|0)){if((f|0)==0){h=0}else{c[f>>2]=g;h=c[5092>>2]|0}c[5092>>2]=h+4;i=d;return g|0}h=c[1272]|0;e=f-h|0;f=e>>2;b=f+1|0;if(b>>>0>1073741823){wp(0)}if(f>>>0<536870911){j=e>>1;k=j>>>0<b>>>0?b:j;if((k|0)==0){l=0;m=0}else{n=k;o=13}}else{n=1073741823;o=13}if((o|0)==13){l=n;m=ws(n<<2)|0}n=m+(f<<2)|0;if((n|0)!=0){c[n>>2]=g}Ss(m|0,h|0,e|0)|0;c[1272]=m;c[5092>>2]=m+(b<<2);c[5096>>2]=m+(l<<2);if((h|0)==0){i=d;return g|0}ys(h);i=d;return g|0}



function Rn(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+416|0;e=f+8|0;k=f;c[k>>2]=e+400;Sn(b+8|0,e,k,g,h,j);j=c[k>>2]|0;k=c[d>>2]|0;if((e|0)==(j|0)){l=k;c[a>>2]=l;i=f;return}else{m=e;n=k;o=k}while(1){k=c[m>>2]|0;if((o|0)==0){p=n;q=0}else{e=o+24|0;d=c[e>>2]|0;if((d|0)==(c[o+28>>2]|0)){r=Sd[c[(c[o>>2]|0)+52>>2]&31](o,k)|0}else{c[e>>2]=d+4;c[d>>2]=k;r=k}k=(r|0)==-1;p=k?0:n;q=k?0:o}k=m+4|0;if((k|0)==(j|0)){l=p;break}else{m=k;n=p;o=q}}c[a>>2]=l;i=f;return}function Sn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0;j=i;i=i+128|0;k=j+112|0;l=j+12|0;m=j;n=j+8|0;a[k]=37;o=k+1|0;a[o]=g;p=k+2|0;a[p]=h;a[k+3|0]=0;if(!(h<<24>>24==0)){a[o]=h;a[p]=g}Vc(l|0,100,k|0,f|0,c[b>>2]|0)|0;f=m;c[f>>2]=0;c[f+4>>2]=0;c[n>>2]=l;l=(c[e>>2]|0)-d>>2;f=lc(c[b>>2]|0)|0;b=Mr(d,n,l,m)|0;if((f|0)!=0){lc(f|0)|0}if((b|0)==-1){Po(13944)}else{c[e>>2]=d+(b<<2);i=j;return}}function Tn(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Un(a){a=a|0;return}function Vn(a){a=a|0;return 127}function Wn(a){a=a|0;return 127}function Xn(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Yn(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Zn(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function _n(a,b){a=a|0;b=b|0;b=i;Yj(a,1,45);i=b;return}function $n(a){a=a|0;return 0}function ao(b,c){b=b|0;c=c|0;a[b]=67109634;a[b+1|0]=262147;a[b+2|0]=1024;a[b+3|0]=4;return}function bo(b,c){b=b|0;c=c|0;a[b]=67109634;a[b+1|0]=262147;a[b+2|0]=1024;a[b+3|0]=4;return}function co(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function eo(a){a=a|0;return}function fo(a){a=a|0;return 127}function go(a){a=a|0;return 127}function ho(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function io(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function jo(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function ko(a,b){a=a|0;b=b|0;b=i;Yj(a,1,45);i=b;return}function lo(a){a=a|0;return 0}function mo(b,c){b=b|0;c=c|0;a[b]=67109634;a[b+1|0]=262147;a[b+2|0]=1024;a[b+3|0]=4;return}function no(b,c){b=b|0;c=c|0;a[b]=67109634;a[b+1|0]=262147;a[b+2|0]=1024;a[b+3|0]=4;return}function oo(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function po(a){a=a|0;return}function qo(a){a=a|0;return 2147483647}function ro(a){a=a|0;return 2147483647}function so(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function to(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function uo(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function vo(a,b){a=a|0;b=b|0;b=i;ik(a,1,45);i=b;return}function wo(a){a=a|0;return 0}function xo(b,c){b=b|0;c=c|0;a[b]=67109634;a[b+1|0]=262147;a[b+2|0]=1024;a[b+3|0]=4;return}function yo(b,c){b=b|0;c=c|0;a[b]=67109634;a[b+1|0]=262147;a[b+2|0]=1024;a[b+3|0]=4;return}function zo(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Ao(a){a=a|0;return}function Bo(a){a=a|0;return 2147483647}function Co(a){a=a|0;return 2147483647}function Do(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Eo(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Fo(a,b){a=a|0;b=b|0;b=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=b;return}function Go(a,b){a=a|0;b=b|0;b=i;ik(a,1,45);i=b;return}function Ho(a){a=a|0;return 0}function Io(b,c){b=b|0;c=c|0;a[b]=67109634;a[b+1|0]=262147;a[b+2|0]=1024;a[b+3|0]=4;return}function Jo(b,c){b=b|0;c=c|0;a[b]=67109634;a[b+1|0]=262147;a[b+2|0]=1024;a[b+3|0]=4;return}function Ko(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Lo(a){a=a|0;return}function Mo(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;d=i;i=i+256|0;l=d;m=d+32|0;n=d+24|0;o=d+16|0;p=d+12|0;q=d+244|0;r=d+20|0;s=d+132|0;t=d+144|0;c[n>>2]=m;u=n+4|0;c[u>>2]=163;v=m+100|0;sk(p,h);m=c[p>>2]|0;if(!((c[3266]|0)==-1)){c[l>>2]=13064;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13064,l,162)}w=(c[13068>>2]|0)+ -1|0;x=c[m+8>>2]|0;if(!((c[m+12>>2]|0)-x>>2>>>0>w>>>0)){y=fc(4)|0;Yr(y);td(y|0,21024,137)}m=c[x+(w<<2)>>2]|0;if((m|0)==0){y=fc(4)|0;Yr(y);td(y|0,21024,137)}a[q]=0;c[r>>2]=c[f>>2];y=c[h+4>>2]|0;c[l+0>>2]=c[r+0>>2];if(Oo(e,l,g,p,y,j,q,m,n,o,v)|0){Td[c[(c[m>>2]|0)+32>>2]&7](m,12680,12690|0,s)|0;m=c[o>>2]|0;v=c[n>>2]|0;y=m-v|0;if((y|0)>98){g=rs(y+2|0)|0;if((g|0)==0){Ds()}else{z=g;A=g}}else{z=0;A=t}if((a[q]|0)==0){B=A}else{a[A]=45;B=A+1|0}if(v>>>0<m>>>0){m=s+10|0;A=s;q=B;g=v;while(1){v=a[g]|0;y=s;while(1){r=y+1|0;if((a[y]|0)==v<<24>>24){C=y;break}if((r|0)==(m|0)){C=m;break}else{y=r}}a[q]=a[12680+(C-A)|0]|0;y=g+1|0;v=q+1|0;if(y>>>0<(c[o>>2]|0)>>>0){q=v;g=y}else{D=v;break}}}else{D=B}a[D]=0;c[l>>2]=k;if((Pa(t|0,12696,l|0)|0)!=1){l=fc(8)|0;Gj(l,12704);td(l|0,9992,51)}if((z|0)!=0){ss(z)}}z=c[e>>2]|0;if((z|0)!=0){if((c[z+12>>2]|0)==(c[z+16>>2]|0)?(Fd[c[(c[z>>2]|0)+36>>2]&127](z)|0)==-1:0){c[e>>2]=0;E=0}else{E=z}}else{E=0}z=(E|0)==0;e=c[f>>2]|0;do{if((e|0)!=0){if((c[e+12>>2]|0)!=(c[e+16>>2]|0)){if(z){break}else{F=33;break}}if(!((Fd[c[(c[e>>2]|0)+36>>2]&127](e)|0)==-1)){if(z){break}else{F=33;break}}else{c[f>>2]=0;F=31;break}}else{F=31}}while(0);if((F|0)==31?z:0){F=33}if((F|0)==33){c[j>>2]=c[j>>2]|2}c[b>>2]=E;Aj(c[p>>2]|0)|0;p=c[n>>2]|0;c[n>>2]=0;if((p|0)==0){i=d;return}Dd[c[u>>2]&255](p);i=d;return}function No(a){a=a|0;return}function Oo(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0;q=i;i=i+480|0;r=q+72|0;s=q+68|0;t=q+472|0;u=q+473|0;v=q+56|0;w=q+44|0;x=q+28|0;y=q+16|0;z=q+4|0;A=q;B=q+40|0;c[s>>2]=0;c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;So(g,h,s,t,u,v,w,x,y,A);c[o>>2]=c[n>>2];h=m+8|0;m=y+1|0;g=y+4|0;C=y+8|0;D=x+1|0;E=x+4|0;F=x+8|0;G=(j&512|0)!=0;j=w+1|0;H=w+8|0;I=w+4|0;J=z+1|0;K=z+8|0;L=z+4|0;M=s+3|0;N=n+4|0;O=v+4|0;P=r+400|0;Q=r;R=r;r=p;p=0;S=0;T=163;a:while(1){U=c[e>>2]|0;do{if((U|0)!=0){if((c[U+12>>2]|0)==(c[U+16>>2]|0)){if((Fd[c[(c[U>>2]|0)+36>>2]&127](U)|0)==-1){c[e>>2]=0;V=0;break}else{V=c[e>>2]|0;break}}else{V=U}}else{V=0}}while(0);U=(V|0)==0;W=c[f>>2]|0;do{if((W|0)!=0){if((c[W+12>>2]|0)!=(c[W+16>>2]|0)){if(U){X=W;break}else{Y=R;Z=Q;_=S;$=T;aa=269;break a}}if(!((Fd[c[(c[W>>2]|0)+36>>2]&127](W)|0)==-1)){if(U){X=W;break}else{Y=R;Z=Q;_=S;$=T;aa=269;break a}}else{c[f>>2]=0;aa=12;break}}else{aa=12}}while(0);if((aa|0)==12){aa=0;if(U){Y=R;Z=Q;_=S;$=T;aa=269;break}else{X=0}}b:do{switch(a[s+p|0]|0){case 4:{W=r;ba=Q;ca=P;da=R;ea=0;fa=T;c:while(1){ga=c[e>>2]|0;do{if((ga|0)!=0){if((c[ga+12>>2]|0)==(c[ga+16>>2]|0)){if((Fd[c[(c[ga>>2]|0)+36>>2]&127](ga)|0)==-1){c[e>>2]=0;ha=0;break}else{ha=c[e>>2]|0;break}}else{ha=ga}}else{ha=0}}while(0);ga=(ha|0)==0;ia=c[f>>2]|0;do{if((ia|0)!=0){if((c[ia+12>>2]|0)!=(c[ia+16>>2]|0)){if(ga){break}else{break c}}if(!((Fd[c[(c[ia>>2]|0)+36>>2]&127](ia)|0)==-1)){if(ga){break}else{break c}}else{c[f>>2]=0;aa=173;break}}else{aa=173}}while(0);if((aa|0)==173?(aa=0,ga):0){break}ia=c[e>>2]|0;ja=c[ia+12>>2]|0;if((ja|0)==(c[ia+16>>2]|0)){ka=Fd[c[(c[ia>>2]|0)+36>>2]&127](ia)|0}else{ka=d[ja]|0}ja=ka&255;if(ja<<24>>24>-1?!((b[(c[h>>2]|0)+(ka<<24>>24<<1)>>1]&2048)==0):0){ia=c[o>>2]|0;if((ia|0)==(W|0)){la=(c[N>>2]|0)!=163;ma=c[n>>2]|0;na=W-ma|0;oa=na>>>0<2147483647?na<<1:-1;pa=ts(la?ma:0,oa)|0;if((pa|0)==0){aa=182;break a}if(!la){la=c[n>>2]|0;c[n>>2]=pa;if((la|0)==0){qa=pa}else{Dd[c[N>>2]&255](la);qa=c[n>>2]|0}}else{c[n>>2]=pa;qa=pa}c[N>>2]=164;pa=qa+na|0;c[o>>2]=pa;ra=pa;sa=(c[n>>2]|0)+oa|0}else{ra=ia;sa=W}c[o>>2]=ra+1;a[ra]=ja;ta=sa;ua=da;va=ba;wa=ca;xa=ea+1|0;ya=fa}else{ia=a[v]|0;if((ia&1)==0){za=(ia&255)>>>1}else{za=c[O>>2]|0}if((za|0)==0|(ea|0)==0){break}if(!(ja<<24>>24==(a[u]|0))){break}if((ba|0)==(ca|0)){ja=ba-da|0;ia=ja>>>0<2147483647?ja<<1:-1;if((fa|0)==163){Aa=0}else{Aa=da}oa=ts(Aa,ia)|0;if((oa|0)==0){aa=198;break a}Ba=oa+(ja>>2<<2)|0;Ca=oa;Da=oa+(ia>>>2<<2)|0;Ea=164}else{Ba=ba;Ca=da;Da=ca;Ea=fa}c[Ba>>2]=ea;ta=W;ua=Ca;va=Ba+4|0;wa=Da;xa=0;ya=Ea}ia=c[e>>2]|0;oa=ia+12|0;ja=c[oa>>2]|0;if((ja|0)==(c[ia+16>>2]|0)){Fd[c[(c[ia>>2]|0)+40>>2]&127](ia)|0;W=ta;ba=va;ca=wa;da=ua;ea=xa;fa=ya;continue}else{c[oa>>2]=ja+1;W=ta;ba=va;ca=wa;da=ua;ea=xa;fa=ya;continue}}if((da|0)==(ba|0)|(ea|0)==0){Fa=da;Ga=ba;Ha=ca;Ia=fa}else{if((ba|0)==(ca|0)){ja=ba-da|0;oa=ja>>>0<2147483647?ja<<1:-1;if((fa|0)==163){Ja=0}else{Ja=da}ia=ts(Ja,oa)|0;if((ia|0)==0){aa=209;break a}Ka=ia+(ja>>2<<2)|0;La=ia;Ma=ia+(oa>>>2<<2)|0;Na=164}else{Ka=ba;La=da;Ma=ca;Na=fa}c[Ka>>2]=ea;Fa=La;Ga=Ka+4|0;Ha=Ma;Ia=Na}oa=c[A>>2]|0;if((oa|0)>0){ia=c[e>>2]|0;do{if((ia|0)!=0){if((c[ia+12>>2]|0)==(c[ia+16>>2]|0)){if((Fd[c[(c[ia>>2]|0)+36>>2]&127](ia)|0)==-1){c[e>>2]=0;Oa=0;break}else{Oa=c[e>>2]|0;break}}else{Oa=ia}}else{Oa=0}}while(0);ia=(Oa|0)==0;ea=c[f>>2]|0;do{if((ea|0)!=0){if((c[ea+12>>2]|0)!=(c[ea+16>>2]|0)){if(ia){Pa=ea;break}else{aa=229;break a}}if(!((Fd[c[(c[ea>>2]|0)+36>>2]&127](ea)|0)==-1)){if(ia){Pa=ea;break}else{aa=229;break a}}else{c[f>>2]=0;aa=223;break}}else{aa=223}}while(0);if((aa|0)==223){aa=0;if(ia){aa=229;break a}else{Pa=0}}ea=c[e>>2]|0;fa=c[ea+12>>2]|0;if((fa|0)==(c[ea+16>>2]|0)){Qa=Fd[c[(c[ea>>2]|0)+36>>2]&127](ea)|0}else{Qa=d[fa]|0}if(!((Qa&255)<<24>>24==(a[t]|0))){aa=229;break a}fa=c[e>>2]|0;ea=fa+12|0;ca=c[ea>>2]|0;if((ca|0)==(c[fa+16>>2]|0)){Fd[c[(c[fa>>2]|0)+40>>2]&127](fa)|0;Ra=Pa;Sa=Pa;Ta=W;Ua=oa}else{c[ea>>2]=ca+1;Ra=Pa;Sa=Pa;Ta=W;Ua=oa}while(1){ca=c[e>>2]|0;do{if((ca|0)!=0){if((c[ca+12>>2]|0)==(c[ca+16>>2]|0)){if((Fd[c[(c[ca>>2]|0)+36>>2]&127](ca)|0)==-1){c[e>>2]=0;Va=0;break}else{Va=c[e>>2]|0;break}}else{Va=ca}}else{Va=0}}while(0);ca=(Va|0)==0;do{if((Sa|0)!=0){if((c[Sa+12>>2]|0)!=(c[Sa+16>>2]|0)){if(ca){Wa=Ra;Xa=Sa;break}else{aa=250;break a}}if(!((Fd[c[(c[Sa>>2]|0)+36>>2]&127](Sa)|0)==-1)){if(ca^(Ra|0)==0){Wa=Ra;Xa=Ra;break}else{aa=250;break a}}else{c[f>>2]=0;Ya=0;aa=243;break}}else{Ya=Ra;aa=243}}while(0);if((aa|0)==243){aa=0;if(ca){aa=250;break a}else{Wa=Ya;Xa=0}}ga=c[e>>2]|0;ea=c[ga+12>>2]|0;if((ea|0)==(c[ga+16>>2]|0)){Za=Fd[c[(c[ga>>2]|0)+36>>2]&127](ga)|0}else{Za=d[ea]|0}if(!((Za&255)<<24>>24>-1)){aa=250;break a}if((b[(c[h>>2]|0)+(Za<<24>>24<<1)>>1]&2048)==0){aa=250;break a}ea=c[o>>2]|0;if((ea|0)==(Ta|0)){ga=(c[N>>2]|0)!=163;fa=c[n>>2]|0;da=Ta-fa|0;ba=da>>>0<2147483647?da<<1:-1;ja=ts(ga?fa:0,ba)|0;if((ja|0)==0){aa=253;break a}if(!ga){ga=c[n>>2]|0;c[n>>2]=ja;if((ga|0)==0){_a=ja}else{Dd[c[N>>2]&255](ga);_a=c[n>>2]|0}}else{c[n>>2]=ja;_a=ja}c[N>>2]=164;ja=_a+da|0;c[o>>2]=ja;$a=ja;ab=(c[n>>2]|0)+ba|0}else{$a=ea;ab=Ta}ea=c[e>>2]|0;ba=c[ea+12>>2]|0;if((ba|0)==(c[ea+16>>2]|0)){ja=Fd[c[(c[ea>>2]|0)+36>>2]&127](ea)|0;bb=ja;cb=c[o>>2]|0}else{bb=d[ba]|0;cb=$a}c[o>>2]=cb+1;a[cb]=bb;ba=Ua+ -1|0;c[A>>2]=ba;ja=c[e>>2]|0;ea=ja+12|0;da=c[ea>>2]|0;if((da|0)==(c[ja+16>>2]|0)){Fd[c[(c[ja>>2]|0)+40>>2]&127](ja)|0}else{c[ea>>2]=da+1}if((ba|0)>0){Ra=Wa;Sa=Xa;Ta=ab;Ua=ba}else{db=ab;break}}}else{db=W}if((c[o>>2]|0)==(c[n>>2]|0)){aa=267;break a}else{eb=db;fb=Fa;gb=Ga;hb=Ha;ib=S;jb=Ia}break};case 3:{oa=a[x]|0;ia=(oa&1)==0;if(ia){kb=(oa&255)>>>1}else{kb=c[E>>2]|0}ba=a[y]|0;da=(ba&1)==0;if(da){lb=(ba&255)>>>1}else{lb=c[g>>2]|0}if((kb|0)==(0-lb|0)){eb=r;fb=R;gb=Q;hb=P;ib=S;jb=T}else{if(ia){mb=(oa&255)>>>1}else{mb=c[E>>2]|0}if((mb|0)!=0){if(da){nb=(ba&255)>>>1}else{nb=c[g>>2]|0}if((nb|0)!=0){da=c[e>>2]|0;ea=c[da+12>>2]|0;ja=c[da+16>>2]|0;if((ea|0)==(ja|0)){ga=Fd[c[(c[da>>2]|0)+36>>2]&127](da)|0;fa=c[e>>2]|0;ob=ga;pb=a[x]|0;qb=fa;rb=c[fa+12>>2]|0;sb=c[fa+16>>2]|0}else{ob=d[ea]|0;pb=oa;qb=da;rb=ea;sb=ja}ja=qb+12|0;ea=(rb|0)==(sb|0);if((ob&255)<<24>>24==(a[(pb&1)==0?D:c[F>>2]|0]|0)){if(ea){Fd[c[(c[qb>>2]|0)+40>>2]&127](qb)|0}else{c[ja>>2]=rb+1}ja=a[x]|0;if((ja&1)==0){tb=(ja&255)>>>1}else{tb=c[E>>2]|0}eb=r;fb=R;gb=Q;hb=P;ib=tb>>>0>1?x:S;jb=T;break b}if(ea){ub=Fd[c[(c[qb>>2]|0)+36>>2]&127](qb)|0}else{ub=d[rb]|0}if(!((ub&255)<<24>>24==(a[(a[y]&1)==0?m:c[C>>2]|0]|0))){aa=112;break a}ea=c[e>>2]|0;ja=ea+12|0;da=c[ja>>2]|0;if((da|0)==(c[ea+16>>2]|0)){Fd[c[(c[ea>>2]|0)+40>>2]&127](ea)|0}else{c[ja>>2]=da+1}a[l]=1;da=a[y]|0;if((da&1)==0){vb=(da&255)>>>1}else{vb=c[g>>2]|0}eb=r;fb=R;gb=Q;hb=P;ib=vb>>>0>1?y:S;jb=T;break b}}if(ia){wb=(oa&255)>>>1}else{wb=c[E>>2]|0}ia=c[e>>2]|0;da=c[ia+12>>2]|0;ja=(da|0)==(c[ia+16>>2]|0);if((wb|0)==0){if(ja){ea=Fd[c[(c[ia>>2]|0)+36>>2]&127](ia)|0;xb=ea;yb=a[y]|0}else{xb=d[da]|0;yb=ba}if(!((xb&255)<<24>>24==(a[(yb&1)==0?m:c[C>>2]|0]|0))){eb=r;fb=R;gb=Q;hb=P;ib=S;jb=T;break b}ba=c[e>>2]|0;ea=ba+12|0;fa=c[ea>>2]|0;if((fa|0)==(c[ba+16>>2]|0)){Fd[c[(c[ba>>2]|0)+40>>2]&127](ba)|0}else{c[ea>>2]=fa+1}a[l]=1;fa=a[y]|0;if((fa&1)==0){zb=(fa&255)>>>1}else{zb=c[g>>2]|0}eb=r;fb=R;gb=Q;hb=P;ib=zb>>>0>1?y:S;jb=T;break b}if(ja){ja=Fd[c[(c[ia>>2]|0)+36>>2]&127](ia)|0;Ab=ja;Bb=a[x]|0}else{Ab=d[da]|0;Bb=oa}if(!((Ab&255)<<24>>24==(a[(Bb&1)==0?D:c[F>>2]|0]|0))){a[l]=1;eb=r;fb=R;gb=Q;hb=P;ib=S;jb=T;break b}oa=c[e>>2]|0;da=oa+12|0;ja=c[da>>2]|0;if((ja|0)==(c[oa+16>>2]|0)){Fd[c[(c[oa>>2]|0)+40>>2]&127](oa)|0}else{c[da>>2]=ja+1}ja=a[x]|0;if((ja&1)==0){Cb=(ja&255)>>>1}else{Cb=c[E>>2]|0}eb=r;fb=R;gb=Q;hb=P;ib=Cb>>>0>1?x:S;jb=T}break};case 1:{if((p|0)==3){Y=R;Z=Q;_=S;$=T;aa=269;break a}ja=c[e>>2]|0;da=c[ja+12>>2]|0;if((da|0)==(c[ja+16>>2]|0)){Db=Fd[c[(c[ja>>2]|0)+36>>2]&127](ja)|0}else{Db=d[da]|0}if(!((Db&255)<<24>>24>-1)){aa=25;break a}if((b[(c[h>>2]|0)+(Db<<24>>24<<1)>>1]&8192)==0){aa=25;break a}da=c[e>>2]|0;ja=da+12|0;oa=c[ja>>2]|0;if((oa|0)==(c[da+16>>2]|0)){Eb=Fd[c[(c[da>>2]|0)+40>>2]&127](da)|0}else{c[ja>>2]=oa+1;Eb=d[oa]|0}dk(z,Eb&255);aa=26;break};case 0:{aa=26;break};case 2:{if(!((S|0)!=0|p>>>0<2)){if((p|0)==2){Fb=(a[M]|0)!=0}else{Fb=0}if(!(G|Fb)){eb=r;fb=R;gb=Q;hb=P;ib=0;jb=T;break b}}oa=a[w]|0;ja=(oa&1)==0;da=ja?j:c[H>>2]|0;d:do{if((p|0)!=0?(d[s+(p+ -1)|0]|0)<2:0){ia=da+(ja?(oa&255)>>>1:c[I>>2]|0)|0;fa=da;while(1){if((fa|0)==(ia|0)){Gb=ia;break}ea=a[fa]|0;if(!(ea<<24>>24>-1)){Gb=fa;break}if((b[(c[h>>2]|0)+(ea<<24>>24<<1)>>1]&8192)==0){Gb=fa;break}else{fa=fa+1|0}}fa=Gb-da|0;ia=a[z]|0;ca=(ia&1)==0;if(ca){Hb=(ia&255)>>>1}else{Hb=c[L>>2]|0}if(!(fa>>>0>Hb>>>0)){if(ca){ca=(ia&255)>>>1;Ib=J;Jb=ca;Kb=z+(ca-fa)+1|0}else{ca=c[K>>2]|0;ia=c[L>>2]|0;Ib=ca;Jb=ia;Kb=ca+(ia-fa)|0}fa=Ib+Jb|0;if((Kb|0)==(fa|0)){Lb=X;Mb=oa;Nb=Gb;Ob=X}else{ia=Kb;ca=da;while(1){if((a[ia]|0)!=(a[ca]|0)){Lb=X;Mb=oa;Nb=da;Ob=X;break d}ea=ia+1|0;if((ea|0)==(fa|0)){Lb=X;Mb=oa;Nb=Gb;Ob=X;break}else{ia=ea;ca=ca+1|0}}}}else{Lb=X;Mb=oa;Nb=da;Ob=X}}else{Lb=X;Mb=oa;Nb=da;Ob=X}}while(0);e:while(1){if((Mb&1)==0){Pb=j;Qb=(Mb&255)>>>1}else{Pb=c[H>>2]|0;Qb=c[I>>2]|0}if((Nb|0)==(Pb+Qb|0)){break}da=c[e>>2]|0;do{if((da|0)!=0){if((c[da+12>>2]|0)==(c[da+16>>2]|0)){if((Fd[c[(c[da>>2]|0)+36>>2]&127](da)|0)==-1){c[e>>2]=0;Rb=0;break}else{Rb=c[e>>2]|0;break}}else{Rb=da}}else{Rb=0}}while(0);da=(Rb|0)==0;do{if((Ob|0)!=0){if((c[Ob+12>>2]|0)!=(c[Ob+16>>2]|0)){if(da){Sb=Lb;Tb=Ob;break}else{break e}}if(!((Fd[c[(c[Ob>>2]|0)+36>>2]&127](Ob)|0)==-1)){if(da^(Lb|0)==0){Sb=Lb;Tb=Lb;break}else{break e}}else{c[f>>2]=0;Ub=0;aa=147;break}}else{Ub=Lb;aa=147}}while(0);if((aa|0)==147){aa=0;if(da){break}else{Sb=Ub;Tb=0}}oa=c[e>>2]|0;ja=c[oa+12>>2]|0;if((ja|0)==(c[oa+16>>2]|0)){Vb=Fd[c[(c[oa>>2]|0)+36>>2]&127](oa)|0}else{Vb=d[ja]|0}if(!((Vb&255)<<24>>24==(a[Nb]|0))){break}ja=c[e>>2]|0;oa=ja+12|0;W=c[oa>>2]|0;if((W|0)==(c[ja+16>>2]|0)){Fd[c[(c[ja>>2]|0)+40>>2]&127](ja)|0}else{c[oa>>2]=W+1}Lb=Sb;Mb=a[w]|0;Nb=Nb+1|0;Ob=Tb}if(G){W=a[w]|0;if((W&1)==0){Wb=j;Xb=(W&255)>>>1}else{Wb=c[H>>2]|0;Xb=c[I>>2]|0}if((Nb|0)!=(Wb+Xb|0)){aa=162;break a}else{eb=r;fb=R;gb=Q;hb=P;ib=S;jb=T}}else{eb=r;fb=R;gb=Q;hb=P;ib=S;jb=T}break};default:{eb=r;fb=R;gb=Q;hb=P;ib=S;jb=T}}}while(0);f:do{if((aa|0)==26){aa=0;if((p|0)==3){Y=R;Z=Q;_=S;$=T;aa=269;break a}else{Yb=X;Zb=X}while(1){U=c[e>>2]|0;do{if((U|0)!=0){if((c[U+12>>2]|0)==(c[U+16>>2]|0)){if((Fd[c[(c[U>>2]|0)+36>>2]&127](U)|0)==-1){c[e>>2]=0;_b=0;break}else{_b=c[e>>2]|0;break}}else{_b=U}}else{_b=0}}while(0);U=(_b|0)==0;do{if((Zb|0)!=0){if((c[Zb+12>>2]|0)!=(c[Zb+16>>2]|0)){if(U){$b=Yb;ac=Zb;break}else{eb=r;fb=R;gb=Q;hb=P;ib=S;jb=T;break f}}if(!((Fd[c[(c[Zb>>2]|0)+36>>2]&127](Zb)|0)==-1)){if(U^(Yb|0)==0){$b=Yb;ac=Yb;break}else{eb=r;fb=R;gb=Q;hb=P;ib=S;jb=T;break f}}else{c[f>>2]=0;bc=0;aa=37;break}}else{bc=Yb;aa=37}}while(0);if((aa|0)==37){aa=0;if(U){eb=r;fb=R;gb=Q;hb=P;ib=S;jb=T;break f}else{$b=bc;ac=0}}da=c[e>>2]|0;W=c[da+12>>2]|0;if((W|0)==(c[da+16>>2]|0)){cc=Fd[c[(c[da>>2]|0)+36>>2]&127](da)|0}else{cc=d[W]|0}if(!((cc&255)<<24>>24>-1)){eb=r;fb=R;gb=Q;hb=P;ib=S;jb=T;break f}if((b[(c[h>>2]|0)+(cc<<24>>24<<1)>>1]&8192)==0){eb=r;fb=R;gb=Q;hb=P;ib=S;jb=T;break f}W=c[e>>2]|0;da=W+12|0;oa=c[da>>2]|0;if((oa|0)==(c[W+16>>2]|0)){dc=Fd[c[(c[W>>2]|0)+40>>2]&127](W)|0}else{c[da>>2]=oa+1;dc=d[oa]|0}dk(z,dc&255);Yb=$b;Zb=ac}}}while(0);oa=p+1|0;if(oa>>>0<4){P=hb;Q=gb;R=fb;r=eb;p=oa;S=ib;T=jb}else{Y=fb;Z=gb;_=ib;$=jb;aa=269;break}}g:do{if((aa|0)==25){c[k>>2]=c[k>>2]|4;ec=0;fc=R;gc=T}else if((aa|0)==112){c[k>>2]=c[k>>2]|4;ec=0;fc=R;gc=T}else if((aa|0)==162){c[k>>2]=c[k>>2]|4;ec=0;fc=R;gc=T}else if((aa|0)==182){Ds()}else if((aa|0)==198){Ds()}else if((aa|0)==209){Ds()}else if((aa|0)==229){c[k>>2]=c[k>>2]|4;ec=0;fc=Fa;gc=Ia}else if((aa|0)==250){c[k>>2]=c[k>>2]|4;ec=0;fc=Fa;gc=Ia}else if((aa|0)==253){Ds()}else if((aa|0)==267){c[k>>2]=c[k>>2]|4;ec=0;fc=Fa;gc=Ia}else if((aa|0)==269){h:do{if((_|0)!=0){jb=_+1|0;ib=_+8|0;gb=_+4|0;fb=1;i:while(1){S=a[_]|0;if((S&1)==0){hc=(S&255)>>>1}else{hc=c[gb>>2]|0}if(!(fb>>>0<hc>>>0)){break h}S=c[e>>2]|0;do{if((S|0)!=0){if((c[S+12>>2]|0)==(c[S+16>>2]|0)){if((Fd[c[(c[S>>2]|0)+36>>2]&127](S)|0)==-1){c[e>>2]=0;ic=0;break}else{ic=c[e>>2]|0;break}}else{ic=S}}else{ic=0}}while(0);S=(ic|0)==0;U=c[f>>2]|0;do{if((U|0)!=0){if((c[U+12>>2]|0)!=(c[U+16>>2]|0)){if(S){break}else{break i}}if(!((Fd[c[(c[U>>2]|0)+36>>2]&127](U)|0)==-1)){if(S){break}else{break i}}else{c[f>>2]=0;aa=285;break}}else{aa=285}}while(0);if((aa|0)==285?(aa=0,S):0){break}U=c[e>>2]|0;p=c[U+12>>2]|0;if((p|0)==(c[U+16>>2]|0)){jc=Fd[c[(c[U>>2]|0)+36>>2]&127](U)|0}else{jc=d[p]|0}if((a[_]&1)==0){kc=jb}else{kc=c[ib>>2]|0}if(!((jc&255)<<24>>24==(a[kc+fb|0]|0))){break}p=fb+1|0;U=c[e>>2]|0;eb=U+12|0;r=c[eb>>2]|0;if((r|0)==(c[U+16>>2]|0)){Fd[c[(c[U>>2]|0)+40>>2]&127](U)|0;fb=p;continue}else{c[eb>>2]=r+1;fb=p;continue}}c[k>>2]=c[k>>2]|4;ec=0;fc=Y;gc=$;break g}}while(0);if((Y|0)!=(Z|0)){c[B>>2]=0;To(v,Y,Z,B);if((c[B>>2]|0)==0){ec=1;fc=Y;gc=$}else{c[k>>2]=c[k>>2]|4;ec=0;fc=Y;gc=$}}else{ec=1;fc=Z;gc=$}}}while(0);Zj(z);Zj(y);Zj(x);Zj(w);Zj(v);if((fc|0)==0){i=q;return ec|0}Dd[gc&255](fc);i=q;return ec|0}function Po(a){a=a|0;var b=0;b=fc(8)|0;Gj(b,a);td(b|0,9992,51)}function Qo(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;d=i;i=i+144|0;l=d;m=d+40|0;n=d+16|0;o=d+24|0;p=d+28|0;q=d+36|0;r=d+32|0;c[n>>2]=m;s=n+4|0;c[s>>2]=163;t=m+100|0;sk(p,h);m=c[p>>2]|0;if(!((c[3266]|0)==-1)){c[l>>2]=13064;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13064,l,162)}u=(c[13068>>2]|0)+ -1|0;v=c[m+8>>2]|0;if(!((c[m+12>>2]|0)-v>>2>>>0>u>>>0)){w=fc(4)|0;Yr(w);td(w|0,21024,137)}m=c[v+(u<<2)>>2]|0;if((m|0)==0){w=fc(4)|0;Yr(w);td(w|0,21024,137)}a[q]=0;w=c[f>>2]|0;c[r>>2]=w;u=c[h+4>>2]|0;c[l+0>>2]=c[r+0>>2];if(Oo(e,l,g,p,u,j,q,m,n,o,t)|0){if((a[k]&1)==0){a[k+1|0]=0;a[k]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}if((a[q]|0)!=0){dk(k,Sd[c[(c[m>>2]|0)+28>>2]&31](m,45)|0)}q=Sd[c[(c[m>>2]|0)+28>>2]&31](m,48)|0;m=c[n>>2]|0;t=c[o>>2]|0;o=t+ -1|0;a:do{if(m>>>0<o>>>0){u=m;while(1){g=u+1|0;if(!((a[u]|0)==q<<24>>24)){x=u;break a}if(g>>>0<o>>>0){u=g}else{x=g;break}}}else{x=m}}while(0);Ro(k,x,t)|0}t=c[e>>2]|0;if((t|0)!=0){if((c[t+12>>2]|0)==(c[t+16>>2]|0)?(Fd[c[(c[t>>2]|0)+36>>2]&127](t)|0)==-1:0){c[e>>2]=0;y=0}else{y=t}}else{y=0}t=(y|0)==0;do{if((w|0)!=0){if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){if(t){break}else{z=27;break}}if(!((Fd[c[(c[w>>2]|0)+36>>2]&127](w)|0)==-1)){if(t^(w|0)==0){break}else{z=27;break}}else{c[f>>2]=0;z=25;break}}else{z=25}}while(0);if((z|0)==25?t:0){z=27}if((z|0)==27){c[j>>2]=c[j>>2]|2}c[b>>2]=y;Aj(c[p>>2]|0)|0;p=c[n>>2]|0;c[n>>2]=0;if((p|0)==0){i=d;return}Dd[c[s>>2]&255](p);i=d;return}function Ro(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;g=d;h=a[b]|0;if((h&1)==0){j=10;k=(h&255)>>>1;l=h}else{h=c[b>>2]|0;j=(h&-2)+ -1|0;k=c[b+4>>2]|0;l=h&255}h=e-g|0;if((e|0)==(d|0)){i=f;return b|0}if((j-k|0)>>>0<h>>>0){gk(b,j,k+h-j|0,k,k,0,0);m=a[b]|0}else{m=l}if((m&1)==0){n=b+1|0}else{n=c[b+8>>2]|0}m=e+(k-g)|0;g=d;d=n+k|0;while(1){a[d]=a[g]|0;g=g+1|0;if((g|0)==(e|0)){break}else{d=d+1|0}}a[n+m|0]=0;m=k+h|0;if((a[b]&1)==0){a[b]=m<<1;i=f;return b|0}else{c[b+4>>2]=m;i=f;return b|0}return 0}function So(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;n=i;i=i+128|0;o=n;p=n+100|0;q=n+88|0;r=n+76|0;s=n+64|0;t=n+104|0;u=n+36|0;v=n+24|0;w=n+12|0;x=n+40|0;y=n+52|0;if(b){b=c[d>>2]|0;if(!((c[3126]|0)==-1)){c[o>>2]=12504;c[o+4>>2]=161;c[o+8>>2]=0;Uj(12504,o,162)}z=(c[12508>>2]|0)+ -1|0;A=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-A>>2>>>0>z>>>0)){B=fc(4)|0;Yr(B);td(B|0,21024,137)}b=c[A+(z<<2)>>2]|0;if((b|0)==0){B=fc(4)|0;Yr(B);td(B|0,21024,137)}Ed[c[(c[b>>2]|0)+44>>2]&63](p,b);B=c[p>>2]|0;a[e]=B;a[e+1|0]=B>>8;a[e+2|0]=B>>16;a[e+3|0]=B>>24;Ed[c[(c[b>>2]|0)+32>>2]&63](q,b);if((a[l]&1)==0){a[l+1|0]=0;a[l]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}ck(l,0);c[l+0>>2]=c[q+0>>2];c[l+4>>2]=c[q+4>>2];c[l+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;Zj(q);Ed[c[(c[b>>2]|0)+28>>2]&63](r,b);if((a[k]&1)==0){a[k+1|0]=0;a[k]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}ck(k,0);c[k+0>>2]=c[r+0>>2];c[k+4>>2]=c[r+4>>2];c[k+8>>2]=c[r+8>>2];c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;Zj(r);a[f]=Fd[c[(c[b>>2]|0)+12>>2]&127](b)|0;a[g]=Fd[c[(c[b>>2]|0)+16>>2]&127](b)|0;Ed[c[(c[b>>2]|0)+20>>2]&63](s,b);if((a[h]&1)==0){a[h+1|0]=0;a[h]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}ck(h,0);c[h+0>>2]=c[s+0>>2];c[h+4>>2]=c[s+4>>2];c[h+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Zj(s);Ed[c[(c[b>>2]|0)+24>>2]&63](t,b);if((a[j]&1)==0){a[j+1|0]=0;a[j]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}ck(j,0);c[j+0>>2]=c[t+0>>2];c[j+4>>2]=c[t+4>>2];c[j+8>>2]=c[t+8>>2];c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;Zj(t);C=Fd[c[(c[b>>2]|0)+36>>2]&127](b)|0;c[m>>2]=C;i=n;return}else{b=c[d>>2]|0;if(!((c[3110]|0)==-1)){c[o>>2]=12440;c[o+4>>2]=161;c[o+8>>2]=0;Uj(12440,o,162)}o=(c[12444>>2]|0)+ -1|0;d=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-d>>2>>>0>o>>>0)){D=fc(4)|0;Yr(D);td(D|0,21024,137)}b=c[d+(o<<2)>>2]|0;if((b|0)==0){D=fc(4)|0;Yr(D);td(D|0,21024,137)}Ed[c[(c[b>>2]|0)+44>>2]&63](u,b);D=c[u>>2]|0;a[e]=D;a[e+1|0]=D>>8;a[e+2|0]=D>>16;a[e+3|0]=D>>24;Ed[c[(c[b>>2]|0)+32>>2]&63](v,b);if((a[l]&1)==0){a[l+1|0]=0;a[l]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}ck(l,0);c[l+0>>2]=c[v+0>>2];c[l+4>>2]=c[v+4>>2];c[l+8>>2]=c[v+8>>2];c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;Zj(v);Ed[c[(c[b>>2]|0)+28>>2]&63](w,b);if((a[k]&1)==0){a[k+1|0]=0;a[k]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}ck(k,0);c[k+0>>2]=c[w+0>>2];c[k+4>>2]=c[w+4>>2];c[k+8>>2]=c[w+8>>2];c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;Zj(w);a[f]=Fd[c[(c[b>>2]|0)+12>>2]&127](b)|0;a[g]=Fd[c[(c[b>>2]|0)+16>>2]&127](b)|0;Ed[c[(c[b>>2]|0)+20>>2]&63](x,b);if((a[h]&1)==0){a[h+1|0]=0;a[h]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}ck(h,0);c[h+0>>2]=c[x+0>>2];c[h+4>>2]=c[x+4>>2];c[h+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Zj(x);Ed[c[(c[b>>2]|0)+24>>2]&63](y,b);if((a[j]&1)==0){a[j+1|0]=0;a[j]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}ck(j,0);c[j+0>>2]=c[y+0>>2];c[j+4>>2]=c[y+4>>2];c[j+8>>2]=c[y+8>>2];c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;Zj(y);C=Fd[c[(c[b>>2]|0)+36>>2]&127](b)|0;c[m>>2]=C;i=n;return}}function To(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;h=a[b]|0;if((h&1)==0){j=(h&255)>>>1}else{j=c[b+4>>2]|0}if((j|0)==0){i=g;return}if((d|0)!=(e|0)?(j=e+ -4|0,j>>>0>d>>>0):0){k=d;l=j;do{j=c[k>>2]|0;c[k>>2]=c[l>>2];c[l>>2]=j;k=k+4|0;l=l+ -4|0}while(k>>>0<l>>>0);m=a[b]|0}else{m=h}if((m&1)==0){n=b+1|0;o=(m&255)>>>1}else{n=c[b+8>>2]|0;o=c[b+4>>2]|0}b=e+ -4|0;e=a[n]|0;m=e<<24>>24<1|e<<24>>24==127;a:do{if(b>>>0>d>>>0){h=n+o|0;l=e;k=n;j=d;p=m;while(1){if(!p?(l<<24>>24|0)!=(c[j>>2]|0):0){break}q=(h-k|0)>1?k+1|0:k;r=j+4|0;s=a[q]|0;t=s<<24>>24<1|s<<24>>24==127;if(r>>>0<b>>>0){l=s;k=q;j=r;p=t}else{u=s;v=t;break a}}c[f>>2]=4;i=g;return}else{u=e;v=m}}while(0);if(v){i=g;return}v=c[b>>2]|0;if(!(u<<24>>24>>>0<v>>>0|(v|0)==0)){i=g;return}c[f>>2]=4;i=g;return}function Uo(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Vo(a){a=a|0;return}function Wo(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;d=i;i=i+576|0;l=d;m=d+72|0;n=d+64|0;o=d+60|0;p=d+56|0;q=d+572|0;r=d+12|0;s=d+16|0;t=d+472|0;c[n>>2]=m;u=n+4|0;c[u>>2]=163;v=m+400|0;sk(p,h);m=c[p>>2]|0;if(!((c[3264]|0)==-1)){c[l>>2]=13056;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13056,l,162)}w=(c[13060>>2]|0)+ -1|0;x=c[m+8>>2]|0;if(!((c[m+12>>2]|0)-x>>2>>>0>w>>>0)){y=fc(4)|0;Yr(y);td(y|0,21024,137)}m=c[x+(w<<2)>>2]|0;if((m|0)==0){y=fc(4)|0;Yr(y);td(y|0,21024,137)}a[q]=0;c[r>>2]=c[f>>2];y=c[h+4>>2]|0;c[l+0>>2]=c[r+0>>2];if(Xo(e,l,g,p,y,j,q,m,n,o,v)|0){Td[c[(c[m>>2]|0)+48>>2]&7](m,12760,12770|0,s)|0;m=c[o>>2]|0;v=c[n>>2]|0;y=m-v|0;if((y|0)>392){g=rs((y>>2)+2|0)|0;if((g|0)==0){Ds()}else{z=g;A=g}}else{z=0;A=t}if((a[q]|0)==0){B=A}else{a[A]=45;B=A+1|0}if(v>>>0<m>>>0){m=s+40|0;A=s;q=B;g=v;while(1){v=c[g>>2]|0;y=s;while(1){r=y+4|0;if((c[y>>2]|0)==(v|0)){C=y;break}if((r|0)==(m|0)){C=m;break}else{y=r}}a[q]=a[12760+(C-A>>2)|0]|0;y=g+4|0;v=q+1|0;if(y>>>0<(c[o>>2]|0)>>>0){q=v;g=y}else{D=v;break}}}else{D=B}a[D]=0;c[l>>2]=k;if((Pa(t|0,12696,l|0)|0)!=1){l=fc(8)|0;Gj(l,12704);td(l|0,9992,51)}if((z|0)!=0){ss(z)}}z=c[e>>2]|0;do{if((z|0)!=0){l=c[z+12>>2]|0;if((l|0)==(c[z+16>>2]|0)){E=Fd[c[(c[z>>2]|0)+36>>2]&127](z)|0}else{E=c[l>>2]|0}if((E|0)==-1){c[e>>2]=0;F=1;break}else{F=(c[e>>2]|0)==0;break}}else{F=1}}while(0);E=c[f>>2]|0;do{if((E|0)!=0){z=c[E+12>>2]|0;if((z|0)==(c[E+16>>2]|0)){G=Fd[c[(c[E>>2]|0)+36>>2]&127](E)|0}else{G=c[z>>2]|0}if(!((G|0)==-1)){if(F){break}else{H=37;break}}else{c[f>>2]=0;H=35;break}}else{H=35}}while(0);if((H|0)==35?F:0){H=37}if((H|0)==37){c[j>>2]=c[j>>2]|2}c[b>>2]=c[e>>2];Aj(c[p>>2]|0)|0;p=c[n>>2]|0;c[n>>2]=0;if((p|0)==0){i=d;return}Dd[c[u>>2]&255](p);i=d;return}function Xo(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0;p=i;i=i+480|0;q=p+80|0;r=p+76|0;s=p+72|0;t=p+68|0;u=p+56|0;v=p+44|0;w=p+28|0;x=p+16|0;y=p+4|0;z=p;A=p+40|0;c[r>>2]=0;c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;_o(f,g,r,s,t,u,v,w,x,z);c[n>>2]=c[m>>2];g=x+4|0;f=x+8|0;B=w+4|0;C=w+8|0;D=(h&512|0)!=0;h=v+4|0;E=v+8|0;F=y+4|0;G=y+8|0;H=r+3|0;I=m+4|0;J=u+4|0;K=q+400|0;L=q;M=q;q=o;o=0;N=0;O=163;a:while(1){P=c[b>>2]|0;do{if((P|0)!=0){Q=c[P+12>>2]|0;if((Q|0)==(c[P+16>>2]|0)){R=Fd[c[(c[P>>2]|0)+36>>2]&127](P)|0}else{R=c[Q>>2]|0}if((R|0)==-1){c[b>>2]=0;S=1;break}else{S=(c[b>>2]|0)==0;break}}else{S=1}}while(0);P=c[e>>2]|0;do{if((P|0)!=0){Q=c[P+12>>2]|0;if((Q|0)==(c[P+16>>2]|0)){T=Fd[c[(c[P>>2]|0)+36>>2]&127](P)|0}else{T=c[Q>>2]|0}if(!((T|0)==-1)){if(S){U=P;break}else{V=M;W=L;X=N;Y=O;Z=292;break a}}else{c[e>>2]=0;Z=15;break}}else{Z=15}}while(0);if((Z|0)==15){Z=0;if(S){V=M;W=L;X=N;Y=O;Z=292;break}else{U=0}}b:do{switch(a[r+o|0]|0){case 2:{if(!((N|0)!=0|o>>>0<2)){if((o|0)==2){_=(a[H]|0)!=0}else{_=0}if(!(D|_)){$=q;aa=M;ba=L;ca=K;da=0;ea=O;break b}}P=a[v]|0;Q=(P&1)==0?h:c[E>>2]|0;c:do{if((o|0)!=0?(d[r+(o+ -1)|0]|0)<2:0){fa=P;ga=Q;while(1){if((fa&1)==0){ha=h;ia=(fa&255)>>>1}else{ha=c[E>>2]|0;ia=c[h>>2]|0}if((ga|0)==(ha+(ia<<2)|0)){ja=fa;break}if(!(Kd[c[(c[l>>2]|0)+12>>2]&31](l,8192,c[ga>>2]|0)|0)){Z=129;break}fa=a[v]|0;ga=ga+4|0}if((Z|0)==129){Z=0;ja=a[v]|0}fa=(ja&1)==0;ka=ga-(fa?h:c[E>>2]|0)>>2;la=a[y]|0;ma=(la&1)==0;if(ma){na=(la&255)>>>1}else{na=c[F>>2]|0}d:do{if(!(ka>>>0>na>>>0)){if(ma){oa=F;pa=(la&255)>>>1;qa=F+(((la&255)>>>1)-ka<<2)|0}else{ra=c[G>>2]|0;sa=c[F>>2]|0;oa=ra;pa=sa;qa=ra+(sa-ka<<2)|0}sa=oa+(pa<<2)|0;if((qa|0)==(sa|0)){ta=U;ua=ja;va=ga;wa=U;break c}else{xa=qa;ya=fa?h:c[E>>2]|0}while(1){if((c[xa>>2]|0)!=(c[ya>>2]|0)){break d}ra=xa+4|0;if((ra|0)==(sa|0)){ta=U;ua=ja;va=ga;wa=U;break c}xa=ra;ya=ya+4|0}}}while(0);ta=U;ua=ja;va=fa?h:c[E>>2]|0;wa=U}else{ta=U;ua=P;va=Q;wa=U}}while(0);e:while(1){if((ua&1)==0){za=h;Aa=(ua&255)>>>1}else{za=c[E>>2]|0;Aa=c[h>>2]|0}if((va|0)==(za+(Aa<<2)|0)){break}Q=c[b>>2]|0;do{if((Q|0)!=0){P=c[Q+12>>2]|0;if((P|0)==(c[Q+16>>2]|0)){Ba=Fd[c[(c[Q>>2]|0)+36>>2]&127](Q)|0}else{Ba=c[P>>2]|0}if((Ba|0)==-1){c[b>>2]=0;Ca=1;break}else{Ca=(c[b>>2]|0)==0;break}}else{Ca=1}}while(0);do{if((wa|0)!=0){Q=c[wa+12>>2]|0;if((Q|0)==(c[wa+16>>2]|0)){Da=Fd[c[(c[wa>>2]|0)+36>>2]&127](wa)|0}else{Da=c[Q>>2]|0}if(!((Da|0)==-1)){if(Ca^(ta|0)==0){Ea=ta;Fa=ta;break}else{break e}}else{c[e>>2]=0;Ga=0;Z=159;break}}else{Ga=ta;Z=159}}while(0);if((Z|0)==159){Z=0;if(Ca){break}else{Ea=Ga;Fa=0}}Q=c[b>>2]|0;fa=c[Q+12>>2]|0;if((fa|0)==(c[Q+16>>2]|0)){Ha=Fd[c[(c[Q>>2]|0)+36>>2]&127](Q)|0}else{Ha=c[fa>>2]|0}if((Ha|0)!=(c[va>>2]|0)){break}fa=c[b>>2]|0;Q=fa+12|0;P=c[Q>>2]|0;if((P|0)==(c[fa+16>>2]|0)){Fd[c[(c[fa>>2]|0)+40>>2]&127](fa)|0}else{c[Q>>2]=P+4}ta=Ea;ua=a[v]|0;va=va+4|0;wa=Fa}if(D){P=a[v]|0;if((P&1)==0){Ia=h;Ja=(P&255)>>>1}else{Ia=c[E>>2]|0;Ja=c[h>>2]|0}if((va|0)!=(Ia+(Ja<<2)|0)){Z=174;break a}else{$=q;aa=M;ba=L;ca=K;da=N;ea=O}}else{$=q;aa=M;ba=L;ca=K;da=N;ea=O}break};case 0:{Z=28;break};case 4:{P=q;Q=L;fa=K;ga=M;ka=0;la=O;f:while(1){ma=c[b>>2]|0;do{if((ma|0)!=0){sa=c[ma+12>>2]|0;if((sa|0)==(c[ma+16>>2]|0)){Ka=Fd[c[(c[ma>>2]|0)+36>>2]&127](ma)|0}else{Ka=c[sa>>2]|0}if((Ka|0)==-1){c[b>>2]=0;La=1;break}else{La=(c[b>>2]|0)==0;break}}else{La=1}}while(0);ma=c[e>>2]|0;do{if((ma|0)!=0){sa=c[ma+12>>2]|0;if((sa|0)==(c[ma+16>>2]|0)){Ma=Fd[c[(c[ma>>2]|0)+36>>2]&127](ma)|0}else{Ma=c[sa>>2]|0}if(!((Ma|0)==-1)){if(La){break}else{break f}}else{c[e>>2]=0;Z=188;break}}else{Z=188}}while(0);if((Z|0)==188?(Z=0,La):0){break}ma=c[b>>2]|0;sa=c[ma+12>>2]|0;if((sa|0)==(c[ma+16>>2]|0)){Na=Fd[c[(c[ma>>2]|0)+36>>2]&127](ma)|0}else{Na=c[sa>>2]|0}if(Kd[c[(c[l>>2]|0)+12>>2]&31](l,2048,Na)|0){sa=c[n>>2]|0;if((sa|0)==(P|0)){ma=(c[I>>2]|0)!=163;ra=c[m>>2]|0;Oa=P-ra|0;Pa=Oa>>>0<2147483647?Oa<<1:-1;Qa=Oa>>2;if(ma){Ra=ra}else{Ra=0}ra=ts(Ra,Pa)|0;if((ra|0)==0){Z=198;break a}if(!ma){ma=c[m>>2]|0;c[m>>2]=ra;if((ma|0)==0){Sa=ra}else{Dd[c[I>>2]&255](ma);Sa=c[m>>2]|0}}else{c[m>>2]=ra;Sa=ra}c[I>>2]=164;ra=Sa+(Qa<<2)|0;c[n>>2]=ra;Ta=ra;Ua=(c[m>>2]|0)+(Pa>>>2<<2)|0}else{Ta=sa;Ua=P}c[n>>2]=Ta+4;c[Ta>>2]=Na;Va=Ua;Wa=ga;Xa=Q;Ya=fa;Za=ka+1|0;_a=la}else{sa=a[u]|0;if((sa&1)==0){$a=(sa&255)>>>1}else{$a=c[J>>2]|0}if(($a|0)==0|(ka|0)==0){break}if((Na|0)!=(c[t>>2]|0)){break}if((Q|0)==(fa|0)){sa=Q-ga|0;Pa=sa>>>0<2147483647?sa<<1:-1;if((la|0)!=163){ab=ga}else{ab=0}ra=ts(ab,Pa)|0;if((ra|0)==0){Z=214;break a}bb=ra+(sa>>2<<2)|0;cb=ra;db=ra+(Pa>>>2<<2)|0;eb=164}else{bb=Q;cb=ga;db=fa;eb=la}c[bb>>2]=ka;Va=P;Wa=cb;Xa=bb+4|0;Ya=db;Za=0;_a=eb}Pa=c[b>>2]|0;ra=Pa+12|0;sa=c[ra>>2]|0;if((sa|0)==(c[Pa+16>>2]|0)){Fd[c[(c[Pa>>2]|0)+40>>2]&127](Pa)|0;P=Va;Q=Xa;fa=Ya;ga=Wa;ka=Za;la=_a;continue}else{c[ra>>2]=sa+4;P=Va;Q=Xa;fa=Ya;ga=Wa;ka=Za;la=_a;continue}}if((ga|0)==(Q|0)|(ka|0)==0){fb=ga;gb=Q;hb=fa;ib=la}else{if((Q|0)==(fa|0)){sa=Q-ga|0;ra=sa>>>0<2147483647?sa<<1:-1;if((la|0)!=163){jb=ga}else{jb=0}Pa=ts(jb,ra)|0;if((Pa|0)==0){Z=225;break a}kb=Pa+(sa>>2<<2)|0;lb=Pa;mb=Pa+(ra>>>2<<2)|0;nb=164}else{kb=Q;lb=ga;mb=fa;nb=la}c[kb>>2]=ka;fb=lb;gb=kb+4|0;hb=mb;ib=nb}ra=c[z>>2]|0;if((ra|0)>0){Pa=c[b>>2]|0;do{if((Pa|0)!=0){sa=c[Pa+12>>2]|0;if((sa|0)==(c[Pa+16>>2]|0)){ob=Fd[c[(c[Pa>>2]|0)+36>>2]&127](Pa)|0}else{ob=c[sa>>2]|0}if((ob|0)==-1){c[b>>2]=0;pb=1;break}else{pb=(c[b>>2]|0)==0;break}}else{pb=1}}while(0);Pa=c[e>>2]|0;do{if((Pa|0)!=0){ka=c[Pa+12>>2]|0;if((ka|0)==(c[Pa+16>>2]|0)){qb=Fd[c[(c[Pa>>2]|0)+36>>2]&127](Pa)|0}else{qb=c[ka>>2]|0}if(!((qb|0)==-1)){if(pb){rb=Pa;break}else{Z=248;break a}}else{c[e>>2]=0;Z=242;break}}else{Z=242}}while(0);if((Z|0)==242){Z=0;if(pb){Z=248;break a}else{rb=0}}Pa=c[b>>2]|0;ka=c[Pa+12>>2]|0;if((ka|0)==(c[Pa+16>>2]|0)){sb=Fd[c[(c[Pa>>2]|0)+36>>2]&127](Pa)|0}else{sb=c[ka>>2]|0}if((sb|0)!=(c[s>>2]|0)){Z=248;break a}ka=c[b>>2]|0;Pa=ka+12|0;la=c[Pa>>2]|0;if((la|0)==(c[ka+16>>2]|0)){Fd[c[(c[ka>>2]|0)+40>>2]&127](ka)|0;tb=rb;ub=rb;vb=P;wb=ra}else{c[Pa>>2]=la+4;tb=rb;ub=rb;vb=P;wb=ra}while(1){la=c[b>>2]|0;do{if((la|0)!=0){Pa=c[la+12>>2]|0;if((Pa|0)==(c[la+16>>2]|0)){xb=Fd[c[(c[la>>2]|0)+36>>2]&127](la)|0}else{xb=c[Pa>>2]|0}if((xb|0)==-1){c[b>>2]=0;yb=1;break}else{yb=(c[b>>2]|0)==0;break}}else{yb=1}}while(0);do{if((ub|0)!=0){la=c[ub+12>>2]|0;if((la|0)==(c[ub+16>>2]|0)){zb=Fd[c[(c[ub>>2]|0)+36>>2]&127](ub)|0}else{zb=c[la>>2]|0}if(!((zb|0)==-1)){if(yb^(tb|0)==0){Ab=tb;Bb=tb;break}else{Z=271;break a}}else{c[e>>2]=0;Cb=0;Z=265;break}}else{Cb=tb;Z=265}}while(0);if((Z|0)==265){Z=0;if(yb){Z=271;break a}else{Ab=Cb;Bb=0}}la=c[b>>2]|0;Pa=c[la+12>>2]|0;if((Pa|0)==(c[la+16>>2]|0)){Db=Fd[c[(c[la>>2]|0)+36>>2]&127](la)|0}else{Db=c[Pa>>2]|0}if(!(Kd[c[(c[l>>2]|0)+12>>2]&31](l,2048,Db)|0)){Z=271;break a}Pa=c[n>>2]|0;if((Pa|0)==(vb|0)){la=(c[I>>2]|0)!=163;ka=c[m>>2]|0;fa=vb-ka|0;ga=fa>>>0<2147483647?fa<<1:-1;Q=fa>>2;if(la){Eb=ka}else{Eb=0}ka=ts(Eb,ga)|0;if((ka|0)==0){Z=276;break a}if(!la){la=c[m>>2]|0;c[m>>2]=ka;if((la|0)==0){Fb=ka}else{Dd[c[I>>2]&255](la);Fb=c[m>>2]|0}}else{c[m>>2]=ka;Fb=ka}c[I>>2]=164;ka=Fb+(Q<<2)|0;c[n>>2]=ka;Gb=ka;Hb=(c[m>>2]|0)+(ga>>>2<<2)|0}else{Gb=Pa;Hb=vb}Pa=c[b>>2]|0;ga=c[Pa+12>>2]|0;if((ga|0)==(c[Pa+16>>2]|0)){ka=Fd[c[(c[Pa>>2]|0)+36>>2]&127](Pa)|0;Ib=ka;Jb=c[n>>2]|0}else{Ib=c[ga>>2]|0;Jb=Gb}c[n>>2]=Jb+4;c[Jb>>2]=Ib;ga=wb+ -1|0;c[z>>2]=ga;ka=c[b>>2]|0;Pa=ka+12|0;Q=c[Pa>>2]|0;if((Q|0)==(c[ka+16>>2]|0)){Fd[c[(c[ka>>2]|0)+40>>2]&127](ka)|0}else{c[Pa>>2]=Q+4}if((ga|0)>0){tb=Ab;ub=Bb;vb=Hb;wb=ga}else{Kb=Hb;break}}}else{Kb=P}if((c[n>>2]|0)==(c[m>>2]|0)){Z=290;break a}else{$=Kb;aa=fb;ba=gb;ca=hb;da=N;ea=ib}break};case 3:{ra=a[w]|0;ga=(ra&1)==0;if(ga){Lb=(ra&255)>>>1}else{Lb=c[B>>2]|0}Q=a[x]|0;Pa=(Q&1)==0;if(Pa){Mb=(Q&255)>>>1}else{Mb=c[g>>2]|0}if((Lb|0)==(0-Mb|0)){$=q;aa=M;ba=L;ca=K;da=N;ea=O}else{if(ga){Nb=(ra&255)>>>1}else{Nb=c[B>>2]|0}if((Nb|0)!=0){if(Pa){Ob=(Q&255)>>>1}else{Ob=c[g>>2]|0}if((Ob|0)!=0){Pa=c[b>>2]|0;ka=c[Pa+12>>2]|0;if((ka|0)==(c[Pa+16>>2]|0)){la=Fd[c[(c[Pa>>2]|0)+36>>2]&127](Pa)|0;Pb=la;Qb=a[w]|0}else{Pb=c[ka>>2]|0;Qb=ra}ka=c[b>>2]|0;la=ka+12|0;Pa=c[la>>2]|0;fa=(Pa|0)==(c[ka+16>>2]|0);if((Pb|0)==(c[((Qb&1)==0?B:c[C>>2]|0)>>2]|0)){if(fa){Fd[c[(c[ka>>2]|0)+40>>2]&127](ka)|0}else{c[la>>2]=Pa+4}la=a[w]|0;if((la&1)==0){Rb=(la&255)>>>1}else{Rb=c[B>>2]|0}$=q;aa=M;ba=L;ca=K;da=Rb>>>0>1?w:N;ea=O;break b}if(fa){Sb=Fd[c[(c[ka>>2]|0)+36>>2]&127](ka)|0}else{Sb=c[Pa>>2]|0}if((Sb|0)!=(c[((a[x]&1)==0?g:c[f>>2]|0)>>2]|0)){Z=116;break a}Pa=c[b>>2]|0;ka=Pa+12|0;fa=c[ka>>2]|0;if((fa|0)==(c[Pa+16>>2]|0)){Fd[c[(c[Pa>>2]|0)+40>>2]&127](Pa)|0}else{c[ka>>2]=fa+4}a[k]=1;fa=a[x]|0;if((fa&1)==0){Tb=(fa&255)>>>1}else{Tb=c[g>>2]|0}$=q;aa=M;ba=L;ca=K;da=Tb>>>0>1?x:N;ea=O;break b}}if(ga){Ub=(ra&255)>>>1}else{Ub=c[B>>2]|0}ga=c[b>>2]|0;fa=c[ga+12>>2]|0;ka=(fa|0)==(c[ga+16>>2]|0);if((Ub|0)==0){if(ka){Pa=Fd[c[(c[ga>>2]|0)+36>>2]&127](ga)|0;Vb=Pa;Wb=a[x]|0}else{Vb=c[fa>>2]|0;Wb=Q}if((Vb|0)!=(c[((Wb&1)==0?g:c[f>>2]|0)>>2]|0)){$=q;aa=M;ba=L;ca=K;da=N;ea=O;break b}Q=c[b>>2]|0;Pa=Q+12|0;la=c[Pa>>2]|0;if((la|0)==(c[Q+16>>2]|0)){Fd[c[(c[Q>>2]|0)+40>>2]&127](Q)|0}else{c[Pa>>2]=la+4}a[k]=1;la=a[x]|0;if((la&1)==0){Xb=(la&255)>>>1}else{Xb=c[g>>2]|0}$=q;aa=M;ba=L;ca=K;da=Xb>>>0>1?x:N;ea=O;break b}if(ka){ka=Fd[c[(c[ga>>2]|0)+36>>2]&127](ga)|0;Yb=ka;Zb=a[w]|0}else{Yb=c[fa>>2]|0;Zb=ra}if((Yb|0)!=(c[((Zb&1)==0?B:c[C>>2]|0)>>2]|0)){a[k]=1;$=q;aa=M;ba=L;ca=K;da=N;ea=O;break b}ra=c[b>>2]|0;fa=ra+12|0;ka=c[fa>>2]|0;if((ka|0)==(c[ra+16>>2]|0)){Fd[c[(c[ra>>2]|0)+40>>2]&127](ra)|0}else{c[fa>>2]=ka+4}ka=a[w]|0;if((ka&1)==0){_b=(ka&255)>>>1}else{_b=c[B>>2]|0}$=q;aa=M;ba=L;ca=K;da=_b>>>0>1?w:N;ea=O}break};case 1:{if((o|0)==3){V=M;W=L;X=N;Y=O;Z=292;break a}ka=c[b>>2]|0;fa=c[ka+12>>2]|0;if((fa|0)==(c[ka+16>>2]|0)){$b=Fd[c[(c[ka>>2]|0)+36>>2]&127](ka)|0}else{$b=c[fa>>2]|0}if(!(Kd[c[(c[l>>2]|0)+12>>2]&31](l,8192,$b)|0)){Z=27;break a}fa=c[b>>2]|0;ka=fa+12|0;ra=c[ka>>2]|0;if((ra|0)==(c[fa+16>>2]|0)){ac=Fd[c[(c[fa>>2]|0)+40>>2]&127](fa)|0}else{c[ka>>2]=ra+4;ac=c[ra>>2]|0}nk(y,ac);Z=28;break};default:{$=q;aa=M;ba=L;ca=K;da=N;ea=O}}}while(0);g:do{if((Z|0)==28){Z=0;if((o|0)==3){V=M;W=L;X=N;Y=O;Z=292;break a}else{bc=U;cc=U}while(1){ra=c[b>>2]|0;do{if((ra|0)!=0){ka=c[ra+12>>2]|0;if((ka|0)==(c[ra+16>>2]|0)){dc=Fd[c[(c[ra>>2]|0)+36>>2]&127](ra)|0}else{dc=c[ka>>2]|0}if((dc|0)==-1){c[b>>2]=0;ec=1;break}else{ec=(c[b>>2]|0)==0;break}}else{ec=1}}while(0);do{if((cc|0)!=0){ra=c[cc+12>>2]|0;if((ra|0)==(c[cc+16>>2]|0)){fc=Fd[c[(c[cc>>2]|0)+36>>2]&127](cc)|0}else{fc=c[ra>>2]|0}if(!((fc|0)==-1)){if(ec^(bc|0)==0){gc=bc;hc=bc;break}else{$=q;aa=M;ba=L;ca=K;da=N;ea=O;break g}}else{c[e>>2]=0;ic=0;Z=42;break}}else{ic=bc;Z=42}}while(0);if((Z|0)==42){Z=0;if(ec){$=q;aa=M;ba=L;ca=K;da=N;ea=O;break g}else{gc=ic;hc=0}}ra=c[b>>2]|0;ka=c[ra+12>>2]|0;if((ka|0)==(c[ra+16>>2]|0)){jc=Fd[c[(c[ra>>2]|0)+36>>2]&127](ra)|0}else{jc=c[ka>>2]|0}if(!(Kd[c[(c[l>>2]|0)+12>>2]&31](l,8192,jc)|0)){$=q;aa=M;ba=L;ca=K;da=N;ea=O;break g}ka=c[b>>2]|0;ra=ka+12|0;fa=c[ra>>2]|0;if((fa|0)==(c[ka+16>>2]|0)){kc=Fd[c[(c[ka>>2]|0)+40>>2]&127](ka)|0}else{c[ra>>2]=fa+4;kc=c[fa>>2]|0}nk(y,kc);bc=gc;cc=hc}}}while(0);P=o+1|0;if(P>>>0<4){K=ca;L=ba;M=aa;q=$;o=P;N=da;O=ea}else{V=aa;W=ba;X=da;Y=ea;Z=292;break}}h:do{if((Z|0)==27){c[j>>2]=c[j>>2]|4;lc=0;mc=M;nc=O}else if((Z|0)==116){c[j>>2]=c[j>>2]|4;lc=0;mc=M;nc=O}else if((Z|0)==174){c[j>>2]=c[j>>2]|4;lc=0;mc=M;nc=O}else if((Z|0)==198){Ds()}else if((Z|0)==214){Ds()}else if((Z|0)==225){Ds()}else if((Z|0)==248){c[j>>2]=c[j>>2]|4;lc=0;mc=fb;nc=ib}else if((Z|0)==271){c[j>>2]=c[j>>2]|4;lc=0;mc=fb;nc=ib}else if((Z|0)==276){Ds()}else if((Z|0)==290){c[j>>2]=c[j>>2]|4;lc=0;mc=fb;nc=ib}else if((Z|0)==292){i:do{if((X|0)!=0){ea=X+4|0;da=X+8|0;ba=1;j:while(1){aa=a[X]|0;if((aa&1)==0){oc=(aa&255)>>>1}else{oc=c[ea>>2]|0}if(!(ba>>>0<oc>>>0)){break i}aa=c[b>>2]|0;do{if((aa|0)!=0){N=c[aa+12>>2]|0;if((N|0)==(c[aa+16>>2]|0)){pc=Fd[c[(c[aa>>2]|0)+36>>2]&127](aa)|0}else{pc=c[N>>2]|0}if((pc|0)==-1){c[b>>2]=0;qc=1;break}else{qc=(c[b>>2]|0)==0;break}}else{qc=1}}while(0);aa=c[e>>2]|0;do{if((aa|0)!=0){N=c[aa+12>>2]|0;if((N|0)==(c[aa+16>>2]|0)){rc=Fd[c[(c[aa>>2]|0)+36>>2]&127](aa)|0}else{rc=c[N>>2]|0}if(!((rc|0)==-1)){if(qc){break}else{break j}}else{c[e>>2]=0;Z=311;break}}else{Z=311}}while(0);if((Z|0)==311?(Z=0,qc):0){break}aa=c[b>>2]|0;N=c[aa+12>>2]|0;if((N|0)==(c[aa+16>>2]|0)){sc=Fd[c[(c[aa>>2]|0)+36>>2]&127](aa)|0}else{sc=c[N>>2]|0}if((a[X]&1)==0){tc=ea}else{tc=c[da>>2]|0}if((sc|0)!=(c[tc+(ba<<2)>>2]|0)){break}N=ba+1|0;aa=c[b>>2]|0;o=aa+12|0;$=c[o>>2]|0;if(($|0)==(c[aa+16>>2]|0)){Fd[c[(c[aa>>2]|0)+40>>2]&127](aa)|0;ba=N;continue}else{c[o>>2]=$+4;ba=N;continue}}c[j>>2]=c[j>>2]|4;lc=0;mc=V;nc=Y;break h}}while(0);if((V|0)!=(W|0)){c[A>>2]=0;To(u,V,W,A);if((c[A>>2]|0)==0){lc=1;mc=V;nc=Y}else{c[j>>2]=c[j>>2]|4;lc=0;mc=V;nc=Y}}else{lc=1;mc=W;nc=Y}}}while(0);jk(y);jk(x);jk(w);jk(v);Zj(u);if((mc|0)==0){i=p;return lc|0}Dd[nc&255](mc);i=p;return lc|0}function Yo(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;d=i;i=i+448|0;l=d;m=d+40|0;n=d+16|0;o=d+24|0;p=d+28|0;q=d+440|0;r=d+32|0;c[n>>2]=m;s=n+4|0;c[s>>2]=163;t=m+400|0;sk(p,h);m=c[p>>2]|0;if(!((c[3264]|0)==-1)){c[l>>2]=13056;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13056,l,162)}u=(c[13060>>2]|0)+ -1|0;v=c[m+8>>2]|0;if(!((c[m+12>>2]|0)-v>>2>>>0>u>>>0)){w=fc(4)|0;Yr(w);td(w|0,21024,137)}m=c[v+(u<<2)>>2]|0;if((m|0)==0){w=fc(4)|0;Yr(w);td(w|0,21024,137)}a[q]=0;w=c[f>>2]|0;c[r>>2]=w;u=c[h+4>>2]|0;c[l+0>>2]=c[r+0>>2];if(Xo(e,l,g,p,u,j,q,m,n,o,t)|0){if((a[k]&1)==0){c[k+4>>2]=0;a[k]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}if((a[q]|0)!=0){nk(k,Sd[c[(c[m>>2]|0)+44>>2]&31](m,45)|0)}q=Sd[c[(c[m>>2]|0)+44>>2]&31](m,48)|0;m=c[n>>2]|0;t=c[o>>2]|0;o=t+ -4|0;a:do{if(m>>>0<o>>>0){u=m;while(1){g=u+4|0;if((c[u>>2]|0)!=(q|0)){x=u;break a}if(g>>>0<o>>>0){u=g}else{x=g;break}}}else{x=m}}while(0);Zo(k,x,t)|0}t=c[e>>2]|0;do{if((t|0)!=0){x=c[t+12>>2]|0;if((x|0)==(c[t+16>>2]|0)){y=Fd[c[(c[t>>2]|0)+36>>2]&127](t)|0}else{y=c[x>>2]|0}if((y|0)==-1){c[e>>2]=0;z=1;break}else{z=(c[e>>2]|0)==0;break}}else{z=1}}while(0);do{if((w|0)!=0){y=c[w+12>>2]|0;if((y|0)==(c[w+16>>2]|0)){A=Fd[c[(c[w>>2]|0)+36>>2]&127](w)|0}else{A=c[y>>2]|0}if(!((A|0)==-1)){if(z){break}else{B=31;break}}else{c[f>>2]=0;B=29;break}}else{B=29}}while(0);if((B|0)==29?z:0){B=31}if((B|0)==31){c[j>>2]=c[j>>2]|2}c[b>>2]=c[e>>2];Aj(c[p>>2]|0)|0;p=c[n>>2]|0;c[n>>2]=0;if((p|0)==0){i=d;return}Dd[c[s>>2]&255](p);i=d;return}function Zo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=d;h=a[b]|0;if((h&1)==0){j=1;k=(h&255)>>>1;l=h}else{h=c[b>>2]|0;j=(h&-2)+ -1|0;k=c[b+4>>2]|0;l=h&255}h=e-g>>2;if((h|0)==0){i=f;return b|0}if((j-k|0)>>>0<h>>>0){pk(b,j,k+h-j|0,k,k,0,0);m=a[b]|0}else{m=l}if((m&1)==0){n=b+4|0}else{n=c[b+8>>2]|0}m=n+(k<<2)|0;if((d|0)==(e|0)){o=m}else{l=k+((e+ -4+(0-g)|0)>>>2)+1|0;g=d;d=m;while(1){c[d>>2]=c[g>>2];g=g+4|0;if((g|0)==(e|0)){break}else{d=d+4|0}}o=n+(l<<2)|0}c[o>>2]=0;o=k+h|0;if((a[b]&1)==0){a[b]=o<<1;i=f;return b|0}else{c[b+4>>2]=o;i=f;return b|0}return 0}function _o(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;n=i;i=i+128|0;o=n;p=n+100|0;q=n+88|0;r=n+76|0;s=n+64|0;t=n+104|0;u=n+36|0;v=n+24|0;w=n+12|0;x=n+40|0;y=n+52|0;if(b){b=c[d>>2]|0;if(!((c[3158]|0)==-1)){c[o>>2]=12632;c[o+4>>2]=161;c[o+8>>2]=0;Uj(12632,o,162)}z=(c[12636>>2]|0)+ -1|0;A=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-A>>2>>>0>z>>>0)){B=fc(4)|0;Yr(B);td(B|0,21024,137)}b=c[A+(z<<2)>>2]|0;if((b|0)==0){B=fc(4)|0;Yr(B);td(B|0,21024,137)}Ed[c[(c[b>>2]|0)+44>>2]&63](p,b);B=c[p>>2]|0;a[e]=B;a[e+1|0]=B>>8;a[e+2|0]=B>>16;a[e+3|0]=B>>24;Ed[c[(c[b>>2]|0)+32>>2]&63](q,b);if((a[l]&1)==0){c[l+4>>2]=0;a[l]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}mk(l,0);c[l+0>>2]=c[q+0>>2];c[l+4>>2]=c[q+4>>2];c[l+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;jk(q);Ed[c[(c[b>>2]|0)+28>>2]&63](r,b);if((a[k]&1)==0){c[k+4>>2]=0;a[k]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}mk(k,0);c[k+0>>2]=c[r+0>>2];c[k+4>>2]=c[r+4>>2];c[k+8>>2]=c[r+8>>2];c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;jk(r);c[f>>2]=Fd[c[(c[b>>2]|0)+12>>2]&127](b)|0;c[g>>2]=Fd[c[(c[b>>2]|0)+16>>2]&127](b)|0;Ed[c[(c[b>>2]|0)+20>>2]&63](s,b);if((a[h]&1)==0){a[h+1|0]=0;a[h]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}ck(h,0);c[h+0>>2]=c[s+0>>2];c[h+4>>2]=c[s+4>>2];c[h+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Zj(s);Ed[c[(c[b>>2]|0)+24>>2]&63](t,b);if((a[j]&1)==0){c[j+4>>2]=0;a[j]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}mk(j,0);c[j+0>>2]=c[t+0>>2];c[j+4>>2]=c[t+4>>2];c[j+8>>2]=c[t+8>>2];c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;jk(t);C=Fd[c[(c[b>>2]|0)+36>>2]&127](b)|0;c[m>>2]=C;i=n;return}else{b=c[d>>2]|0;if(!((c[3142]|0)==-1)){c[o>>2]=12568;c[o+4>>2]=161;c[o+8>>2]=0;Uj(12568,o,162)}o=(c[12572>>2]|0)+ -1|0;d=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-d>>2>>>0>o>>>0)){D=fc(4)|0;Yr(D);td(D|0,21024,137)}b=c[d+(o<<2)>>2]|0;if((b|0)==0){D=fc(4)|0;Yr(D);td(D|0,21024,137)}Ed[c[(c[b>>2]|0)+44>>2]&63](u,b);D=c[u>>2]|0;a[e]=D;a[e+1|0]=D>>8;a[e+2|0]=D>>16;a[e+3|0]=D>>24;Ed[c[(c[b>>2]|0)+32>>2]&63](v,b);if((a[l]&1)==0){c[l+4>>2]=0;a[l]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}mk(l,0);c[l+0>>2]=c[v+0>>2];c[l+4>>2]=c[v+4>>2];c[l+8>>2]=c[v+8>>2];c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;jk(v);Ed[c[(c[b>>2]|0)+28>>2]&63](w,b);if((a[k]&1)==0){c[k+4>>2]=0;a[k]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}mk(k,0);c[k+0>>2]=c[w+0>>2];c[k+4>>2]=c[w+4>>2];c[k+8>>2]=c[w+8>>2];c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;jk(w);c[f>>2]=Fd[c[(c[b>>2]|0)+12>>2]&127](b)|0;c[g>>2]=Fd[c[(c[b>>2]|0)+16>>2]&127](b)|0;Ed[c[(c[b>>2]|0)+20>>2]&63](x,b);if((a[h]&1)==0){a[h+1|0]=0;a[h]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}ck(h,0);c[h+0>>2]=c[x+0>>2];c[h+4>>2]=c[x+4>>2];c[h+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Zj(x);Ed[c[(c[b>>2]|0)+24>>2]&63](y,b);if((a[j]&1)==0){c[j+4>>2]=0;a[j]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}mk(j,0);c[j+0>>2]=c[y+0>>2];c[j+4>>2]=c[y+4>>2];c[j+8>>2]=c[y+8>>2];c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;jk(y);C=Fd[c[(c[b>>2]|0)+36>>2]&127](b)|0;c[m>>2]=C;i=n;return}}function $o(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function ap(a){a=a|0;return}function bp(b,d,e,f,g,j,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;d=i;i=i+384|0;m=d;n=d+276|0;o=d+52|0;p=d+176|0;q=d+60|0;r=d+56|0;s=d+376|0;t=d+377|0;u=d+64|0;v=d+32|0;w=d+20|0;x=d+16|0;y=d+76|0;z=d+12|0;A=d+44|0;B=d+48|0;c[o>>2]=n;h[k>>3]=l;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];C=nc(n|0,100,12816,m|0)|0;if(C>>>0>99){if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}n=c[3238]|0;h[k>>3]=l;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];D=Wm(o,n,12816,m)|0;n=c[o>>2]|0;if((n|0)==0){Ds()}E=rs(D)|0;if((E|0)==0){Ds()}else{F=E;G=n;H=E;I=D}}else{F=0;G=0;H=p;I=C}sk(q,g);C=c[q>>2]|0;if(!((c[3266]|0)==-1)){c[m>>2]=13064;c[m+4>>2]=161;c[m+8>>2]=0;Uj(13064,m,162)}p=(c[13068>>2]|0)+ -1|0;D=c[C+8>>2]|0;if(!((c[C+12>>2]|0)-D>>2>>>0>p>>>0)){J=fc(4)|0;Yr(J);td(J|0,21024,137)}C=c[D+(p<<2)>>2]|0;if((C|0)==0){J=fc(4)|0;Yr(J);td(J|0,21024,137)}J=c[o>>2]|0;Td[c[(c[C>>2]|0)+32>>2]&7](C,J,J+I|0,H)|0;if((I|0)==0){K=0}else{K=(a[c[o>>2]|0]|0)==45}c[r>>2]=0;c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;cp(f,K,q,r,s,t,u,v,w,x);f=c[x>>2]|0;if((I|0)>(f|0)){x=a[w]|0;if((x&1)==0){L=(x&255)>>>1}else{L=c[w+4>>2]|0}x=a[v]|0;if((x&1)==0){M=(x&255)>>>1}else{M=c[v+4>>2]|0}N=L+(I-f<<1|1)+M|0}else{M=a[w]|0;if((M&1)==0){O=(M&255)>>>1}else{O=c[w+4>>2]|0}M=a[v]|0;if((M&1)==0){P=(M&255)>>>1}else{P=c[v+4>>2]|0}N=O+2+P|0}P=N+f|0;if(P>>>0>100){N=rs(P)|0;if((N|0)==0){Ds()}else{Q=N;R=N}}else{Q=0;R=y}dp(R,z,A,c[g+4>>2]|0,H,H+I|0,C,K,r,a[s]|0,a[t]|0,u,v,w,f);c[B>>2]=c[e>>2];e=c[z>>2]|0;z=c[A>>2]|0;c[m+0>>2]=c[B+0>>2];eh(b,m,R,e,z,g,j);if((Q|0)!=0){ss(Q)}Zj(w);Zj(v);Zj(u);Aj(c[q>>2]|0)|0;if((F|0)!=0){ss(F)}if((G|0)==0){i=d;return}ss(G);i=d;return}function cp(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;n=i;i=i+128|0;o=n;p=n+108|0;q=n+96|0;r=n+92|0;s=n+80|0;t=n+68|0;u=n+112|0;v=n+40|0;w=n+28|0;x=n+24|0;y=n+12|0;z=n+44|0;A=n+56|0;B=c[e>>2]|0;if(b){if(!((c[3126]|0)==-1)){c[o>>2]=12504;c[o+4>>2]=161;c[o+8>>2]=0;Uj(12504,o,162)}b=(c[12508>>2]|0)+ -1|0;e=c[B+8>>2]|0;if(!((c[B+12>>2]|0)-e>>2>>>0>b>>>0)){C=fc(4)|0;Yr(C);td(C|0,21024,137)}D=c[e+(b<<2)>>2]|0;if((D|0)==0){C=fc(4)|0;Yr(C);td(C|0,21024,137)}C=c[D>>2]|0;if(d){Ed[c[C+44>>2]&63](p,D);b=c[p>>2]|0;a[f]=b;a[f+1|0]=b>>8;a[f+2|0]=b>>16;a[f+3|0]=b>>24;Ed[c[(c[D>>2]|0)+32>>2]&63](q,D);if((a[l]&1)==0){a[l+1|0]=0;a[l]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}ck(l,0);c[l+0>>2]=c[q+0>>2];c[l+4>>2]=c[q+4>>2];c[l+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;Zj(q)}else{Ed[c[C+40>>2]&63](r,D);C=c[r>>2]|0;a[f]=C;a[f+1|0]=C>>8;a[f+2|0]=C>>16;a[f+3|0]=C>>24;Ed[c[(c[D>>2]|0)+28>>2]&63](s,D);if((a[l]&1)==0){a[l+1|0]=0;a[l]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}ck(l,0);c[l+0>>2]=c[s+0>>2];c[l+4>>2]=c[s+4>>2];c[l+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Zj(s)}a[g]=Fd[c[(c[D>>2]|0)+12>>2]&127](D)|0;a[h]=Fd[c[(c[D>>2]|0)+16>>2]&127](D)|0;Ed[c[(c[D>>2]|0)+20>>2]&63](t,D);if((a[j]&1)==0){a[j+1|0]=0;a[j]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}ck(j,0);c[j+0>>2]=c[t+0>>2];c[j+4>>2]=c[t+4>>2];c[j+8>>2]=c[t+8>>2];c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;Zj(t);Ed[c[(c[D>>2]|0)+24>>2]&63](u,D);if((a[k]&1)==0){a[k+1|0]=0;a[k]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}ck(k,0);c[k+0>>2]=c[u+0>>2];c[k+4>>2]=c[u+4>>2];c[k+8>>2]=c[u+8>>2];c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;Zj(u);E=Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0;c[m>>2]=E;i=n;return}else{if(!((c[3110]|0)==-1)){c[o>>2]=12440;c[o+4>>2]=161;c[o+8>>2]=0;Uj(12440,o,162)}o=(c[12444>>2]|0)+ -1|0;D=c[B+8>>2]|0;if(!((c[B+12>>2]|0)-D>>2>>>0>o>>>0)){F=fc(4)|0;Yr(F);td(F|0,21024,137)}B=c[D+(o<<2)>>2]|0;if((B|0)==0){F=fc(4)|0;Yr(F);td(F|0,21024,137)}F=c[B>>2]|0;if(d){Ed[c[F+44>>2]&63](v,B);d=c[v>>2]|0;a[f]=d;a[f+1|0]=d>>8;a[f+2|0]=d>>16;a[f+3|0]=d>>24;Ed[c[(c[B>>2]|0)+32>>2]&63](w,B);if((a[l]&1)==0){a[l+1|0]=0;a[l]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}ck(l,0);c[l+0>>2]=c[w+0>>2];c[l+4>>2]=c[w+4>>2];c[l+8>>2]=c[w+8>>2];c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;Zj(w)}else{Ed[c[F+40>>2]&63](x,B);F=c[x>>2]|0;a[f]=F;a[f+1|0]=F>>8;a[f+2|0]=F>>16;a[f+3|0]=F>>24;Ed[c[(c[B>>2]|0)+28>>2]&63](y,B);if((a[l]&1)==0){a[l+1|0]=0;a[l]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}ck(l,0);c[l+0>>2]=c[y+0>>2];c[l+4>>2]=c[y+4>>2];c[l+8>>2]=c[y+8>>2];c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;Zj(y)}a[g]=Fd[c[(c[B>>2]|0)+12>>2]&127](B)|0;a[h]=Fd[c[(c[B>>2]|0)+16>>2]&127](B)|0;Ed[c[(c[B>>2]|0)+20>>2]&63](z,B);if((a[j]&1)==0){a[j+1|0]=0;a[j]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}ck(j,0);c[j+0>>2]=c[z+0>>2];c[j+4>>2]=c[z+4>>2];c[j+8>>2]=c[z+8>>2];c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;Zj(z);Ed[c[(c[B>>2]|0)+24>>2]&63](A,B);if((a[k]&1)==0){a[k+1|0]=0;a[k]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}ck(k,0);c[k+0>>2]=c[A+0>>2];c[k+4>>2]=c[A+4>>2];c[k+8>>2]=c[A+8>>2];c[A+0>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;Zj(A);E=Fd[c[(c[B>>2]|0)+36>>2]&127](B)|0;c[m>>2]=E;i=n;return}}function dp(d,e,f,g,h,j,k,l,m,n,o,p,q,r,s){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;var t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0;t=i;c[f>>2]=d;u=r+1|0;v=r+8|0;w=r+4|0;x=(g&512|0)==0;y=q+1|0;z=q+8|0;A=q+4|0;B=(s|0)>0;C=p+1|0;D=p+8|0;E=p+4|0;F=k+8|0;G=0-s|0;H=h;h=0;while(1){switch(a[m+h|0]|0){case 0:{c[e>>2]=c[f>>2];I=H;break};case 1:{c[e>>2]=c[f>>2];J=Sd[c[(c[k>>2]|0)+28>>2]&31](k,32)|0;K=c[f>>2]|0;c[f>>2]=K+1;a[K]=J;I=H;break};case 3:{J=a[r]|0;K=(J&1)==0;if(K){L=(J&255)>>>1}else{L=c[w>>2]|0}if((L|0)==0){I=H}else{if(K){M=u}else{M=c[v>>2]|0}K=a[M]|0;J=c[f>>2]|0;c[f>>2]=J+1;a[J]=K;I=H}break};case 4:{K=c[f>>2]|0;J=l?H+1|0:H;a:do{if(J>>>0<j>>>0){N=J;while(1){O=a[N]|0;if(!(O<<24>>24>-1)){P=N;break a}Q=N+1|0;if((b[(c[F>>2]|0)+(O<<24>>24<<1)>>1]&2048)==0){P=N;break a}if(Q>>>0<j>>>0){N=Q}else{P=Q;break}}}else{P=J}}while(0);N=P;if(B){if(P>>>0>J>>>0){Q=J+(0-N)|0;N=Q>>>0<G>>>0?G:Q;Q=N+s|0;O=K;R=P;S=s;while(1){T=R+ -1|0;U=a[T]|0;c[f>>2]=O+1;a[O]=U;U=S+ -1|0;V=(U|0)>0;if(!(T>>>0>J>>>0&V)){break}O=c[f>>2]|0;R=T;S=U}S=P+N|0;if(V){W=S;X=Q;Y=32}else{Z=0;_=S;$=Q}}else{W=P;X=s;Y=32}if((Y|0)==32){Y=0;Z=Sd[c[(c[k>>2]|0)+28>>2]&31](k,48)|0;_=W;$=X}S=c[f>>2]|0;c[f>>2]=S+1;if(($|0)>0){R=S;O=$;while(1){a[R]=Z;U=O+ -1|0;T=c[f>>2]|0;c[f>>2]=T+1;if((U|0)>0){R=T;O=U}else{aa=T;break}}}else{aa=S}a[aa]=n;ba=_}else{ba=P}if((ba|0)==(J|0)){O=Sd[c[(c[k>>2]|0)+28>>2]&31](k,48)|0;R=c[f>>2]|0;c[f>>2]=R+1;a[R]=O}else{O=a[p]|0;R=(O&1)==0;if(R){ca=(O&255)>>>1}else{ca=c[E>>2]|0}if((ca|0)==0){da=ba;ea=-1;fa=0;ga=0}else{if(R){ha=C}else{ha=c[D>>2]|0}da=ba;ea=a[ha]|0;fa=0;ga=0}while(1){if((ga|0)==(ea|0)){R=c[f>>2]|0;c[f>>2]=R+1;a[R]=o;R=fa+1|0;O=a[p]|0;Q=(O&1)==0;if(Q){ia=(O&255)>>>1}else{ia=c[E>>2]|0}if(R>>>0<ia>>>0){if(Q){ja=C}else{ja=c[D>>2]|0}if((a[ja+R|0]|0)==127){ka=-1;la=R;ma=0}else{if(Q){na=C}else{na=c[D>>2]|0}ka=a[na+R|0]|0;la=R;ma=0}}else{ka=ea;la=R;ma=0}}else{ka=ea;la=fa;ma=ga}da=da+ -1|0;R=a[da]|0;Q=c[f>>2]|0;c[f>>2]=Q+1;a[Q]=R;if((da|0)==(J|0)){break}else{ea=ka;fa=la;ga=ma+1|0}}}S=c[f>>2]|0;if((K|0)!=(S|0)?(R=S+ -1|0,R>>>0>K>>>0):0){S=K;Q=R;while(1){R=a[S]|0;a[S]=a[Q]|0;a[Q]=R;R=S+1|0;O=Q+ -1|0;if(R>>>0<O>>>0){S=R;Q=O}else{I=J;break}}}else{I=J}break};case 2:{Q=a[q]|0;S=(Q&1)==0;if(S){oa=(Q&255)>>>1}else{oa=c[A>>2]|0}if((oa|0)==0|x){I=H}else{if(S){pa=y;qa=(Q&255)>>>1}else{pa=c[z>>2]|0;qa=c[A>>2]|0}Q=pa+qa|0;S=c[f>>2]|0;if((pa|0)==(Q|0)){ra=S}else{K=S;S=pa;while(1){a[K]=a[S]|0;O=S+1|0;R=K+1|0;if((O|0)==(Q|0)){ra=R;break}else{K=R;S=O}}}c[f>>2]=ra;I=H}break};default:{I=H}}h=h+1|0;if((h|0)==4){break}else{H=I}}I=a[r]|0;r=(I&1)==0;if(r){sa=(I&255)>>>1}else{sa=c[w>>2]|0}if(sa>>>0>1){if(r){ta=u;ua=(I&255)>>>1}else{ta=c[v>>2]|0;ua=c[w>>2]|0}w=ta+1|0;v=ta+ua|0;ua=c[f>>2]|0;if((w|0)==(v|0)){va=ua}else{ta=ua;ua=w;while(1){a[ta]=a[ua]|0;w=ua+1|0;I=ta+1|0;if((w|0)==(v|0)){va=I;break}else{ta=I;ua=w}}}c[f>>2]=va}va=g&176;if((va|0)==32){c[e>>2]=c[f>>2];i=t;return}else if((va|0)==16){i=t;return}else{c[e>>2]=d;i=t;return}}function ep(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;d=i;i=i+176|0;k=d;l=d+52|0;m=d+56|0;n=d+172|0;o=d+173|0;p=d+40|0;q=d+60|0;r=d+20|0;s=d+16|0;t=d+72|0;u=d+12|0;v=d+32|0;w=d+36|0;sk(l,g);x=c[l>>2]|0;if(!((c[3266]|0)==-1)){c[k>>2]=13064;c[k+4>>2]=161;c[k+8>>2]=0;Uj(13064,k,162)}y=(c[13068>>2]|0)+ -1|0;z=c[x+8>>2]|0;if(!((c[x+12>>2]|0)-z>>2>>>0>y>>>0)){A=fc(4)|0;Yr(A);td(A|0,21024,137)}x=c[z+(y<<2)>>2]|0;if((x|0)==0){A=fc(4)|0;Yr(A);td(A|0,21024,137)}A=a[j]|0;y=(A&1)==0;if(y){B=(A&255)>>>1}else{B=c[j+4>>2]|0}if((B|0)==0){C=0}else{if(y){D=j+1|0}else{D=c[j+8>>2]|0}y=a[D]|0;C=y<<24>>24==(Sd[c[(c[x>>2]|0)+28>>2]&31](x,45)|0)<<24>>24}c[m>>2]=0;c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;cp(f,C,l,m,n,o,p,q,r,s);f=a[j]|0;y=(f&1)==0;if(y){E=(f&255)>>>1}else{E=c[j+4>>2]|0}D=c[s>>2]|0;if((E|0)>(D|0)){if(y){F=(f&255)>>>1}else{F=c[j+4>>2]|0}y=a[r]|0;if((y&1)==0){G=(y&255)>>>1}else{G=c[r+4>>2]|0}y=a[q]|0;if((y&1)==0){H=(y&255)>>>1}else{H=c[q+4>>2]|0}I=G+(F-D<<1|1)+H|0}else{H=a[r]|0;if((H&1)==0){J=(H&255)>>>1}else{J=c[r+4>>2]|0}H=a[q]|0;if((H&1)==0){K=(H&255)>>>1}else{K=c[q+4>>2]|0}I=J+2+K|0}K=I+D|0;if(K>>>0>100){I=rs(K)|0;if((I|0)==0){Ds()}else{L=I;M=I}}else{L=0;M=t}if((f&1)==0){N=j+1|0;O=(f&255)>>>1}else{N=c[j+8>>2]|0;O=c[j+4>>2]|0}dp(M,u,v,c[g+4>>2]|0,N,N+O|0,x,C,m,a[n]|0,a[o]|0,p,q,r,D);c[w>>2]=c[e>>2];e=c[u>>2]|0;u=c[v>>2]|0;c[k+0>>2]=c[w+0>>2];eh(b,k,M,e,u,g,h);if((L|0)==0){Zj(r);Zj(q);Zj(p);P=c[l>>2]|0;Aj(P)|0;i=d;return}ss(L);Zj(r);Zj(q);Zj(p);P=c[l>>2]|0;Aj(P)|0;i=d;return}function fp(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function gp(a){a=a|0;return}function hp(b,d,e,f,g,j,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;d=i;i=i+992|0;m=d;n=d+888|0;o=d+872|0;p=d+472|0;q=d+464|0;r=d+460|0;s=d+456|0;t=d+452|0;u=d+876|0;v=d+432|0;w=d+420|0;x=d+416|0;y=d+16|0;z=d+12|0;A=d+444|0;B=d+448|0;c[o>>2]=n;h[k>>3]=l;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];C=nc(n|0,100,12816,m|0)|0;if(C>>>0>99){if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}n=c[3238]|0;h[k>>3]=l;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];D=Wm(o,n,12816,m)|0;n=c[o>>2]|0;if((n|0)==0){Ds()}E=rs(D<<2)|0;if((E|0)==0){Ds()}else{F=E;G=n;H=E;I=D}}else{F=0;G=0;H=p;I=C}sk(q,g);C=c[q>>2]|0;if(!((c[3264]|0)==-1)){c[m>>2]=13056;c[m+4>>2]=161;c[m+8>>2]=0;Uj(13056,m,162)}p=(c[13060>>2]|0)+ -1|0;D=c[C+8>>2]|0;if(!((c[C+12>>2]|0)-D>>2>>>0>p>>>0)){J=fc(4)|0;Yr(J);td(J|0,21024,137)}C=c[D+(p<<2)>>2]|0;if((C|0)==0){J=fc(4)|0;Yr(J);td(J|0,21024,137)}J=c[o>>2]|0;Td[c[(c[C>>2]|0)+48>>2]&7](C,J,J+I|0,H)|0;if((I|0)==0){K=0}else{K=(a[c[o>>2]|0]|0)==45}c[r>>2]=0;c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;ip(f,K,q,r,s,t,u,v,w,x);f=c[x>>2]|0;if((I|0)>(f|0)){x=a[w]|0;if((x&1)==0){L=(x&255)>>>1}else{L=c[w+4>>2]|0}x=a[v]|0;if((x&1)==0){M=(x&255)>>>1}else{M=c[v+4>>2]|0}N=L+(I-f<<1|1)+M|0}else{M=a[w]|0;if((M&1)==0){O=(M&255)>>>1}else{O=c[w+4>>2]|0}M=a[v]|0;if((M&1)==0){P=(M&255)>>>1}else{P=c[v+4>>2]|0}N=O+2+P|0}P=N+f|0;if(P>>>0>100){N=rs(P<<2)|0;if((N|0)==0){Ds()}else{Q=N;R=N}}else{Q=0;R=y}jp(R,z,A,c[g+4>>2]|0,H,H+(I<<2)|0,C,K,r,c[s>>2]|0,c[t>>2]|0,u,v,w,f);c[B>>2]=c[e>>2];e=c[z>>2]|0;z=c[A>>2]|0;c[m+0>>2]=c[B+0>>2];dn(b,m,R,e,z,g,j);if((Q|0)!=0){ss(Q)}jk(w);jk(v);Zj(u);Aj(c[q>>2]|0)|0;if((F|0)!=0){ss(F)}if((G|0)==0){i=d;return}ss(G);i=d;return}function ip(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;n=i;i=i+128|0;o=n;p=n+108|0;q=n+96|0;r=n+92|0;s=n+80|0;t=n+68|0;u=n+112|0;v=n+40|0;w=n+28|0;x=n+24|0;y=n+12|0;z=n+44|0;A=n+56|0;B=c[e>>2]|0;if(b){if(!((c[3158]|0)==-1)){c[o>>2]=12632;c[o+4>>2]=161;c[o+8>>2]=0;Uj(12632,o,162)}b=(c[12636>>2]|0)+ -1|0;e=c[B+8>>2]|0;if(!((c[B+12>>2]|0)-e>>2>>>0>b>>>0)){C=fc(4)|0;Yr(C);td(C|0,21024,137)}D=c[e+(b<<2)>>2]|0;if((D|0)==0){C=fc(4)|0;Yr(C);td(C|0,21024,137)}C=c[D>>2]|0;if(d){Ed[c[C+44>>2]&63](p,D);b=c[p>>2]|0;a[f]=b;a[f+1|0]=b>>8;a[f+2|0]=b>>16;a[f+3|0]=b>>24;Ed[c[(c[D>>2]|0)+32>>2]&63](q,D);if((a[l]&1)==0){c[l+4>>2]=0;a[l]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}mk(l,0);c[l+0>>2]=c[q+0>>2];c[l+4>>2]=c[q+4>>2];c[l+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;jk(q)}else{Ed[c[C+40>>2]&63](r,D);C=c[r>>2]|0;a[f]=C;a[f+1|0]=C>>8;a[f+2|0]=C>>16;a[f+3|0]=C>>24;Ed[c[(c[D>>2]|0)+28>>2]&63](s,D);if((a[l]&1)==0){c[l+4>>2]=0;a[l]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}mk(l,0);c[l+0>>2]=c[s+0>>2];c[l+4>>2]=c[s+4>>2];c[l+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;jk(s)}c[g>>2]=Fd[c[(c[D>>2]|0)+12>>2]&127](D)|0;c[h>>2]=Fd[c[(c[D>>2]|0)+16>>2]&127](D)|0;Ed[c[(c[D>>2]|0)+20>>2]&63](t,D);if((a[j]&1)==0){a[j+1|0]=0;a[j]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}ck(j,0);c[j+0>>2]=c[t+0>>2];c[j+4>>2]=c[t+4>>2];c[j+8>>2]=c[t+8>>2];c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;Zj(t);Ed[c[(c[D>>2]|0)+24>>2]&63](u,D);if((a[k]&1)==0){c[k+4>>2]=0;a[k]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}mk(k,0);c[k+0>>2]=c[u+0>>2];c[k+4>>2]=c[u+4>>2];c[k+8>>2]=c[u+8>>2];c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;jk(u);E=Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0;c[m>>2]=E;i=n;return}else{if(!((c[3142]|0)==-1)){c[o>>2]=12568;c[o+4>>2]=161;c[o+8>>2]=0;Uj(12568,o,162)}o=(c[12572>>2]|0)+ -1|0;D=c[B+8>>2]|0;if(!((c[B+12>>2]|0)-D>>2>>>0>o>>>0)){F=fc(4)|0;Yr(F);td(F|0,21024,137)}B=c[D+(o<<2)>>2]|0;if((B|0)==0){F=fc(4)|0;Yr(F);td(F|0,21024,137)}F=c[B>>2]|0;if(d){Ed[c[F+44>>2]&63](v,B);d=c[v>>2]|0;a[f]=d;a[f+1|0]=d>>8;a[f+2|0]=d>>16;a[f+3|0]=d>>24;Ed[c[(c[B>>2]|0)+32>>2]&63](w,B);if((a[l]&1)==0){c[l+4>>2]=0;a[l]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}mk(l,0);c[l+0>>2]=c[w+0>>2];c[l+4>>2]=c[w+4>>2];c[l+8>>2]=c[w+8>>2];c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;jk(w)}else{Ed[c[F+40>>2]&63](x,B);F=c[x>>2]|0;a[f]=F;a[f+1|0]=F>>8;a[f+2|0]=F>>16;a[f+3|0]=F>>24;Ed[c[(c[B>>2]|0)+28>>2]&63](y,B);if((a[l]&1)==0){c[l+4>>2]=0;a[l]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}mk(l,0);c[l+0>>2]=c[y+0>>2];c[l+4>>2]=c[y+4>>2];c[l+8>>2]=c[y+8>>2];c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;jk(y)}c[g>>2]=Fd[c[(c[B>>2]|0)+12>>2]&127](B)|0;c[h>>2]=Fd[c[(c[B>>2]|0)+16>>2]&127](B)|0;Ed[c[(c[B>>2]|0)+20>>2]&63](z,B);if((a[j]&1)==0){a[j+1|0]=0;a[j]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}ck(j,0);c[j+0>>2]=c[z+0>>2];c[j+4>>2]=c[z+4>>2];c[j+8>>2]=c[z+8>>2];c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;Zj(z);Ed[c[(c[B>>2]|0)+24>>2]&63](A,B);if((a[k]&1)==0){c[k+4>>2]=0;a[k]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}mk(k,0);c[k+0>>2]=c[A+0>>2];c[k+4>>2]=c[A+4>>2];c[k+8>>2]=c[A+8>>2];c[A+0>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;jk(A);E=Fd[c[(c[B>>2]|0)+36>>2]&127](B)|0;c[m>>2]=E;i=n;return}}function jp(b,d,e,f,g,h,j,k,l,m,n,o,p,q,r){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0;s=i;c[e>>2]=b;t=q+4|0;u=q+8|0;v=(f&512|0)==0;w=p+4|0;x=p+8|0;y=(r|0)>0;z=o+1|0;A=o+8|0;B=o+4|0;C=g;g=0;while(1){switch(a[l+g|0]|0){case 1:{c[d>>2]=c[e>>2];D=Sd[c[(c[j>>2]|0)+44>>2]&31](j,32)|0;E=c[e>>2]|0;c[e>>2]=E+4;c[E>>2]=D;F=C;break};case 3:{D=a[q]|0;E=(D&1)==0;if(E){G=(D&255)>>>1}else{G=c[t>>2]|0}if((G|0)==0){F=C}else{if(E){H=t}else{H=c[u>>2]|0}E=c[H>>2]|0;D=c[e>>2]|0;c[e>>2]=D+4;c[D>>2]=E;F=C}break};case 0:{c[d>>2]=c[e>>2];F=C;break};case 2:{E=a[p]|0;D=(E&1)==0;if(D){I=(E&255)>>>1}else{I=c[w>>2]|0}if((I|0)==0|v){F=C}else{if(D){J=w;K=(E&255)>>>1}else{J=c[x>>2]|0;K=c[w>>2]|0}E=J+(K<<2)|0;D=c[e>>2]|0;if((J|0)==(E|0)){L=D}else{M=(J+(K+ -1<<2)+(0-J)|0)>>>2;N=D;O=J;while(1){c[N>>2]=c[O>>2];P=O+4|0;if((P|0)==(E|0)){break}N=N+4|0;O=P}L=D+(M+1<<2)|0}c[e>>2]=L;F=C}break};case 4:{O=c[e>>2]|0;N=k?C+4|0:C;a:do{if(N>>>0<h>>>0){E=N;while(1){P=E+4|0;if(!(Kd[c[(c[j>>2]|0)+12>>2]&31](j,2048,c[E>>2]|0)|0)){Q=E;break a}if(P>>>0<h>>>0){E=P}else{Q=P;break}}}else{Q=N}}while(0);if(y){if(Q>>>0>N>>>0){M=c[e>>2]|0;D=Q;E=r;while(1){R=D+ -4|0;S=M+4|0;c[M>>2]=c[R>>2];T=E+ -1|0;U=(T|0)>0;if(R>>>0>N>>>0&U){M=S;D=R;E=T}else{break}}c[e>>2]=S;if(U){V=R;W=T;X=34}else{E=c[e>>2]|0;c[e>>2]=E+4;Y=E;Z=R}}else{V=Q;W=r;X=34}if((X|0)==34){X=0;E=Sd[c[(c[j>>2]|0)+44>>2]&31](j,48)|0;D=c[e>>2]|0;M=D+4|0;c[e>>2]=M;if((W|0)>0){P=D;_=M;M=W;while(1){c[P>>2]=E;M=M+ -1|0;if((M|0)<=0){break}else{$=_;_=_+4|0;P=$}}c[e>>2]=D+(W+1<<2);Y=D+(W<<2)|0;Z=V}else{Y=D;Z=V}}c[Y>>2]=m;aa=Z}else{aa=Q}if((aa|0)==(N|0)){P=Sd[c[(c[j>>2]|0)+44>>2]&31](j,48)|0;_=c[e>>2]|0;M=_+4|0;c[e>>2]=M;c[_>>2]=P;ba=M}else{M=a[o]|0;P=(M&1)==0;if(P){ca=(M&255)>>>1}else{ca=c[B>>2]|0}if((ca|0)==0){da=aa;ea=-1;fa=0;ga=0}else{if(P){ha=z}else{ha=c[A>>2]|0}da=aa;ea=a[ha]|0;fa=0;ga=0}while(1){P=c[e>>2]|0;if((ga|0)==(ea|0)){M=P+4|0;c[e>>2]=M;c[P>>2]=n;_=fa+1|0;E=a[o]|0;$=(E&1)==0;if($){ia=(E&255)>>>1}else{ia=c[B>>2]|0}if(_>>>0<ia>>>0){if($){ja=z}else{ja=c[A>>2]|0}if((a[ja+_|0]|0)==127){ka=M;la=-1;ma=_;na=0}else{if($){oa=z}else{oa=c[A>>2]|0}ka=M;la=a[oa+_|0]|0;ma=_;na=0}}else{ka=M;la=ea;ma=_;na=0}}else{ka=P;la=ea;ma=fa;na=ga}P=da+ -4|0;_=c[P>>2]|0;M=ka+4|0;c[e>>2]=M;c[ka>>2]=_;if((P|0)==(N|0)){ba=M;break}else{da=P;ea=la;fa=ma;ga=na+1|0}}}if((O|0)!=(ba|0)?(D=ba+ -4|0,D>>>0>O>>>0):0){P=O;M=D;while(1){D=c[P>>2]|0;c[P>>2]=c[M>>2];c[M>>2]=D;D=P+4|0;_=M+ -4|0;if(D>>>0<_>>>0){P=D;M=_}else{F=N;break}}}else{F=N}break};default:{F=C}}g=g+1|0;if((g|0)==4){break}else{C=F}}F=a[q]|0;q=(F&1)==0;if(q){pa=(F&255)>>>1}else{pa=c[t>>2]|0}if(pa>>>0>1){if(q){qa=t;ra=(F&255)>>>1}else{qa=c[u>>2]|0;ra=c[t>>2]|0}t=qa+4|0;u=qa+(ra<<2)|0;F=c[e>>2]|0;if((t|0)==(u|0)){sa=F}else{q=(qa+(ra+ -1<<2)+(0-t)|0)>>>2;ra=F;qa=t;while(1){c[ra>>2]=c[qa>>2];qa=qa+4|0;if((qa|0)==(u|0)){break}else{ra=ra+4|0}}sa=F+(q+1<<2)|0}c[e>>2]=sa}sa=f&176;if((sa|0)==32){c[d>>2]=c[e>>2];i=s;return}else if((sa|0)==16){i=s;return}else{c[d>>2]=b;i=s;return}}function kp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;d=i;i=i+480|0;k=d;l=d+464|0;m=d+460|0;n=d+456|0;o=d+452|0;p=d+440|0;q=d+468|0;r=d+420|0;s=d+416|0;t=d+16|0;u=d+12|0;v=d+432|0;w=d+436|0;sk(l,g);x=c[l>>2]|0;if(!((c[3264]|0)==-1)){c[k>>2]=13056;c[k+4>>2]=161;c[k+8>>2]=0;Uj(13056,k,162)}y=(c[13060>>2]|0)+ -1|0;z=c[x+8>>2]|0;if(!((c[x+12>>2]|0)-z>>2>>>0>y>>>0)){A=fc(4)|0;Yr(A);td(A|0,21024,137)}x=c[z+(y<<2)>>2]|0;if((x|0)==0){A=fc(4)|0;Yr(A);td(A|0,21024,137)}A=a[j]|0;y=(A&1)==0;if(y){B=(A&255)>>>1}else{B=c[j+4>>2]|0}if((B|0)==0){C=0}else{if(y){D=j+4|0}else{D=c[j+8>>2]|0}y=c[D>>2]|0;C=(y|0)==(Sd[c[(c[x>>2]|0)+44>>2]&31](x,45)|0)}c[m>>2]=0;c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;ip(f,C,l,m,n,o,p,q,r,s);f=a[j]|0;y=(f&1)==0;if(y){E=(f&255)>>>1}else{E=c[j+4>>2]|0}D=c[s>>2]|0;if((E|0)>(D|0)){if(y){F=(f&255)>>>1}else{F=c[j+4>>2]|0}y=a[r]|0;if((y&1)==0){G=(y&255)>>>1}else{G=c[r+4>>2]|0}y=a[q]|0;if((y&1)==0){H=(y&255)>>>1}else{H=c[q+4>>2]|0}I=G+(F-D<<1|1)+H|0}else{H=a[r]|0;if((H&1)==0){J=(H&255)>>>1}else{J=c[r+4>>2]|0}H=a[q]|0;if((H&1)==0){K=(H&255)>>>1}else{K=c[q+4>>2]|0}I=J+2+K|0}K=I+D|0;if(K>>>0>100){I=rs(K<<2)|0;if((I|0)==0){Ds()}else{L=I;M=I}}else{L=0;M=t}if((f&1)==0){N=j+4|0;O=(f&255)>>>1}else{N=c[j+8>>2]|0;O=c[j+4>>2]|0}jp(M,u,v,c[g+4>>2]|0,N,N+(O<<2)|0,x,C,m,c[n>>2]|0,c[o>>2]|0,p,q,r,D);c[w>>2]=c[e>>2];e=c[u>>2]|0;u=c[v>>2]|0;c[k+0>>2]=c[w+0>>2];dn(b,k,M,e,u,g,h);if((L|0)==0){jk(r);jk(q);Zj(p);P=c[l>>2]|0;Aj(P)|0;i=d;return}ss(L);jk(r);jk(q);Zj(p);P=c[l>>2]|0;Aj(P)|0;i=d;return}function lp(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function mp(a){a=a|0;return}function np(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;e=i;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=_b(f|0,1)|0;i=e;return d>>>((d|0)!=(-1|0)|0)|0}function op(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+16|0;j=d;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;k=a[h]|0;if((k&1)==0){l=h+1|0;m=(k&255)>>>1;n=h+1|0}else{k=c[h+8>>2]|0;l=k;m=c[h+4>>2]|0;n=k}k=l+m|0;if(n>>>0<k>>>0){m=n;do{dk(j,a[m]|0);m=m+1|0}while((m|0)!=(k|0));k=(e|0)==-1?-1:e<<1;if((a[j]&1)==0){o=k;p=9}else{q=k;r=c[j+8>>2]|0}}else{o=(e|0)==-1?-1:e<<1;p=9}if((p|0)==9){q=o;r=j+1|0}o=Va(q|0,f|0,g|0,r|0)|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;r=Ws(o|0)|0;g=o+r|0;if((r|0)>0){s=o}else{Zj(j);i=d;return}do{dk(b,a[s]|0);s=s+1|0}while((s|0)!=(g|0));Zj(j);i=d;return}function pp(a,b){a=a|0;b=b|0;a=i;rb(((b|0)==-1?-1:b<<1)|0)|0;i=a;return}function qp(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function rp(a){a=a|0;return}function sp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;e=i;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=_b(f|0,1)|0;i=e;return d>>>((d|0)!=(-1|0)|0)|0}function tp(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;d=i;i=i+176|0;j=d;k=d+48|0;l=d+8|0;m=d+12|0;n=d+16|0;o=d+32|0;p=d+40|0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[o+4>>2]=0;c[o>>2]=14720;q=a[h]|0;if((q&1)==0){r=h+4|0;s=(q&255)>>>1;t=h+4|0}else{q=c[h+8>>2]|0;r=q;s=c[h+4>>2]|0;t=q}q=r+(s<<2)|0;s=j;c[s>>2]=0;c[s+4>>2]=0;a:do{if(t>>>0<q>>>0){s=k+32|0;r=t;h=14720|0;while(1){c[m>>2]=r;u=(Wd[c[h+12>>2]&15](o,j,r,q,m,k,s,l)|0)==2;v=c[m>>2]|0;if(u|(v|0)==(r|0)){break}if(k>>>0<(c[l>>2]|0)>>>0){u=k;do{dk(n,a[u]|0);u=u+1|0}while(u>>>0<(c[l>>2]|0)>>>0);w=c[m>>2]|0}else{w=v}if(!(w>>>0<q>>>0)){break a}r=w;h=c[o>>2]|0}Po(13944)}}while(0);if((a[n]&1)==0){x=n+1|0}else{x=c[n+8>>2]|0}o=Va(((e|0)==-1?-1:e<<1)|0,f|0,g|0,x|0)|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[p+4>>2]=0;c[p>>2]=14824;x=Ws(o|0)|0;g=o+x|0;f=j;c[f>>2]=0;c[f+4>>2]=0;if((x|0)<=0){Zj(n);i=d;return}x=g;f=k+128|0;e=o;o=14824|0;while(1){c[m>>2]=e;w=(Wd[c[o+16>>2]&15](p,j,e,(x-e|0)>32?e+32|0:g,m,k,f,l)|0)==2;q=c[m>>2]|0;if(w|(q|0)==(e|0)){y=20;break}if(k>>>0<(c[l>>2]|0)>>>0){w=k;do{nk(b,c[w>>2]|0);w=w+4|0}while(w>>>0<(c[l>>2]|0)>>>0);z=c[m>>2]|0}else{z=q}if(!(z>>>0<g>>>0)){y=25;break}e=z;o=c[p>>2]|0}if((y|0)==20){Po(13944)}else if((y|0)==25){Zj(n);i=d;return}}function up(a,b){a=a|0;b=b|0;a=i;rb(((b|0)==-1?-1:b<<1)|0)|0;i=a;return}function vp(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=13152;e=b+8|0;b=c[e>>2]|0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}if((b|0)==(c[3238]|0)){i=d;return}Jb(c[e>>2]|0);i=d;return}function wp(a){a=a|0;a=fc(8)|0;Bj(a,12944);c[a>>2]=9912;td(a|0,9952,49)}function xp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+16|0;f=e;c[b+4>>2]=d+ -1;c[b>>2]=12984;d=b+8|0;g=b+12|0;h=b+136|0;j=b+24|0;a[h]=1;c[g>>2]=j;c[d>>2]=j;c[b+16>>2]=h;h=28;k=j;do{if((k|0)==0){l=0}else{c[k>>2]=0;l=c[g>>2]|0}k=l+4|0;c[g>>2]=k;h=h+ -1|0}while((h|0)!=0);Xj(b+144|0,12968,1);h=c[d>>2]|0;d=c[g>>2]|0;if((d|0)!=(h|0)){c[g>>2]=d+(~((d+ -4+(0-h)|0)>>>2)<<2)}c[17876>>2]=0;c[4468]=11464;if(!((c[2872]|0)==-1)){c[f>>2]=11488;c[f+4>>2]=161;c[f+8>>2]=0;Uj(11488,f,162)}yp(b,17872,(c[11492>>2]|0)+ -1|0);c[17868>>2]=0;c[4466]=11504;if(!((c[2882]|0)==-1)){c[f>>2]=11528;c[f+4>>2]=161;c[f+8>>2]=0;Uj(11528,f,162)}yp(b,17864,(c[11532>>2]|0)+ -1|0);c[17852>>2]=0;c[4462]=13080;c[17856>>2]=0;a[17860|0]=0;c[17856>>2]=c[(bc()|0)>>2];if(!((c[3266]|0)==-1)){c[f>>2]=13064;c[f+4>>2]=161;c[f+8>>2]=0;Uj(13064,f,162)}yp(b,17848,(c[13068>>2]|0)+ -1|0);c[17844>>2]=0;c[4460]=14040;if(!((c[3264]|0)==-1)){c[f>>2]=13056;c[f+4>>2]=161;c[f+8>>2]=0;Uj(13056,f,162)}yp(b,17840,(c[13060>>2]|0)+ -1|0);c[17836>>2]=0;c[4458]=14256;if(!((c[3282]|0)==-1)){c[f>>2]=13128;c[f+4>>2]=161;c[f+8>>2]=0;Uj(13128,f,162)}yp(b,17832,(c[13132>>2]|0)+ -1|0);c[17820>>2]=0;c[4454]=13152;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}c[17824>>2]=c[3238];if(!((c[3284]|0)==-1)){c[f>>2]=13136;c[f+4>>2]=161;c[f+8>>2]=0;Uj(13136,f,162)}yp(b,17816,(c[13140>>2]|0)+ -1|0);c[17812>>2]=0;c[4452]=14480;if(!((c[3298]|0)==-1)){c[f>>2]=13192;c[f+4>>2]=161;c[f+8>>2]=0;Uj(13192,f,162)}yp(b,17808,(c[13196>>2]|0)+ -1|0);c[17804>>2]=0;c[4450]=14600;if(!((c[3300]|0)==-1)){c[f>>2]=13200;c[f+4>>2]=161;c[f+8>>2]=0;Uj(13200,f,162)}yp(b,17800,(c[13204>>2]|0)+ -1|0);c[17780>>2]=0;c[4444]=13232;a[17784|0]=46;a[17785|0]=44;c[17788>>2]=0;c[17792>>2]=0;c[17796>>2]=0;if(!((c[3302]|0)==-1)){c[f>>2]=13208;c[f+4>>2]=161;c[f+8>>2]=0;Uj(13208,f,162)}yp(b,17776,(c[13212>>2]|0)+ -1|0);c[17748>>2]=0;c[4436]=13272;c[17752>>2]=46;c[17756>>2]=44;c[17760>>2]=0;c[17764>>2]=0;c[17768>>2]=0;if(!((c[3304]|0)==-1)){c[f>>2]=13216;c[f+4>>2]=161;c[f+8>>2]=0;Uj(13216,f,162)}yp(b,17744,(c[13220>>2]|0)+ -1|0);c[17740>>2]=0;c[4434]=11544;if(!((c[2900]|0)==-1)){c[f>>2]=11600;c[f+4>>2]=161;c[f+8>>2]=0;Uj(11600,f,162)}yp(b,17736,(c[11604>>2]|0)+ -1|0);c[17732>>2]=0;c[4432]=11664;if(!((c[2930]|0)==-1)){c[f>>2]=11720;c[f+4>>2]=161;c[f+8>>2]=0;Uj(11720,f,162)}yp(b,17728,(c[11724>>2]|0)+ -1|0);c[17724>>2]=0;c[4430]=11736;if(!((c[2946]|0)==-1)){c[f>>2]=11784;c[f+4>>2]=161;c[f+8>>2]=0;Uj(11784,f,162)}yp(b,17720,(c[11788>>2]|0)+ -1|0);c[17716>>2]=0;c[4428]=11800;if(!((c[2962]|0)==-1)){c[f>>2]=11848;c[f+4>>2]=161;c[f+8>>2]=0;Uj(11848,f,162)}yp(b,17712,(c[11852>>2]|0)+ -1|0);c[17708>>2]=0;c[4426]=12392;if(!((c[3110]|0)==-1)){c[f>>2]=12440;c[f+4>>2]=161;c[f+8>>2]=0;Uj(12440,f,162)}yp(b,17704,(c[12444>>2]|0)+ -1|0);c[17700>>2]=0;c[4424]=12456;if(!((c[3126]|0)==-1)){c[f>>2]=12504;c[f+4>>2]=161;c[f+8>>2]=0;Uj(12504,f,162)}yp(b,17696,(c[12508>>2]|0)+ -1|0);c[17692>>2]=0;c[4422]=12520;if(!((c[3142]|0)==-1)){c[f>>2]=12568;c[f+4>>2]=161;c[f+8>>2]=0;Uj(12568,f,162)}yp(b,17688,(c[12572>>2]|0)+ -1|0);c[17684>>2]=0;c[4420]=12584;if(!((c[3158]|0)==-1)){c[f>>2]=12632;c[f+4>>2]=161;c[f+8>>2]=0;Uj(12632,f,162)}yp(b,17680,(c[12636>>2]|0)+ -1|0);c[17676>>2]=0;c[4418]=12648;if(!((c[3168]|0)==-1)){c[f>>2]=12672;c[f+4>>2]=161;c[f+8>>2]=0;Uj(12672,f,162)}yp(b,17672,(c[12676>>2]|0)+ -1|0);c[17668>>2]=0;c[4416]=12728;if(!((c[3188]|0)==-1)){c[f>>2]=12752;c[f+4>>2]=161;c[f+8>>2]=0;Uj(12752,f,162)}yp(b,17664,(c[12756>>2]|0)+ -1|0);c[17660>>2]=0;c[4414]=12784;if(!((c[3202]|0)==-1)){c[f>>2]=12808;c[f+4>>2]=161;c[f+8>>2]=0;Uj(12808,f,162)}yp(b,17656,(c[12812>>2]|0)+ -1|0);c[17652>>2]=0;c[4412]=12832;if(!((c[3214]|0)==-1)){c[f>>2]=12856;c[f+4>>2]=161;c[f+8>>2]=0;Uj(12856,f,162)}yp(b,17648,(c[12860>>2]|0)+ -1|0);c[17636>>2]=0;c[4408]=11880;c[17640>>2]=11928;if(!((c[2990]|0)==-1)){c[f>>2]=11960;c[f+4>>2]=161;c[f+8>>2]=0;Uj(11960,f,162)}yp(b,17632,(c[11964>>2]|0)+ -1|0);c[17620>>2]=0;c[4404]=12032;c[17624>>2]=12080;if(!((c[3028]|0)==-1)){c[f>>2]=12112;c[f+4>>2]=161;c[f+8>>2]=0;Uj(12112,f,162)}yp(b,17616,(c[12116>>2]|0)+ -1|0);c[17604>>2]=0;c[4400]=13976;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}c[17608>>2]=c[3238];c[4400]=12328;if(!((c[3086]|0)==-1)){c[f>>2]=12344;c[f+4>>2]=161;c[f+8>>2]=0;Uj(12344,f,162)}yp(b,17600,(c[12348>>2]|0)+ -1|0);c[17588>>2]=0;c[4396]=13976;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}c[17592>>2]=c[3238];c[4396]=12360;if(!((c[3094]|0)==-1)){c[f>>2]=12376;c[f+4>>2]=161;c[f+8>>2]=0;Uj(12376,f,162)}yp(b,17584,(c[12380>>2]|0)+ -1|0);c[17580>>2]=0;c[4394]=12872;if(!((c[3224]|0)==-1)){c[f>>2]=12896;c[f+4>>2]=161;c[f+8>>2]=0;Uj(12896,f,162)}yp(b,17576,(c[12900>>2]|0)+ -1|0);c[17572>>2]=0;c[4392]=12912;if((c[3234]|0)==-1){m=c[12940>>2]|0;n=m+ -1|0;yp(b,17568,n);i=e;return}c[f>>2]=12936;c[f+4>>2]=161;c[f+8>>2]=0;Uj(12936,f,162);m=c[12940>>2]|0;n=m+ -1|0;yp(b,17568,n);i=e;return}function yp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;zj(b);f=a+8|0;g=a+12|0;a=c[g>>2]|0;h=c[f>>2]|0;j=a-h>>2;do{if(!(j>>>0>d>>>0)){k=d+1|0;if(j>>>0<k>>>0){Cr(f,k-j|0);l=c[f>>2]|0;break}if(j>>>0>k>>>0?(m=h+(k<<2)|0,(a|0)!=(m|0)):0){c[g>>2]=a+(~((a+ -4+(0-m)|0)>>>2)<<2);l=h}else{l=h}}else{l=h}}while(0);h=c[l+(d<<2)>>2]|0;if((h|0)==0){n=l;o=n+(d<<2)|0;c[o>>2]=b;i=e;return}Aj(h)|0;n=c[f>>2]|0;o=n+(d<<2)|0;c[o>>2]=b;i=e;return}function zp(a){a=a|0;var b=0;b=i;Ap(a);ys(a);i=b;return}function Ap(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;c[b>>2]=12984;e=b+12|0;f=c[e>>2]|0;g=b+8|0;h=c[g>>2]|0;if((f|0)!=(h|0)){j=f;f=h;h=0;while(1){k=c[f+(h<<2)>>2]|0;if((k|0)==0){l=j;m=f}else{Aj(k)|0;l=c[e>>2]|0;m=c[g>>2]|0}h=h+1|0;if(!(h>>>0<l-m>>2>>>0)){break}else{j=l;f=m}}}Zj(b+144|0);m=c[g>>2]|0;if((m|0)==0){i=d;return}g=c[e>>2]|0;if((g|0)!=(m|0)){c[e>>2]=g+(~((g+ -4+(0-m)|0)>>>2)<<2)}if((b+24|0)==(m|0)){a[b+136|0]=0;i=d;return}else{ys(m);i=d;return}}function Bp(){var b=0,d=0,e=0;b=i;if((a[13040]|0)!=0){d=c[3258]|0;i=b;return d|0}if((Na(13040)|0)==0){d=c[3258]|0;i=b;return d|0}if((a[13016]|0)==0?(Na(13016)|0)!=0:0){xp(17408,1);c[3250]=17408;c[3252]=13e3;Bb(13016)}e=c[c[3252]>>2]|0;c[3256]=e;zj(e);c[3258]=13024;Bb(13040);d=c[3258]|0;i=b;return d|0}function Cp(a){a=a|0;var b=0,d=0;b=i;d=c[(Bp()|0)>>2]|0;c[a>>2]=d;zj(d);i=b;return}function Dp(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=c[b>>2]|0;c[a>>2]=e;zj(e);i=d;return}function Ep(a){a=a|0;var b=0;b=i;Aj(c[a>>2]|0)|0;i=b;return}function Fp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;f=c[a>>2]|0;if(!((c[b>>2]|0)==-1)){c[e>>2]=b;c[e+4>>2]=161;c[e+8>>2]=0;Uj(b,e,162)}e=(c[b+4>>2]|0)+ -1|0;b=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-b>>2>>>0>e>>>0)){g=fc(4)|0;Yr(g);td(g|0,21024,137)}f=c[b+(e<<2)>>2]|0;if((f|0)==0){g=fc(4)|0;Yr(g);td(g|0,21024,137)}else{i=d;return f|0}return 0}function Gp(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Hp(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Dd[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Ip(a){a=a|0;var b=0;b=c[3262]|0;c[3262]=b+1;c[a+4>>2]=b+1;return}function Jp(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Kp(a,d,e){a=a|0;d=d|0;e=e|0;var f=0;a=i;if(!(e>>>0<128)){f=0;i=a;return f|0}f=(b[(c[(bc()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0;i=a;return f|0}function Lp(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;a=i;if((d|0)==(e|0)){g=d;i=a;return g|0}else{h=d;j=f}while(1){f=c[h>>2]|0;if(f>>>0<128){k=b[(c[(bc()|0)>>2]|0)+(f<<1)>>1]|0}else{k=0}b[j>>1]=k;f=h+4|0;if((f|0)==(e|0)){g=e;break}else{h=f;j=j+2|0}}i=a;return g|0}function Mp(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;a=i;a:do{if((e|0)==(f|0)){g=e}else{h=e;while(1){j=c[h>>2]|0;if(j>>>0<128?!((b[(c[(bc()|0)>>2]|0)+(j<<1)>>1]&d)<<16>>16==0):0){g=h;break a}j=h+4|0;if((j|0)==(f|0)){g=f;break}else{h=j}}}}while(0);i=a;return g|0}function Np(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;a=i;a:do{if((e|0)==(f|0)){g=e}else{h=e;while(1){j=c[h>>2]|0;if(!(j>>>0<128)){g=h;break a}k=h+4|0;if((b[(c[(bc()|0)>>2]|0)+(j<<1)>>1]&d)<<16>>16==0){g=h;break a}if((k|0)==(f|0)){g=f;break}else{h=k}}}}while(0);i=a;return g|0}function Op(a,b){a=a|0;b=b|0;var d=0;a=i;if(!(b>>>0<128)){d=b;i=a;return d|0}d=c[(c[(Ra()|0)>>2]|0)+(b<<2)>>2]|0;i=a;return d|0}function Pp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;a=i;if((b|0)==(d|0)){e=b;i=a;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128){g=c[(c[(Ra()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}i=a;return e|0}function Qp(a,b){a=a|0;b=b|0;var d=0;a=i;if(!(b>>>0<128)){d=b;i=a;return d|0}d=c[(c[(gd()|0)>>2]|0)+(b<<2)>>2]|0;i=a;return d|0}function Rp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;a=i;if((b|0)==(d|0)){e=b;i=a;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128){g=c[(c[(gd()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}i=a;return e|0}function Sp(a,b){a=a|0;b=b|0;return b<<24>>24|0}function Tp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;b=i;if((d|0)==(e|0)){g=d;i=b;return g|0}else{h=d;j=f}while(1){c[j>>2]=a[h]|0;f=h+1|0;if((f|0)==(e|0)){g=e;break}else{h=f;j=j+4|0}}i=b;return g|0}function Up(a,b,c){a=a|0;b=b|0;c=c|0;return(b>>>0<128?b&255:c)|0}function Vp(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;b=i;if((d|0)==(e|0)){h=d;i=b;return h|0}j=((e+ -4+(0-d)|0)>>>2)+1|0;k=d;l=g;while(1){g=c[k>>2]|0;a[l]=g>>>0<128?g&255:f;k=k+4|0;if((k|0)==(e|0)){break}else{l=l+1|0}}h=d+(j<<2)|0;i=b;return h|0}function Wp(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=13080;e=c[b+8>>2]|0;if((e|0)!=0?(a[b+12|0]|0)!=0:0){zs(e)}ys(b);i=d;return}function Xp(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=13080;e=c[b+8>>2]|0;if((e|0)!=0?(a[b+12|0]|0)!=0:0){zs(e)}i=d;return}function Yp(a,b){a=a|0;b=b|0;var d=0;a=i;if(!(b<<24>>24>-1)){d=b;i=a;return d|0}d=c[(c[(Ra()|0)>>2]|0)+((b&255)<<2)>>2]&255;i=a;return d|0}function Zp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;b=i;if((d|0)==(e|0)){f=d;i=b;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24>-1){h=c[(c[(Ra()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}else{h=d}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}i=b;return f|0}function _p(a,b){a=a|0;b=b|0;var d=0;a=i;if(!(b<<24>>24>-1)){d=b;i=a;return d|0}d=c[(c[(gd()|0)>>2]|0)+(b<<24>>24<<2)>>2]&255;i=a;return d|0}function $p(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;b=i;if((d|0)==(e|0)){f=d;i=b;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24>-1){h=c[(c[(gd()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}else{h=d}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}i=b;return f|0}function aq(a,b){a=a|0;b=b|0;return b|0}function bq(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;b=i;if((c|0)==(d|0)){f=c}else{g=c;c=e;while(1){a[c]=a[g]|0;e=g+1|0;if((e|0)==(d|0)){f=d;break}else{g=e;c=c+1|0}}}i=b;return f|0}function cq(a,b,c){a=a|0;b=b|0;c=c|0;return(b<<24>>24>-1?b:c)|0}function dq(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;b=i;if((c|0)==(d|0)){g=c;i=b;return g|0}else{h=c;j=f}while(1){f=a[h]|0;a[j]=f<<24>>24>-1?f:e;f=h+1|0;if((f|0)==(d|0)){g=d;break}else{h=f;j=j+1|0}}i=b;return g|0}function eq(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function fq(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function gq(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function hq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function iq(a){a=a|0;return 1}function jq(a){a=a|0;return 1}function kq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return(b>>>0<e>>>0?b:e)|0}function lq(a){a=a|0;return 1}function mq(a){a=a|0;var b=0;b=i;vp(a);ys(a);i=b;return}function nq(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;l=i;i=i+16|0;m=l;n=l+8|0;o=(e|0)==(f|0);a:do{if(!o){p=e;while(1){q=p+4|0;if((c[p>>2]|0)==0){r=p;break}if((q|0)==(f|0)){r=f;break}else{p=q}}c[k>>2]=h;c[g>>2]=e;if(!(o|(h|0)==(j|0))){p=j;q=b+8|0;s=e;t=h;u=r;while(1){v=d;w=c[v+4>>2]|0;x=m;c[x>>2]=c[v>>2];c[x+4>>2]=w;w=lc(c[q>>2]|0)|0;x=Pr(t,g,u-s>>2,p-t|0,d)|0;if((w|0)!=0){lc(w|0)|0}if((x|0)==-1){y=10;break}else if((x|0)==0){z=1;y=33;break}w=(c[k>>2]|0)+x|0;c[k>>2]=w;if((w|0)==(j|0)){y=31;break}if((u|0)==(f|0)){A=c[g>>2]|0;B=w;C=f}else{w=lc(c[q>>2]|0)|0;x=Or(n,0,d)|0;if((w|0)!=0){lc(w|0)|0}if((x|0)==-1){z=2;y=33;break}w=c[k>>2]|0;if(x>>>0>(p-w|0)>>>0){z=1;y=33;break}b:do{if((x|0)!=0){v=w;D=x;E=n;while(1){F=a[E]|0;c[k>>2]=v+1;a[v]=F;F=D+ -1|0;if((F|0)==0){break b}v=c[k>>2]|0;D=F;E=E+1|0}}}while(0);x=(c[g>>2]|0)+4|0;c[g>>2]=x;c:do{if((x|0)==(f|0)){G=f}else{w=x;while(1){E=w+4|0;if((c[w>>2]|0)==0){G=w;break c}if((E|0)==(f|0)){G=f;break}else{w=E}}}}while(0);A=x;B=c[k>>2]|0;C=G}if((A|0)==(f|0)|(B|0)==(j|0)){H=A;break a}else{s=A;t=B;u=C}}if((y|0)==10){c[k>>2]=t;d:do{if((s|0)==(c[g>>2]|0)){I=s}else{u=s;p=t;while(1){w=c[u>>2]|0;E=lc(c[q>>2]|0)|0;D=Or(p,w,m)|0;if((E|0)!=0){lc(E|0)|0}if((D|0)==-1){I=u;break d}E=(c[k>>2]|0)+D|0;c[k>>2]=E;D=u+4|0;if((D|0)==(c[g>>2]|0)){I=D;break}else{u=D;p=E}}}}while(0);c[g>>2]=I;z=2;i=l;return z|0}else if((y|0)==31){H=c[g>>2]|0;break}else if((y|0)==33){i=l;return z|0}}else{H=e}}else{c[k>>2]=h;c[g>>2]=e;H=e}}while(0);z=(H|0)!=(f|0)|0;i=l;return z|0}function oq(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;l=i;i=i+16|0;m=l;n=(e|0)==(f|0);a:do{if(!n){o=e;while(1){p=o+1|0;if((a[o]|0)==0){q=o;break}if((p|0)==(f|0)){q=f;break}else{o=p}}c[k>>2]=h;c[g>>2]=e;if(!(n|(h|0)==(j|0))){o=j;p=b+8|0;r=e;s=h;t=q;while(1){u=d;v=c[u+4>>2]|0;w=m;c[w>>2]=c[u>>2];c[w+4>>2]=v;x=t;v=lc(c[p>>2]|0)|0;w=Lr(s,g,x-r|0,o-s>>2,d)|0;if((v|0)!=0){lc(v|0)|0}if((w|0)==-1){y=10;break}else if((w|0)==0){z=2;y=32;break}v=(c[k>>2]|0)+(w<<2)|0;c[k>>2]=v;if((v|0)==(j|0)){y=30;break}w=c[g>>2]|0;if((t|0)==(f|0)){A=w;B=v;C=f}else{u=lc(c[p>>2]|0)|0;D=Kr(v,w,1,d)|0;if((u|0)!=0){lc(u|0)|0}if((D|0)!=0){z=2;y=32;break}c[k>>2]=(c[k>>2]|0)+4;D=(c[g>>2]|0)+1|0;c[g>>2]=D;b:do{if((D|0)==(f|0)){E=f}else{u=D;while(1){w=u+1|0;if((a[u]|0)==0){E=u;break b}if((w|0)==(f|0)){E=f;break}else{u=w}}}}while(0);A=D;B=c[k>>2]|0;C=E}if((A|0)==(f|0)|(B|0)==(j|0)){F=A;break a}else{r=A;s=B;t=C}}if((y|0)==10){c[k>>2]=s;c:do{if((r|0)!=(c[g>>2]|0)){t=r;o=s;while(1){u=lc(c[p>>2]|0)|0;w=Kr(o,t,x-t|0,m)|0;if((u|0)!=0){lc(u|0)|0}if((w|0)==0){G=t+1|0}else if((w|0)==-2){y=16;break}else if((w|0)==-1){y=15;break}else{G=t+w|0}w=(c[k>>2]|0)+4|0;c[k>>2]=w;if((G|0)==(c[g>>2]|0)){H=G;break c}else{t=G;o=w}}if((y|0)==15){c[g>>2]=t;z=2;i=l;return z|0}else if((y|0)==16){c[g>>2]=t;z=1;i=l;return z|0}}else{H=r}}while(0);c[g>>2]=H;z=(H|0)!=(f|0)|0;i=l;return z|0}else if((y|0)==30){F=c[g>>2]|0;break}else if((y|0)==32){i=l;return z|0}}else{F=e}}else{c[k>>2]=h;c[g>>2]=e;F=e}}while(0);z=(F|0)!=(f|0)|0;i=l;return z|0}function pq(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+16|0;j=h;c[g>>2]=e;e=lc(c[b+8>>2]|0)|0;b=Or(j,0,d)|0;if((e|0)!=0){lc(e|0)|0}if((b|0)==0|(b|0)==-1){k=2;i=h;return k|0}e=b+ -1|0;b=c[g>>2]|0;if(e>>>0>(f-b|0)>>>0){k=1;i=h;return k|0}if((e|0)==0){k=0;i=h;return k|0}else{l=b;m=e;n=j}while(1){j=a[n]|0;c[g>>2]=l+1;a[l]=j;j=m+ -1|0;if((j|0)==0){k=0;break}l=c[g>>2]|0;m=j;n=n+1|0}i=h;return k|0}function qq(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=a+8|0;a=lc(c[d>>2]|0)|0;e=Nr(0,0,4)|0;if((a|0)!=0){lc(a|0)|0}if((e|0)==0){e=c[d>>2]|0;if((e|0)!=0){d=lc(e|0)|0;if((d|0)==0){f=0}else{lc(d|0)|0;f=0}}else{f=1}}else{f=-1}i=b;return f|0}function rq(a){a=a|0;return 0}function sq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;if((f|0)==0|(d|0)==(e|0)){h=0;i=g;return h|0}j=e;k=a+8|0;a=d;d=0;l=0;while(1){m=lc(c[k>>2]|0)|0;n=Jr(a,j-a|0,b)|0;if((m|0)!=0){lc(m|0)|0}if((n|0)==0){o=a+1|0;p=1}else if((n|0)==-2|(n|0)==-1){h=d;q=9;break}else{o=a+n|0;p=n}n=p+d|0;m=l+1|0;if(m>>>0>=f>>>0|(o|0)==(e|0)){h=n;q=9;break}else{a=o;d=n;l=m}}if((q|0)==9){i=g;return h|0}return 0}function tq(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a+8>>2]|0;if((d|0)!=0){a=lc(d|0)|0;if((a|0)==0){e=4}else{lc(a|0)|0;e=4}}else{e=1}i=b;return e|0}function uq(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function vq(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b+4|0;k=b;c[a>>2]=d;c[k>>2]=g;l=wq(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>1<<1);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function wq(d,f,g,h,j,k,l,m){d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0;n=i;c[g>>2]=d;c[k>>2]=h;do{if((m&2|0)!=0){if((j-h|0)<3){o=1;i=n;return o|0}else{c[k>>2]=h+1;a[h]=-17;d=c[k>>2]|0;c[k>>2]=d+1;a[d]=-69;d=c[k>>2]|0;c[k>>2]=d+1;a[d]=-65;break}}}while(0);h=f;m=c[g>>2]|0;if(!(m>>>0<f>>>0)){o=0;i=n;return o|0}d=j;j=m;a:while(1){m=b[j>>1]|0;p=m&65535;if(p>>>0>l>>>0){o=2;q=26;break}do{if((m&65535)<128){r=c[k>>2]|0;if((d-r|0)<1){o=1;q=26;break a}c[k>>2]=r+1;a[r]=m}else{if((m&65535)<2048){r=c[k>>2]|0;if((d-r|0)<2){o=1;q=26;break a}c[k>>2]=r+1;a[r]=p>>>6|192;r=c[k>>2]|0;c[k>>2]=r+1;a[r]=p&63|128;break}if((m&65535)<55296){r=c[k>>2]|0;if((d-r|0)<3){o=1;q=26;break a}c[k>>2]=r+1;a[r]=p>>>12|224;r=c[k>>2]|0;c[k>>2]=r+1;a[r]=p>>>6&63|128;r=c[k>>2]|0;c[k>>2]=r+1;a[r]=p&63|128;break}if(!((m&65535)<56320)){if((m&65535)<57344){o=2;q=26;break a}r=c[k>>2]|0;if((d-r|0)<3){o=1;q=26;break a}c[k>>2]=r+1;a[r]=p>>>12|224;r=c[k>>2]|0;c[k>>2]=r+1;a[r]=p>>>6&63|128;r=c[k>>2]|0;c[k>>2]=r+1;a[r]=p&63|128;break}if((h-j|0)<4){o=1;q=26;break a}r=j+2|0;s=e[r>>1]|0;if((s&64512|0)!=56320){o=2;q=26;break a}if((d-(c[k>>2]|0)|0)<4){o=1;q=26;break a}t=p&960;if(((t<<10)+65536|p<<10&64512|s&1023)>>>0>l>>>0){o=2;q=26;break a}c[g>>2]=r;r=(t>>>6)+1|0;t=c[k>>2]|0;c[k>>2]=t+1;a[t]=r>>>2|240;t=c[k>>2]|0;c[k>>2]=t+1;a[t]=p>>>2&15|r<<4&48|128;r=c[k>>2]|0;c[k>>2]=r+1;a[r]=p<<4&48|s>>>6&15|128;r=c[k>>2]|0;c[k>>2]=r+1;a[r]=s&63|128}}while(0);p=(c[g>>2]|0)+2|0;c[g>>2]=p;if(p>>>0<f>>>0){j=p}else{o=0;q=26;break}}if((q|0)==26){i=n;return o|0}return 0}function xq(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b+4|0;k=b;c[a>>2]=d;c[k>>2]=g;l=yq(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>1<<1);i=b;return l|0}function yq(e,f,g,h,j,k,l,m){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;n=i;c[g>>2]=e;c[k>>2]=h;h=c[g>>2]|0;if(((((m&4|0)!=0?(f-h|0)>2:0)?(a[h]|0)==-17:0)?(a[h+1|0]|0)==-69:0)?(a[h+2|0]|0)==-65:0){m=h+3|0;c[g>>2]=m;o=m}else{o=h}a:do{if(o>>>0<f>>>0){h=f;m=j;e=c[k>>2]|0;p=o;b:while(1){if(!(e>>>0<j>>>0)){q=p;break a}r=a[p]|0;s=r&255;if(s>>>0>l>>>0){t=2;u=41;break}do{if(r<<24>>24>-1){b[e>>1]=r&255;c[g>>2]=p+1}else{if((r&255)<194){t=2;u=41;break b}if((r&255)<224){if((h-p|0)<2){t=1;u=41;break b}v=d[p+1|0]|0;if((v&192|0)!=128){t=2;u=41;break b}w=v&63|s<<6&1984;if(w>>>0>l>>>0){t=2;u=41;break b}b[e>>1]=w;c[g>>2]=p+2;break}if((r&255)<240){if((h-p|0)<3){t=1;u=41;break b}w=a[p+1|0]|0;v=a[p+2|0]|0;if((s|0)==237){if(!((w&-32)<<24>>24==-128)){t=2;u=41;break b}}else if((s|0)==224){if(!((w&-32)<<24>>24==-96)){t=2;u=41;break b}}else{if(!((w&-64)<<24>>24==-128)){t=2;u=41;break b}}x=v&255;if((x&192|0)!=128){t=2;u=41;break b}v=(w&255)<<6&4032|s<<12|x&63;if((v&65535)>>>0>l>>>0){t=2;u=41;break b}b[e>>1]=v;c[g>>2]=p+3;break}if(!((r&255)<245)){t=2;u=41;break b}if((h-p|0)<4){t=1;u=41;break b}v=a[p+1|0]|0;x=a[p+2|0]|0;w=a[p+3|0]|0;if((s|0)==244){if(!((v&-16)<<24>>24==-128)){t=2;u=41;break b}}else if((s|0)==240){if(!((v+112<<24>>24&255)<48)){t=2;u=41;break b}}else{if(!((v&-64)<<24>>24==-128)){t=2;u=41;break b}}y=x&255;if((y&192|0)!=128){t=2;u=41;break b}x=w&255;if((x&192|0)!=128){t=2;u=41;break b}if((m-e|0)<4){t=1;u=41;break b}w=s&7;z=v&255;v=y<<6;A=x&63;if((z<<12&258048|w<<18|v&4032|A)>>>0>l>>>0){t=2;u=41;break b}b[e>>1]=z<<2&60|y>>>4&3|((z>>>4&3|w<<2)<<6)+16320|55296;w=e+2|0;c[k>>2]=w;b[w>>1]=A|v&960|56320;c[g>>2]=(c[g>>2]|0)+4}}while(0);s=(c[k>>2]|0)+2|0;c[k>>2]=s;r=c[g>>2]|0;if(r>>>0<f>>>0){e=s;p=r}else{q=r;break a}}if((u|0)==41){i=n;return t|0}}else{q=o}}while(0);t=q>>>0<f>>>0|0;i=n;return t|0}function zq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Aq(a){a=a|0;return 0}function Bq(a){a=a|0;return 0}function Cq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=i;a=Dq(c,d,e,1114111,0)|0;i=b;return a|0}function Dq(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;if((((g&4|0)!=0?(c-b|0)>2:0)?(a[b]|0)==-17:0)?(a[b+1|0]|0)==-69:0){j=(a[b+2|0]|0)==-65?b+3|0:b}else{j=b}a:do{if(j>>>0<c>>>0&(e|0)!=0){g=c;k=j;l=0;b:while(1){m=a[k]|0;n=m&255;if(n>>>0>f>>>0){o=k;break a}do{if(m<<24>>24>-1){p=k+1|0;q=l}else{if((m&255)<194){o=k;break a}if((m&255)<224){if((g-k|0)<2){o=k;break a}r=d[k+1|0]|0;if((r&192|0)!=128){o=k;break a}if((r&63|n<<6&1984)>>>0>f>>>0){o=k;break a}p=k+2|0;q=l;break}if((m&255)<240){s=k;if((g-s|0)<3){o=k;break a}r=a[k+1|0]|0;t=a[k+2|0]|0;if((n|0)==237){if(!((r&-32)<<24>>24==-128)){u=23;break b}}else if((n|0)==224){if(!((r&-32)<<24>>24==-96)){u=21;break b}}else{if(!((r&-64)<<24>>24==-128)){u=25;break b}}v=t&255;if((v&192|0)!=128){o=k;break a}if(((r&255)<<6&4032|n<<12&61440|v&63)>>>0>f>>>0){o=k;break a}p=k+3|0;q=l;break}if(!((m&255)<245)){o=k;break a}w=k;if((g-w|0)<4){o=k;break a}if((e-l|0)>>>0<2){o=k;break a}v=a[k+1|0]|0;r=a[k+2|0]|0;t=a[k+3|0]|0;if((n|0)==244){if(!((v&-16)<<24>>24==-128)){u=36;break b}}else if((n|0)==240){if(!((v+112<<24>>24&255)<48)){u=34;break b}}else{if(!((v&-64)<<24>>24==-128)){u=38;break b}}x=r&255;if((x&192|0)!=128){o=k;break a}r=t&255;if((r&192|0)!=128){o=k;break a}if(((v&255)<<12&258048|n<<18&1835008|x<<6&4032|r&63)>>>0>f>>>0){o=k;break a}p=k+4|0;q=l+1|0}}while(0);n=q+1|0;if(p>>>0<c>>>0&n>>>0<e>>>0){k=p;l=n}else{o=p;break a}}if((u|0)==21){y=s-b|0;i=h;return y|0}else if((u|0)==23){y=s-b|0;i=h;return y|0}else if((u|0)==25){y=s-b|0;i=h;return y|0}else if((u|0)==34){y=w-b|0;i=h;return y|0}else if((u|0)==36){y=w-b|0;i=h;return y|0}else if((u|0)==38){y=w-b|0;i=h;return y|0}}else{o=j}}while(0);y=o-b|0;i=h;return y|0}function Eq(a){a=a|0;return 4}function Fq(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Gq(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b+4|0;k=b;c[a>>2]=d;c[k>>2]=g;l=Hq(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>2<<2);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function Hq(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0;l=i;c[e>>2]=b;c[h>>2]=f;do{if((k&2|0)!=0){if((g-f|0)<3){m=1;i=l;return m|0}else{c[h>>2]=f+1;a[f]=-17;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-69;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-65;break}}}while(0);f=c[e>>2]|0;if(!(f>>>0<d>>>0)){m=0;i=l;return m|0}k=g;g=f;a:while(1){f=c[g>>2]|0;if((f&-2048|0)==55296|f>>>0>j>>>0){m=2;n=19;break}do{if(!(f>>>0<128)){if(f>>>0<2048){b=c[h>>2]|0;if((k-b|0)<2){m=1;n=19;break a}c[h>>2]=b+1;a[b]=f>>>6|192;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}b=c[h>>2]|0;o=k-b|0;if(f>>>0<65536){if((o|0)<3){m=1;n=19;break a}c[h>>2]=b+1;a[b]=f>>>12|224;p=c[h>>2]|0;c[h>>2]=p+1;a[p]=f>>>6&63|128;p=c[h>>2]|0;c[h>>2]=p+1;a[p]=f&63|128;break}else{if((o|0)<4){m=1;n=19;break a}c[h>>2]=b+1;a[b]=f>>>18|240;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>12&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>6&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}}else{b=c[h>>2]|0;if((k-b|0)<1){m=1;n=19;break a}c[h>>2]=b+1;a[b]=f}}while(0);f=(c[e>>2]|0)+4|0;c[e>>2]=f;if(f>>>0<d>>>0){g=f}else{m=0;n=19;break}}if((n|0)==19){i=l;return m|0}return 0}function Iq(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b+4|0;k=b;c[a>>2]=d;c[k>>2]=g;l=Jq(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>2<<2);i=b;return l|0}function Jq(b,e,f,g,h,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;m=i;c[f>>2]=b;c[j>>2]=g;g=c[f>>2]|0;if(((((l&4|0)!=0?(e-g|0)>2:0)?(a[g]|0)==-17:0)?(a[g+1|0]|0)==-69:0)?(a[g+2|0]|0)==-65:0){l=g+3|0;c[f>>2]=l;n=l}else{n=g}a:do{if(n>>>0<e>>>0){g=e;l=c[j>>2]|0;b=n;while(1){if(!(l>>>0<h>>>0)){o=b;p=39;break a}q=a[b]|0;r=q&255;do{if(q<<24>>24>-1){if(r>>>0>k>>>0){s=2;break a}c[l>>2]=r;c[f>>2]=b+1}else{if((q&255)<194){s=2;break a}if((q&255)<224){if((g-b|0)<2){s=1;break a}t=d[b+1|0]|0;if((t&192|0)!=128){s=2;break a}u=t&63|r<<6&1984;if(u>>>0>k>>>0){s=2;break a}c[l>>2]=u;c[f>>2]=b+2;break}if((q&255)<240){if((g-b|0)<3){s=1;break a}u=a[b+1|0]|0;t=a[b+2|0]|0;if((r|0)==237){if(!((u&-32)<<24>>24==-128)){s=2;break a}}else if((r|0)==224){if(!((u&-32)<<24>>24==-96)){s=2;break a}}else{if(!((u&-64)<<24>>24==-128)){s=2;break a}}v=t&255;if((v&192|0)!=128){s=2;break a}t=(u&255)<<6&4032|r<<12&61440|v&63;if(t>>>0>k>>>0){s=2;break a}c[l>>2]=t;c[f>>2]=b+3;break}if(!((q&255)<245)){s=2;break a}if((g-b|0)<4){s=1;break a}t=a[b+1|0]|0;v=a[b+2|0]|0;u=a[b+3|0]|0;if((r|0)==240){if(!((t+112<<24>>24&255)<48)){s=2;break a}}else if((r|0)==244){if(!((t&-16)<<24>>24==-128)){s=2;break a}}else{if(!((t&-64)<<24>>24==-128)){s=2;break a}}w=v&255;if((w&192|0)!=128){s=2;break a}v=u&255;if((v&192|0)!=128){s=2;break a}u=(t&255)<<12&258048|r<<18&1835008|w<<6&4032|v&63;if(u>>>0>k>>>0){s=2;break a}c[l>>2]=u;c[f>>2]=b+4}}while(0);r=(c[j>>2]|0)+4|0;c[j>>2]=r;q=c[f>>2]|0;if(q>>>0<e>>>0){l=r;b=q}else{o=q;p=39;break}}}else{o=n;p=39}}while(0);if((p|0)==39){s=o>>>0<e>>>0|0}i=m;return s|0}function Kq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Lq(a){a=a|0;return 0}function Mq(a){a=a|0;return 0}function Nq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=i;a=Oq(c,d,e,1114111,0)|0;i=b;return a|0}function Oq(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;h=i;if((((g&4|0)!=0?(c-b|0)>2:0)?(a[b]|0)==-17:0)?(a[b+1|0]|0)==-69:0){j=(a[b+2|0]|0)==-65?b+3|0:b}else{j=b}a:do{if(j>>>0<c>>>0&(e|0)!=0){g=c;k=j;l=1;b:while(1){m=a[k]|0;n=m&255;do{if(m<<24>>24>-1){if(n>>>0>f>>>0){o=k;break a}p=k+1|0}else{if((m&255)<194){o=k;break a}if((m&255)<224){if((g-k|0)<2){o=k;break a}q=d[k+1|0]|0;if((q&192|0)!=128){o=k;break a}if((q&63|n<<6&1984)>>>0>f>>>0){o=k;break a}p=k+2|0;break}if((m&255)<240){r=k;if((g-r|0)<3){o=k;break a}q=a[k+1|0]|0;s=a[k+2|0]|0;if((n|0)==237){if(!((q&-32)<<24>>24==-128)){t=23;break b}}else if((n|0)==224){if(!((q&-32)<<24>>24==-96)){t=21;break b}}else{if(!((q&-64)<<24>>24==-128)){t=25;break b}}u=s&255;if((u&192|0)!=128){o=k;break a}if(((q&255)<<6&4032|n<<12&61440|u&63)>>>0>f>>>0){o=k;break a}p=k+3|0;break}if(!((m&255)<245)){o=k;break a}v=k;if((g-v|0)<4){o=k;break a}u=a[k+1|0]|0;q=a[k+2|0]|0;s=a[k+3|0]|0;if((n|0)==244){if(!((u&-16)<<24>>24==-128)){t=35;break b}}else if((n|0)==240){if(!((u+112<<24>>24&255)<48)){t=33;break b}}else{if(!((u&-64)<<24>>24==-128)){t=37;break b}}w=q&255;if((w&192|0)!=128){o=k;break a}q=s&255;if((q&192|0)!=128){o=k;break a}if(((u&255)<<12&258048|n<<18&1835008|w<<6&4032|q&63)>>>0>f>>>0){o=k;break a}p=k+4|0}}while(0);if(!(p>>>0<c>>>0&l>>>0<e>>>0)){o=p;break a}k=p;l=l+1|0}if((t|0)==21){x=r-b|0;i=h;return x|0}else if((t|0)==23){x=r-b|0;i=h;return x|0}else if((t|0)==25){x=r-b|0;i=h;return x|0}else if((t|0)==33){x=v-b|0;i=h;return x|0}else if((t|0)==35){x=v-b|0;i=h;return x|0}else if((t|0)==37){x=v-b|0;i=h;return x|0}}else{o=j}}while(0);x=o-b|0;i=h;return x|0}function Pq(a){a=a|0;return 4}function Qq(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Rq(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Sq(a){a=a|0;var b=0;b=i;c[a>>2]=13232;Zj(a+12|0);ys(a);i=b;return}function Tq(a){a=a|0;var b=0;b=i;c[a>>2]=13232;Zj(a+12|0);i=b;return}function Uq(a){a=a|0;var b=0;b=i;c[a>>2]=13272;Zj(a+16|0);ys(a);i=b;return}function Vq(a){a=a|0;var b=0;b=i;c[a>>2]=13272;Zj(a+16|0);i=b;return}function Wq(b){b=b|0;return a[b+8|0]|0}function Xq(a){a=a|0;return c[a+8>>2]|0}function Yq(b){b=b|0;return a[b+9|0]|0}function Zq(a){a=a|0;return c[a+12>>2]|0}function _q(a,b){a=a|0;b=b|0;var c=0;c=i;Wj(a,b+12|0);i=c;return}function $q(a,b){a=a|0;b=b|0;var c=0;c=i;Wj(a,b+16|0);i=c;return}function ar(a,b){a=a|0;b=b|0;b=i;Xj(a,13304,4);i=b;return}function br(a,b){a=a|0;b=b|0;b=i;hk(a,13312,Tr(13312)|0);i=b;return}function cr(a,b){a=a|0;b=b|0;b=i;Xj(a,13336,5);i=b;return}function dr(a,b){a=a|0;b=b|0;b=i;hk(a,13344,Tr(13344)|0);i=b;return}function er(b){b=b|0;var d=0;b=i;if((a[13376]|0)!=0){d=c[3342]|0;i=b;return d|0}if((Na(13376)|0)==0){d=c[3342]|0;i=b;return d|0}if((a[20576]|0)==0?(Na(20576)|0)!=0:0){Us(20408,0,168)|0;hd(165,0,q|0)|0;Bb(20576)}$j(20408,20584)|0;$j(20420|0,20592)|0;$j(20432|0,20600)|0;$j(20444|0,20608)|0;$j(20456|0,20624)|0;$j(20468|0,20640)|0;$j(20480|0,20648)|0;$j(20492|0,20664)|0;$j(20504|0,20672)|0;$j(20516|0,20680)|0;$j(20528|0,20688)|0;$j(20540|0,20696)|0;$j(20552|0,20704)|0;$j(20564|0,20712)|0;c[3342]=20408;Bb(13376);d=c[3342]|0;i=b;return d|0}function fr(b){b=b|0;var d=0;b=i;if((a[13392]|0)!=0){d=c[3346]|0;i=b;return d|0}if((Na(13392)|0)==0){d=c[3346]|0;i=b;return d|0}if((a[20040]|0)==0?(Na(20040)|0)!=0:0){Us(19872,0,168)|0;hd(166,0,q|0)|0;Bb(20040)}kk(19872,20048)|0;kk(19884|0,20080)|0;kk(19896|0,20112)|0;kk(19908|0,20144)|0;kk(19920|0,20184)|0;kk(19932|0,20224)|0;kk(19944|0,20256)|0;kk(19956|0,20296)|0;kk(19968|0,20312)|0;kk(19980|0,20328)|0;kk(19992|0,20344)|0;kk(20004|0,20360)|0;kk(20016|0,20376)|0;kk(20028|0,20392)|0;c[3346]=19872;Bb(13392);d=c[3346]|0;i=b;return d|0}function gr(b){b=b|0;var d=0;b=i;if((a[13408]|0)!=0){d=c[3350]|0;i=b;return d|0}if((Na(13408)|0)==0){d=c[3350]|0;i=b;return d|0}if((a[19648]|0)==0?(Na(19648)|0)!=0:0){Us(19360,0,288)|0;hd(167,0,q|0)|0;Bb(19648)}$j(19360,19656)|0;$j(19372|0,19664)|0;$j(19384|0,19680)|0;$j(19396|0,19688)|0;$j(19408|0,19696)|0;$j(19420|0,19704)|0;$j(19432|0,19712)|0;$j(19444|0,19720)|0;$j(19456|0,19728)|0;$j(19468|0,19744)|0;$j(19480|0,19752)|0;$j(19492|0,19768)|0;$j(19504|0,19784)|0;$j(19516|0,19792)|0;$j(19528|0,19800)|0;$j(19540|0,19808)|0;$j(19552|0,19696)|0;$j(19564|0,19816)|0;$j(19576|0,19824)|0;$j(19588|0,19832)|0;$j(19600|0,19840)|0;$j(19612|0,19848)|0;$j(19624|0,19856)|0;$j(19636|0,19864)|0;c[3350]=19360;Bb(13408);d=c[3350]|0;i=b;return d|0}function hr(b){b=b|0;var d=0;b=i;if((a[13424]|0)!=0){d=c[3354]|0;i=b;return d|0}if((Na(13424)|0)==0){d=c[3354]|0;i=b;return d|0}if((a[18808]|0)==0?(Na(18808)|0)!=0:0){Us(18520,0,288)|0;hd(168,0,q|0)|0;Bb(18808)}kk(18520,18816)|0;kk(18532|0,18848)|0;kk(18544|0,18888)|0;kk(18556|0,18912)|0;kk(18568|0,19232)|0;kk(18580|0,18936)|0;kk(18592|0,18960)|0;kk(18604|0,18984)|0;kk(18616|0,19016)|0;kk(18628|0,19056)|0;kk(18640|0,19088)|0;kk(18652|0,19128)|0;kk(18664|0,19168)|0;kk(18676|0,19184)|0;kk(18688|0,19200)|0;kk(18700|0,19216)|0;kk(18712|0,19232)|0;kk(18724|0,19248)|0;kk(18736|0,19264)|0;kk(18748|0,19280)|0;kk(18760|0,19296)|0;kk(18772|0,19312)|0;kk(18784|0,19328)|0;kk(18796|0,19344)|0;c[3354]=18520;Bb(13424);d=c[3354]|0;i=b;return d|0}function ir(b){b=b|0;var d=0;b=i;if((a[13440]|0)!=0){d=c[3358]|0;i=b;return d|0}if((Na(13440)|0)==0){d=c[3358]|0;i=b;return d|0}if((a[18496]|0)==0?(Na(18496)|0)!=0:0){Us(18208,0,288)|0;hd(169,0,q|0)|0;Bb(18496)}$j(18208,18504)|0;$j(18220|0,18512)|0;c[3358]=18208;Bb(13440);d=c[3358]|0;i=b;return d|0}function jr(b){b=b|0;var d=0;b=i;if((a[13456]|0)!=0){d=c[3362]|0;i=b;return d|0}if((Na(13456)|0)==0){d=c[3362]|0;i=b;return d|0}if((a[18168]|0)==0?(Na(18168)|0)!=0:0){Us(17880,0,288)|0;hd(170,0,q|0)|0;Bb(18168)}kk(17880,18176)|0;kk(17892|0,18192)|0;c[3362]=17880;Bb(13456);d=c[3362]|0;i=b;return d|0}function kr(b){b=b|0;b=i;if((a[13480]|0)==0?(Na(13480)|0)!=0:0){Xj(13464,13488,8);hd(171,13464,q|0)|0;Bb(13480)}i=b;return 13464}function lr(b){b=b|0;b=i;if((a[13520]|0)!=0){i=b;return 13504}if((Na(13520)|0)==0){i=b;return 13504}hk(13504,13528,Tr(13528)|0);hd(172,13504,q|0)|0;Bb(13520);i=b;return 13504}function mr(b){b=b|0;b=i;if((a[13584]|0)==0?(Na(13584)|0)!=0:0){Xj(13568,13592,8);hd(171,13568,q|0)|0;Bb(13584)}i=b;return 13568}function nr(b){b=b|0;b=i;if((a[13624]|0)!=0){i=b;return 13608}if((Na(13624)|0)==0){i=b;return 13608}hk(13608,13632,Tr(13632)|0);hd(172,13608,q|0)|0;Bb(13624);i=b;return 13608}function or(b){b=b|0;b=i;if((a[13688]|0)==0?(Na(13688)|0)!=0:0){Xj(13672,13696,20);hd(171,13672,q|0)|0;Bb(13688)}i=b;return 13672}function pr(b){b=b|0;b=i;if((a[13736]|0)!=0){i=b;return 13720}if((Na(13736)|0)==0){i=b;return 13720}hk(13720,13744,Tr(13744)|0);hd(172,13720,q|0)|0;Bb(13736);i=b;return 13720}function qr(b){b=b|0;b=i;if((a[13848]|0)==0?(Na(13848)|0)!=0:0){Xj(13832,13856,11);hd(171,13832,q|0)|0;Bb(13848)}i=b;return 13832}function rr(b){b=b|0;b=i;if((a[13888]|0)!=0){i=b;return 13872}if((Na(13888)|0)==0){i=b;return 13872}hk(13872,13896,Tr(13896)|0);hd(172,13872,q|0)|0;Bb(13888);i=b;return 13872}function sr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+16|0;g=f;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=oc()|0;k=c[j>>2]|0;c[j>>2]=0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}l=+Os(b,g,c[3238]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function tr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+16|0;g=f;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=oc()|0;k=c[j>>2]|0;c[j>>2]=0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}l=+Os(b,g,c[3238]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function ur(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+16|0;g=f;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=oc()|0;k=c[j>>2]|0;c[j>>2]=0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}l=+Os(b,g,c[3238]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)==34){c[e>>2]=4}h=l;i=f;return+h}function vr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+16|0;h=g;do{if((b|0)!=(d|0)){if((a[b]|0)==45){c[e>>2]=4;j=0;k=0;break}l=oc()|0;m=c[l>>2]|0;c[l>>2]=0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}n=Tb(b|0,h|0,f|0,c[3238]|0)|0;o=c[l>>2]|0;if((o|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;break}if((o|0)==34){c[e>>2]=4;j=-1;k=-1}else{j=J;k=n}}else{c[e>>2]=4;j=0;k=0}}while(0);J=j;i=g;return k|0}function wr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+16|0;h=g;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=oc()|0;l=c[k>>2]|0;c[k>>2]=0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}m=Tb(b|0,h|0,f|0,c[3238]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((b|0)==34|(f>>>0>0|(f|0)==0&m>>>0>4294967295)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function xr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+16|0;h=g;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=oc()|0;l=c[k>>2]|0;c[k>>2]=0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}m=Tb(b|0,h|0,f|0,c[3238]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((b|0)==34|(f>>>0>0|(f|0)==0&m>>>0>4294967295)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function yr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+16|0;h=g;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=oc()|0;l=c[k>>2]|0;c[k>>2]=0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}m=Tb(b|0,h|0,f|0,c[3238]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((b|0)==34|(f>>>0>0|(f|0)==0&m>>>0>65535)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m&65535;i=g;return j|0}return 0}function zr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+16|0;h=g;if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0;J=j;i=g;return k|0}l=oc()|0;m=c[l>>2]|0;c[l>>2]=0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}n=pb(b|0,h|0,f|0,c[3238]|0)|0;f=J;b=c[l>>2]|0;if((b|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;J=j;i=g;return k|0}if((b|0)==34){c[e>>2]=4;e=(f|0)>0|(f|0)==0&n>>>0>0;J=e?2147483647:-2147483648;i=g;return(e?-1:0)|0}else{j=f;k=n;J=j;i=g;return k|0}return 0}function Ar(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+16|0;h=g;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}k=oc()|0;l=c[k>>2]|0;c[k>>2]=0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}m=pb(b|0,h|0,f|0,c[3238]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}do{if((b|0)==34){c[e>>2]=4;if((f|0)>0|(f|0)==0&m>>>0>0){j=2147483647;i=g;return j|0}}else{if((f|0)<-1|(f|0)==-1&m>>>0<2147483648){c[e>>2]=4;break}if((f|0)>0|(f|0)==0&m>>>0>2147483647){c[e>>2]=4;j=2147483647;i=g;return j|0}else{j=m;i=g;return j|0}}}while(0);j=-2147483648;i=g;return j|0}function Br(a){a=a|0;var b=0,e=0,f=0,g=0,h=0;b=i;e=a+4|0;f=d[e]|d[e+1|0]<<8|d[e+2|0]<<16|d[e+3|0]<<24;g=e+4|0;e=d[g]|d[g+1|0]<<8|d[g+2|0]<<16|d[g+3|0]<<24;g=(c[a>>2]|0)+(e>>1)|0;if((e&1|0)==0){h=f;Dd[h&255](g);i=b;return}else{h=c[(c[g>>2]|0)+f>>2]|0;Dd[h&255](g);i=b;return}}function Cr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;f=b+8|0;g=b+4|0;h=c[g>>2]|0;j=c[f>>2]|0;k=h;if(!(j-k>>2>>>0<d>>>0)){l=d;m=h;do{if((m|0)==0){n=0}else{c[m>>2]=0;n=c[g>>2]|0}m=n+4|0;c[g>>2]=m;l=l+ -1|0}while((l|0)!=0);i=e;return}l=b+16|0;m=c[b>>2]|0;n=k-m>>2;k=n+d|0;if(k>>>0>1073741823){wp(0)}h=j-m|0;if(h>>2>>>0<536870911){m=h>>1;h=m>>>0<k>>>0?k:m;if((h|0)!=0){m=b+128|0;if((a[m]|0)==0&h>>>0<29){a[m]=1;o=h;p=l}else{q=h;r=11}}else{o=0;p=0}}else{q=1073741823;r=11}if((r|0)==11){o=q;p=ws(q<<2)|0}q=d;d=p+(n<<2)|0;do{if((d|0)==0){s=0}else{c[d>>2]=0;s=d}d=s+4|0;q=q+ -1|0}while((q|0)!=0);q=c[b>>2]|0;s=(c[g>>2]|0)-q|0;r=p+(n-(s>>2)<<2)|0;Ss(r|0,q|0,s|0)|0;c[b>>2]=r;c[g>>2]=d;c[f>>2]=p+(o<<2);if((q|0)==0){i=e;return}if((l|0)==(q|0)){a[b+128|0]=0;i=e;return}else{ys(q);i=e;return}}function Dr(a){a=a|0;a=i;jk(18156|0);jk(18144|0);jk(18132|0);jk(18120|0);jk(18108|0);jk(18096|0);jk(18084|0);jk(18072|0);jk(18060|0);jk(18048|0);jk(18036|0);jk(18024|0);jk(18012|0);jk(18e3|0);jk(17988|0);jk(17976|0);jk(17964|0);jk(17952|0);jk(17940|0);jk(17928|0);jk(17916|0);jk(17904|0);jk(17892|0);jk(17880);i=a;return}function Er(a){a=a|0;a=i;Zj(18484|0);Zj(18472|0);Zj(18460|0);Zj(18448|0);Zj(18436|0);Zj(18424|0);Zj(18412|0);Zj(18400|0);Zj(18388|0);Zj(18376|0);Zj(18364|0);Zj(18352|0);Zj(18340|0);Zj(18328|0);Zj(18316|0);Zj(18304|0);Zj(18292|0);Zj(18280|0);Zj(18268|0);Zj(18256|0);Zj(18244|0);Zj(18232|0);Zj(18220|0);Zj(18208);i=a;return}function Fr(a){a=a|0;a=i;jk(18796|0);jk(18784|0);jk(18772|0);jk(18760|0);jk(18748|0);jk(18736|0);jk(18724|0);jk(18712|0);jk(18700|0);jk(18688|0);jk(18676|0);jk(18664|0);jk(18652|0);jk(18640|0);jk(18628|0);jk(18616|0);jk(18604|0);jk(18592|0);jk(18580|0);jk(18568|0);jk(18556|0);jk(18544|0);jk(18532|0);jk(18520);i=a;return}function Gr(a){a=a|0;a=i;Zj(19636|0);Zj(19624|0);Zj(19612|0);Zj(19600|0);Zj(19588|0);Zj(19576|0);Zj(19564|0);Zj(19552|0);Zj(19540|0);Zj(19528|0);Zj(19516|0);Zj(19504|0);Zj(19492|0);Zj(19480|0);Zj(19468|0);Zj(19456|0);Zj(19444|0);Zj(19432|0);Zj(19420|0);Zj(19408|0);Zj(19396|0);Zj(19384|0);Zj(19372|0);Zj(19360);i=a;return}function Hr(a){a=a|0;a=i;jk(20028|0);jk(20016|0);jk(20004|0);jk(19992|0);jk(19980|0);jk(19968|0);jk(19956|0);jk(19944|0);jk(19932|0);jk(19920|0);jk(19908|0);jk(19896|0);jk(19884|0);jk(19872);i=a;return}function Ir(a){a=a|0;a=i;Zj(20564|0);Zj(20552|0);Zj(20540|0);Zj(20528|0);Zj(20516|0);Zj(20504|0);Zj(20492|0);Zj(20480|0);Zj(20468|0);Zj(20456|0);Zj(20444|0);Zj(20432|0);Zj(20420|0);Zj(20408);i=a;return}function Jr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=i;e=Kr(0,a,b,(c|0)!=0?c:20928)|0;i=d;return e|0}function Kr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+16|0;h=g;c[h>>2]=b;j=(f|0)==0?20936:f;f=c[j>>2]|0;a:do{if((d|0)==0){if((f|0)==0){k=0;i=g;return k|0}}else{if((b|0)==0){c[h>>2]=h;l=h}else{l=b}if((e|0)==0){k=-2;i=g;return k|0}do{if((f|0)==0){m=a[d]|0;n=m&255;if(m<<24>>24>-1){c[l>>2]=n;k=m<<24>>24!=0|0;i=g;return k|0}else{m=n+ -194|0;if(m>>>0>50){break a}o=e+ -1|0;p=c[20720+(m<<2)>>2]|0;q=d+1|0;break}}else{o=e;p=f;q=d}}while(0);b:do{if((o|0)==0){r=p}else{m=a[q]|0;n=(m&255)>>>3;if((n+ -16|n+(p>>26))>>>0>7){break a}else{s=o;t=m;u=p;v=q}while(1){v=v+1|0;u=(t&255)+ -128|u<<6;s=s+ -1|0;if((u|0)>=0){break}if((s|0)==0){r=u;break b}t=a[v]|0;if(((t&255)+ -128|0)>>>0>63){break a}}c[j>>2]=0;c[l>>2]=u;k=e-s|0;i=g;return k|0}}while(0);c[j>>2]=r;k=-2;i=g;return k|0}}while(0);c[j>>2]=0;c[(oc()|0)>>2]=84;k=-1;i=g;return k|0}function Lr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;g=i;i=i+1040|0;h=g+8|0;j=g;k=c[b>>2]|0;c[j>>2]=k;l=(a|0)!=0;m=l?e:256;e=l?a:h;a:do{if((k|0)==0|(m|0)==0){n=d;o=m;p=k;q=0;r=e}else{a=d;s=m;t=k;u=0;v=e;while(1){w=a>>>2;x=w>>>0>=s>>>0;if(!(x|a>>>0>131)){n=a;o=s;p=t;q=u;r=v;break a}y=x?s:w;z=a-y|0;w=Mr(v,j,y,f)|0;if((w|0)==-1){break}if((v|0)==(h|0)){A=s;B=h}else{A=s-w|0;B=v+(w<<2)|0}y=w+u|0;w=c[j>>2]|0;if((w|0)==0|(A|0)==0){n=z;o=A;p=w;q=y;r=B;break a}else{a=z;s=A;t=w;u=y;v=B}}n=z;o=0;p=c[j>>2]|0;q=-1;r=v}}while(0);b:do{if((p|0)!=0?!((o|0)==0|(n|0)==0):0){z=n;B=o;A=p;h=q;e=r;while(1){C=Kr(e,A,z,f)|0;if((C+2|0)>>>0<3){break}k=(c[j>>2]|0)+C|0;c[j>>2]=k;m=B+ -1|0;d=h+1|0;if((m|0)==0|(z|0)==(C|0)){D=d;break b}else{z=z-C|0;B=m;A=k;h=d;e=e+4|0}}if((C|0)==0){c[j>>2]=0;D=h;break}else if((C|0)==-1){D=-1;break}else{c[f>>2]=0;D=h;break}}else{D=q}}while(0);if(!l){i=g;return D|0}c[b>>2]=c[j>>2];i=g;return D|0}function Mr(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0;h=i;j=c[e>>2]|0;if((g|0)!=0?(k=c[g>>2]|0,(k|0)!=0):0){if((b|0)==0){l=f;m=k;n=j;o=16}else{c[g>>2]=0;p=b;q=f;r=k;s=j;o=36}}else{if((b|0)==0){t=f;u=j;o=7}else{v=b;w=f;x=j;o=6}}a:while(1){if((o|0)==6){o=0;if((w|0)==0){y=f;o=53;break}else{z=v;A=w;B=x}while(1){j=a[B]|0;do{if(((j&255)+ -1|0)>>>0<127?(B&3|0)==0&A>>>0>3:0){k=z;g=A;C=B;while(1){D=c[C>>2]|0;if(((D+ -16843009|D)&-2139062144|0)!=0){o=30;break}c[k>>2]=D&255;c[k+4>>2]=d[C+1|0]|0;c[k+8>>2]=d[C+2|0]|0;E=C+4|0;F=k+16|0;c[k+12>>2]=d[C+3|0]|0;G=g+ -4|0;if(G>>>0>3){k=F;g=G;C=E}else{o=31;break}}if((o|0)==30){o=0;H=k;I=g;J=D&255;K=C;break}else if((o|0)==31){o=0;H=F;I=G;J=a[E]|0;K=E;break}}else{H=z;I=A;J=j;K=B}}while(0);L=J&255;if(!((L+ -1|0)>>>0<127)){break}c[H>>2]=L;j=I+ -1|0;if((j|0)==0){y=f;o=53;break a}else{z=H+4|0;A=j;B=K+1|0}}j=L+ -194|0;if(j>>>0>50){M=H;N=I;O=K;o=47;break}p=H;q=I;r=c[20720+(j<<2)>>2]|0;s=K+1|0;o=36;continue}else if((o|0)==7){o=0;j=a[u]|0;if(((j&255)+ -1|0)>>>0<127?(u&3|0)==0:0){P=c[u>>2]|0;if(((P+ -16843009|P)&-2139062144|0)==0){Q=t;R=u;while(1){S=R+4|0;T=Q+ -4|0;U=c[S>>2]|0;if(((U+ -16843009|U)&-2139062144|0)==0){Q=T;R=S}else{V=T;W=U;X=S;break}}}else{V=t;W=P;X=u}Y=V;Z=W&255;_=X}else{Y=t;Z=j;_=u}R=Z&255;if((R+ -1|0)>>>0<127){t=Y+ -1|0;u=_+1|0;o=7;continue}Q=R+ -194|0;if(Q>>>0>50){M=b;N=Y;O=_;o=47;break}l=Y;m=c[20720+(Q<<2)>>2]|0;n=_+1|0;o=16;continue}else if((o|0)==16){o=0;Q=(d[n]|0)>>>3;if((Q+ -16|Q+(m>>26))>>>0>7){o=17;break}Q=n+1|0;if((m&33554432|0)!=0){if(((d[Q]|0)+ -128|0)>>>0>63){o=20;break}R=n+2|0;if((m&524288|0)==0){$=R}else{if(((d[R]|0)+ -128|0)>>>0>63){o=23;break}$=n+3|0}}else{$=Q}t=l+ -1|0;u=$;o=7;continue}else if((o|0)==36){o=0;Q=d[s]|0;R=Q>>>3;if((R+ -16|R+(r>>26))>>>0>7){o=37;break}R=s+1|0;aa=Q+ -128|r<<6;if((aa|0)<0){Q=(d[R]|0)+ -128|0;if(Q>>>0>63){o=40;break}S=s+2|0;ba=Q|aa<<6;if((ba|0)<0){Q=(d[S]|0)+ -128|0;if(Q>>>0>63){o=43;break}ca=Q|ba<<6;da=s+3|0}else{ca=ba;da=S}}else{ca=aa;da=R}c[p>>2]=ca;v=p+4|0;w=q+ -1|0;x=da;o=6;continue}}if((o|0)==17){ea=b;fa=l;ga=m;ha=n+ -1|0;o=46}else if((o|0)==20){ea=b;fa=l;ga=m;ha=n+ -1|0;o=46}else if((o|0)==23){ea=b;fa=l;ga=m;ha=n+ -1|0;o=46}else if((o|0)==37){ea=p;fa=q;ga=r;ha=s+ -1|0;o=46}else if((o|0)==40){ea=p;fa=q;ga=aa;ha=s+ -1|0;o=46}else if((o|0)==43){ea=p;fa=q;ga=ba;ha=s+ -1|0;o=46}else if((o|0)==53){i=h;return y|0}if((o|0)==46){if((ga|0)==0){M=ea;N=fa;O=ha;o=47}else{ia=ea;ja=ha}}if((o|0)==47){if((a[O]|0)==0){if((M|0)!=0){c[M>>2]=0;c[e>>2]=0}y=f-N|0;i=h;return y|0}else{ia=M;ja=O}}c[(oc()|0)>>2]=84;if((ia|0)==0){y=-1;i=h;return y|0}c[e>>2]=ja;y=-1;i=h;return y|0}function Nr(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+16|0;h=g;c[h>>2]=b;if((e|0)==0){j=0;i=g;return j|0}do{if((f|0)!=0){if((b|0)==0){c[h>>2]=h;k=h}else{k=b}l=a[e]|0;m=l&255;if(l<<24>>24>-1){c[k>>2]=m;j=l<<24>>24!=0|0;i=g;return j|0}l=m+ -194|0;if(!(l>>>0>50)){m=e+1|0;n=c[20720+(l<<2)>>2]|0;if(f>>>0<4?(n&-2147483648>>>((f*6|0)+ -6|0)|0)!=0:0){break}l=d[m]|0;m=l>>>3;if(!((m+ -16|m+(n>>26))>>>0>7)){m=l+ -128|n<<6;if((m|0)>=0){c[k>>2]=m;j=2;i=g;return j|0}n=(d[e+2|0]|0)+ -128|0;if(!(n>>>0>63)){l=n|m<<6;if((l|0)>=0){c[k>>2]=l;j=3;i=g;return j|0}m=(d[e+3|0]|0)+ -128|0;if(!(m>>>0>63)){c[k>>2]=m|l<<6;j=4;i=g;return j|0}}}}}}while(0);c[(oc()|0)>>2]=84;j=-1;i=g;return j|0}function Or(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;e=i;if((b|0)==0){f=1;i=e;return f|0}if(d>>>0<128){a[b]=d;f=1;i=e;return f|0}if(d>>>0<2048){a[b]=d>>>6|192;a[b+1|0]=d&63|128;f=2;i=e;return f|0}if(d>>>0<55296|(d+ -57344|0)>>>0<8192){a[b]=d>>>12|224;a[b+1|0]=d>>>6&63|128;a[b+2|0]=d&63|128;f=3;i=e;return f|0}if((d+ -65536|0)>>>0<1048576){a[b]=d>>>18|240;a[b+1|0]=d>>>12&63|128;a[b+2|0]=d>>>6&63|128;a[b+3|0]=d&63|128;f=4;i=e;return f|0}else{c[(oc()|0)>>2]=84;f=-1;i=e;return f|0}return 0}function Pr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+272|0;g=f+8|0;h=f;j=c[b>>2]|0;c[h>>2]=j;k=(a|0)!=0;l=k?e:256;e=k?a:g;a:do{if((j|0)==0|(l|0)==0){m=d;n=l;o=j;p=0;q=e}else{a=d;r=l;s=j;t=0;u=e;while(1){v=a>>>0>=r>>>0;if(!(v|a>>>0>32)){m=a;n=r;o=s;p=t;q=u;break a}w=v?r:a;x=a-w|0;v=Qr(u,h,w,0)|0;if((v|0)==-1){break}if((u|0)==(g|0)){y=r;z=g}else{y=r-v|0;z=u+v|0}w=v+t|0;v=c[h>>2]|0;if((v|0)==0|(y|0)==0){m=x;n=y;o=v;p=w;q=z;break a}else{a=x;r=y;s=v;t=w;u=z}}m=x;n=0;o=c[h>>2]|0;p=-1;q=u}}while(0);b:do{if((o|0)!=0?!((n|0)==0|(m|0)==0):0){x=m;z=n;y=o;g=p;e=q;while(1){A=Or(e,c[y>>2]|0,0)|0;if((A+1|0)>>>0<2){break}j=(c[h>>2]|0)+4|0;c[h>>2]=j;l=x+ -1|0;d=g+1|0;if((z|0)==(A|0)|(l|0)==0){B=d;break b}else{x=l;z=z-A|0;y=j;g=d;e=e+A|0}}if((A|0)==0){c[h>>2]=0;B=g}else{B=-1}}else{B=p}}while(0);if(!k){i=f;return B|0}c[b>>2]=c[h>>2];i=f;return B|0}function Qr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=i;i=i+16|0;g=f;if((b|0)==0){h=c[d>>2]|0;j=c[h>>2]|0;if((j|0)==0){k=0;i=f;return k|0}else{l=0;m=j;n=h}while(1){if(m>>>0>127){h=Or(g,m,0)|0;if((h|0)==-1){k=-1;o=26;break}else{p=h}}else{p=1}h=p+l|0;j=n+4|0;q=c[j>>2]|0;if((q|0)==0){k=h;o=26;break}else{l=h;m=q;n=j}}if((o|0)==26){i=f;return k|0}}a:do{if(e>>>0>3){n=b;m=e;l=c[d>>2]|0;while(1){p=c[l>>2]|0;if((p|0)==0){r=n;s=m;break a}if(p>>>0>127){j=Or(n,p,0)|0;if((j|0)==-1){k=-1;break}t=n+j|0;u=m-j|0;v=l}else{a[n]=p;t=n+1|0;u=m+ -1|0;v=c[d>>2]|0}p=v+4|0;c[d>>2]=p;if(u>>>0>3){n=t;m=u;l=p}else{r=t;s=u;break a}}i=f;return k|0}else{r=b;s=e}}while(0);b:do{if((s|0)!=0){b=r;u=s;t=c[d>>2]|0;while(1){v=c[t>>2]|0;if((v|0)==0){o=24;break}if(v>>>0>127){l=Or(g,v,0)|0;if((l|0)==-1){k=-1;o=26;break}if(l>>>0>u>>>0){o=20;break}Or(b,c[t>>2]|0,0)|0;w=b+l|0;x=u-l|0;y=t}else{a[b]=v;w=b+1|0;x=u+ -1|0;y=c[d>>2]|0}v=y+4|0;c[d>>2]=v;if((x|0)==0){z=0;break b}else{b=w;u=x;t=v}}if((o|0)==20){k=e-u|0;i=f;return k|0}else if((o|0)==24){a[b]=0;z=u;break}else if((o|0)==26){i=f;return k|0}}else{z=0}}while(0);c[d>>2]=0;k=e-z|0;i=f;return k|0}function Rr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,ga=0;f=i;i=i+944|0;g=f+680|0;h=f+424|0;j=f;k=f+232|0;l=fa(d,b)|0;if((l|0)==0){i=f;return}b=l-d|0;c[k+4>>2]=d;c[k>>2]=d;m=d;n=d;o=2;while(1){p=m+d+n|0;c[k+(o<<2)>>2]=p;if(p>>>0<l>>>0){q=n;n=p;o=o+1|0;m=q}else{break}}m=0-d|0;o=a+b|0;if((b|0)>0){b=(d|0)==0;n=d>>>0>256?256:d;l=(n|0)==(d|0);q=o;p=1;r=0;s=a;t=1;while(1){do{if((p&3|0)!=3){u=t+ -1|0;a:do{if((c[k+(u<<2)>>2]|0)>>>0<(q-s|0)>>>0){c[j>>2]=s;if((t|0)>1){v=t;w=s;x=s;y=1;while(1){z=w+m|0;A=v+ -2|0;B=w+(0-((c[k+(A<<2)>>2]|0)+d))|0;if((Sd[e&31](x,B)|0)>-1?(Sd[e&31](x,z)|0)>-1:0){C=y;break}D=y+1|0;E=j+(y<<2)|0;if((Sd[e&31](B,z)|0)>-1){c[E>>2]=B;F=B;G=v+ -1|0}else{c[E>>2]=z;F=z;G=A}if((G|0)<=1){C=D;break}v=G;w=F;x=c[j>>2]|0;y=D}if((C|0)>=2?(y=j+(C<<2)|0,c[y>>2]=g,!b):0){if((C|0)>0){H=d;I=g}else{x=c[j>>2]|0;Ss(g|0,x|0,n|0)|0;if(l){break}else{J=d;K=n}while(1){J=J-K|0;K=J>>>0>256?256:J;Ss(g|0,x|0,K|0)|0;if((J|0)==(K|0)){break a}}}while(1){x=H>>>0>256?256:H;w=c[j>>2]|0;Ss(I|0,w|0,x|0)|0;v=w;w=0;while(1){D=w+1|0;A=c[j+(D<<2)>>2]|0;Ss(v|0,A|0,x|0)|0;c[j+(w<<2)>>2]=v+x;if((D|0)==(C|0)){break}else{v=A;w=D}}if((H|0)==(x|0)){break a}H=H-x|0;I=c[y>>2]|0}}}}else{Sr(s,d,e,p,r,t,0,k)}}while(0);if((t|0)==1){L=p<<1;M=p>>>31|r<<1;N=0;break}else{y=u>>>0>31;w=y?0:p;v=y?t+ -33|0:u;L=w<<v;M=w>>>(32-v|0)|(y?p:r)<<v;N=1;break}}else{c[j>>2]=s;b:do{if((t|0)>1){v=t;y=s;w=s;D=1;while(1){A=y+m|0;z=v+ -2|0;E=y+(0-((c[k+(z<<2)>>2]|0)+d))|0;if((Sd[e&31](w,E)|0)>-1?(Sd[e&31](w,A)|0)>-1:0){O=D;break}B=D+1|0;P=j+(D<<2)|0;if((Sd[e&31](E,A)|0)>-1){c[P>>2]=E;Q=E;R=v+ -1|0}else{c[P>>2]=A;Q=A;R=z}if((R|0)<=1){O=B;break}v=R;y=Q;w=c[j>>2]|0;D=B}if((O|0)>=2?(D=j+(O<<2)|0,c[D>>2]=h,!b):0){if((O|0)>0){S=d;T=h}else{w=c[j>>2]|0;Ss(h|0,w|0,n|0)|0;if(l){break}else{U=d;V=n}while(1){U=U-V|0;V=U>>>0>256?256:U;Ss(h|0,w|0,V|0)|0;if((U|0)==(V|0)){break b}}}while(1){w=S>>>0>256?256:S;y=c[j>>2]|0;Ss(T|0,y|0,w|0)|0;v=y;y=0;while(1){B=y+1|0;z=c[j+(B<<2)>>2]|0;Ss(v|0,z|0,w|0)|0;c[j+(y<<2)>>2]=v+w;if((B|0)==(O|0)){break}else{v=z;y=B}}if((S|0)==(w|0)){break b}S=S-w|0;T=c[D>>2]|0}}}}while(0);L=p>>>2|r<<30;M=r>>>2;N=t+2|0}}while(0);u=L|1;D=s+d|0;if(D>>>0<o>>>0){p=u;r=M;s=D;t=N}else{W=M;X=u;Y=D;Z=N;break}}}else{W=0;X=1;Y=a;Z=1}Sr(Y,d,e,X,W,Z,0,k);a=X;X=W;W=Y;Y=Z;while(1){if((Y|0)==1){if((a|0)==1){if((X|0)==0){break}else{_=52}}}else{_=52}if((_|0)==52?(_=0,(Y|0)>=2):0){Z=a>>>30;N=Y+ -2|0;M=(a<<1&2147483646|Z<<31)^3;t=(Z|X<<2)>>>1;Sr(W+(0-((c[k+(N<<2)>>2]|0)+d))|0,d,e,M,t,Y+ -1|0,1,k);s=t<<1|Z&1;Z=M<<1|1;M=W+m|0;Sr(M,d,e,Z,s,N,1,k);a=Z;X=s;W=M;Y=N;continue}N=a+ -1|0;if((N|0)!=0){if((N&1|0)==0){M=N;N=0;do{N=N+1|0;M=M>>>1}while((M&1|0)==0);if((N|0)!=0){$=N}else{_=57}}else{_=57}if((_|0)==57){_=0;if((X|0)!=0){if((X&1|0)==0){M=X;s=0;while(1){Z=s+1|0;t=M>>>1;if((t&1|0)==0){M=t;s=Z}else{aa=Z;break}}}else{aa=0}}else{aa=32}$=(aa|0)==0?0:aa+32|0}if($>>>0>31){ba=$;_=62}else{ca=$;da=a;ea=X;ga=$}}else{ba=32;_=62}if((_|0)==62){_=0;ca=ba+ -32|0;da=X;ea=0;ga=ba}a=ea<<32-ca|da>>>ca;X=ea>>>ca;W=W+m|0;Y=ga+Y|0}i=f;return}function Sr(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0;k=i;i=i+752|0;l=k+232|0;m=k+488|0;n=k;c[n>>2]=a;o=0-b|0;a:do{if((e|0)==1&(f|0)==0){p=a;q=g;r=h;s=1;t=18}else{u=g;v=a;w=h;x=e;y=f;z=a;A=1;while(1){B=v+(0-(c[j+(u<<2)>>2]|0))|0;if((Sd[d&31](B,z)|0)<1){p=v;q=u;r=w;s=A;t=18;break a}if((w|0)==0&(u|0)>1){C=c[j+(u+ -2<<2)>>2]|0;if((Sd[d&31](v+o|0,B)|0)>-1){D=v;E=u;F=A;break a}if((Sd[d&31](v+(0-(C+b))|0,B)|0)>-1){D=v;E=u;F=A;break a}}C=A+1|0;c[n+(A<<2)>>2]=B;G=x+ -1|0;if((G|0)!=0){if((G&1|0)==0){H=G;G=0;do{G=G+1|0;H=H>>>1}while((H&1|0)==0);if((G|0)!=0){I=G}else{t=10}}else{t=10}if((t|0)==10){t=0;if((y|0)!=0){if((y&1|0)==0){H=y;J=0;while(1){K=J+1|0;L=H>>>1;if((L&1|0)==0){H=L;J=K}else{M=K;break}}}else{M=0}}else{M=32}I=(M|0)==0?0:M+32|0}if(I>>>0>31){N=I;t=15}else{O=I;P=x;Q=y;R=I}}else{N=32;t=15}if((t|0)==15){t=0;O=N+ -32|0;P=y;Q=0;R=N}J=Q<<32-O|P>>>O;H=Q>>>O;G=R+u|0;if((J|0)==1&(H|0)==0){D=B;E=G;F=C;break a}u=G;v=B;w=0;x=J;y=H;z=c[n>>2]|0;A=C}}}while(0);if((t|0)==18){if((r|0)==0){D=p;E=q;F=s}else{i=k;return}}b:do{if((F|0)>=2?(s=n+(F<<2)|0,c[s>>2]=l,(b|0)!=0):0){if((F|0)>0){S=b;T=l}else{q=b>>>0>256?256:b;p=c[n>>2]|0;Ss(l|0,p|0,q|0)|0;if((q|0)==(b|0)){break}else{U=b;V=q}while(1){U=U-V|0;V=U>>>0>256?256:U;Ss(l|0,p|0,V|0)|0;if((U|0)==(V|0)){break b}}}while(1){p=S>>>0>256?256:S;q=c[n>>2]|0;Ss(T|0,q|0,p|0)|0;r=q;q=0;while(1){t=q+1|0;R=c[n+(t<<2)>>2]|0;Ss(r|0,R|0,p|0)|0;c[n+(q<<2)>>2]=r+p;if((t|0)==(F|0)){break}else{r=R;q=t}}if((S|0)==(p|0)){break b}S=S-p|0;T=c[s>>2]|0}}}while(0);c[l>>2]=D;c:do{if((E|0)>1){T=E;S=D;F=D;n=1;while(1){V=S+o|0;U=T+ -2|0;s=S+(0-((c[j+(U<<2)>>2]|0)+b))|0;if((Sd[d&31](F,s)|0)>-1?(Sd[d&31](F,V)|0)>-1:0){W=n;break}q=n+1|0;r=l+(n<<2)|0;if((Sd[d&31](s,V)|0)>-1){c[r>>2]=s;X=s;Y=T+ -1|0}else{c[r>>2]=V;X=V;Y=U}if((Y|0)<=1){W=q;break}T=Y;S=X;F=c[l>>2]|0;n=q}if((W|0)>=2?(n=l+(W<<2)|0,c[n>>2]=m,(b|0)!=0):0){if((W|0)>0){Z=b;_=m}else{F=b>>>0>256?256:b;S=c[l>>2]|0;Ss(m|0,S|0,F|0)|0;if((F|0)==(b|0)){$=m;break}else{aa=b;ba=F}while(1){F=aa-ba|0;T=F>>>0>256?256:F;Ss(m|0,S|0,T|0)|0;if((F|0)==(T|0)){$=m;break c}else{aa=F;ba=T}}}while(1){S=Z>>>0>256?256:Z;T=c[l>>2]|0;Ss(_|0,T|0,S|0)|0;F=T;T=0;while(1){q=T+1|0;U=c[l+(q<<2)>>2]|0;Ss(F|0,U|0,S|0)|0;c[l+(T<<2)>>2]=F+S;if((q|0)==(W|0)){break}else{F=U;T=q}}if((Z|0)==(S|0)){$=m;break c}Z=Z-S|0;_=c[n>>2]|0}}else{$=m}}else{$=m}}while(0);i=k;return}function Tr(a){a=a|0;var b=0,d=0;b=i;d=a;while(1){if((c[d>>2]|0)==0){break}else{d=d+4|0}}i=b;return d-a>>2|0}function Ur(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;if((d|0)==0){i=e;return a|0}else{f=d;g=b;h=a}while(1){f=f+ -1|0;c[h>>2]=c[g>>2];if((f|0)==0){break}else{g=g+4|0;h=h+4|0}}i=e;return a|0}function Vr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(!f){g=d;do{g=g+ -1|0;c[a+(g<<2)>>2]=c[b+(g<<2)>>2]}while((g|0)!=0)}}else{if(!f){f=b;b=a;g=d;while(1){g=g+ -1|0;c[b>>2]=c[f>>2];if((g|0)==0){break}else{f=f+4|0;b=b+4|0}}}}i=e;return a|0}function Wr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;if((d|0)!=0){f=d;d=a;while(1){f=f+ -1|0;c[d>>2]=b;if((f|0)==0){break}else{d=d+4|0}}}i=e;return a|0}function Xr(a){a=a|0;return}function Yr(a){a=a|0;c[a>>2]=20952;return}function Zr(a){a=a|0;var b=0;b=i;nb(a|0);ys(a);i=b;return}function _r(a){a=a|0;var b=0;b=i;nb(a|0);i=b;return}function $r(a){a=a|0;return 20968}function as(a){a=a|0;return}function bs(a){a=a|0;return}function cs(a){a=a|0;return}function ds(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function es(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function fs(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function gs(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+64|0;f=e;if((a|0)==(b|0)){g=1;i=e;return g|0}if((b|0)==0){g=0;i=e;return g|0}h=ks(b,21080,21136,0)|0;if((h|0)==0){g=0;i=e;return g|0}b=f+0|0;j=b+56|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(j|0));c[f>>2]=h;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;Xd[c[(c[h>>2]|0)+28>>2]&15](h,f,c[d>>2]|0,1);if((c[f+24>>2]|0)!=1){g=0;i=e;return g|0}c[d>>2]=c[f+16>>2];g=1;i=e;return g|0}function hs(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;if((c[d+8>>2]|0)!=(b|0)){i=g;return}b=d+16|0;h=c[b>>2]|0;if((h|0)==0){c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;i=g;return}if((h|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;i=g;return}e=d+24|0;if((c[e>>2]|0)!=2){i=g;return}c[e>>2]=f;i=g;return}function is(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;if((b|0)!=(c[d+8>>2]|0)){h=c[b+8>>2]|0;Xd[c[(c[h>>2]|0)+28>>2]&15](h,d,e,f);i=g;return}h=d+16|0;b=c[h>>2]|0;if((b|0)==0){c[h>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;i=g;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;i=g;return}e=d+24|0;if((c[e>>2]|0)!=2){i=g;return}c[e>>2]=f;i=g;return}function js(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;if((b|0)==(c[d+8>>2]|0)){h=d+16|0;j=c[h>>2]|0;if((j|0)==0){c[h>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;i=g;return}if((j|0)!=(e|0)){j=d+36|0;c[j>>2]=(c[j>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;i=g;return}j=d+24|0;if((c[j>>2]|0)!=2){i=g;return}c[j>>2]=f;i=g;return}j=c[b+12>>2]|0;h=b+(j<<3)+16|0;k=c[b+20>>2]|0;l=k>>8;if((k&1|0)==0){m=l}else{m=c[(c[e>>2]|0)+l>>2]|0}l=c[b+16>>2]|0;Xd[c[(c[l>>2]|0)+28>>2]&15](l,d,e+m|0,(k&2|0)!=0?f:2);if((j|0)<=1){i=g;return}j=d+54|0;k=b+24|0;while(1){b=c[k+4>>2]|0;m=b>>8;if((b&1|0)==0){n=m}else{n=c[(c[e>>2]|0)+m>>2]|0}m=c[k>>2]|0;Xd[c[(c[m>>2]|0)+28>>2]&15](m,d,e+n|0,(b&2|0)!=0?f:2);if((a[j]|0)!=0){o=16;break}b=k+8|0;if(b>>>0<h>>>0){k=b}else{o=16;break}}if((o|0)==16){i=g;return}}function ks(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=i;i=i+64|0;j=h;k=c[d>>2]|0;l=d+(c[k+ -8>>2]|0)|0;m=c[k+ -4>>2]|0;c[j>>2]=f;c[j+4>>2]=d;c[j+8>>2]=e;c[j+12>>2]=g;g=j+16|0;e=j+20|0;d=j+24|0;k=j+28|0;n=j+32|0;o=j+40|0;p=(m|0)==(f|0);f=g+0|0;q=f+36|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(q|0));b[g+36>>1]=0;a[g+38|0]=0;if(p){c[j+48>>2]=1;Nd[c[(c[m>>2]|0)+20>>2]&31](m,j,l,l,1,0);r=(c[d>>2]|0)==1?l:0;i=h;return r|0}Bd[c[(c[m>>2]|0)+24>>2]&3](m,j,l,1,0);l=c[j+36>>2]|0;if((l|0)==0){if((c[o>>2]|0)!=1){r=0;i=h;return r|0}if((c[k>>2]|0)!=1){r=0;i=h;return r|0}r=(c[n>>2]|0)==1?c[e>>2]|0:0;i=h;return r|0}else if((l|0)==1){if((c[d>>2]|0)!=1){if((c[o>>2]|0)!=0){r=0;i=h;return r|0}if((c[k>>2]|0)!=1){r=0;i=h;return r|0}if((c[n>>2]|0)!=1){r=0;i=h;return r|0}}r=c[g>>2]|0;i=h;return r|0}else{r=0;i=h;return r|0}return 0}



function Ul(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;f=i;i=i+224|0;m=f+198|0;n=f+196|0;o=f+4|0;p=f+16|0;q=f+28|0;r=f+32|0;s=f;t=f+192|0;u=c[j+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==0){v=0}else if((u|0)==8){v=16}else{v=10}Gm(o,j,m,n);c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;ak(p,10,0);if((a[p]&1)==0){j=p+1|0;w=j;x=p+8|0;y=j}else{j=p+8|0;w=p+1|0;x=j;y=c[j>>2]|0}c[q>>2]=y;c[s>>2]=r;c[t>>2]=0;j=p+4|0;u=a[n]|0;n=c[g>>2]|0;z=y;a:while(1){if((n|0)!=0){if((c[n+12>>2]|0)==(c[n+16>>2]|0)?(Fd[c[(c[n>>2]|0)+36>>2]&127](n)|0)==-1:0){c[g>>2]=0;A=0}else{A=n}}else{A=0}y=(A|0)==0;B=c[h>>2]|0;do{if((B|0)!=0){if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){if(y){C=B;break}else{D=B;E=z;break a}}if(!((Fd[c[(c[B>>2]|0)+36>>2]&127](B)|0)==-1)){if(y){C=B;break}else{D=B;E=z;break a}}else{c[h>>2]=0;F=18;break}}else{F=18}}while(0);if((F|0)==18){F=0;if(y){D=0;E=z;break}else{C=0}}B=a[p]|0;G=(B&1)==0;if(G){H=(B&255)>>>1}else{H=c[j>>2]|0}if(((c[q>>2]|0)-z|0)==(H|0)){if(G){I=(B&255)>>>1;J=(B&255)>>>1}else{B=c[j>>2]|0;I=B;J=B}ak(p,I<<1,0);if((a[p]&1)==0){K=10}else{K=(c[p>>2]&-2)+ -1|0}ak(p,K,0);if((a[p]&1)==0){L=w}else{L=c[x>>2]|0}c[q>>2]=L+J;M=L}else{M=z}B=A+12|0;G=c[B>>2]|0;N=A+16|0;if((G|0)==(c[N>>2]|0)){O=Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0}else{O=d[G]|0}if((gm(O&255,v,M,q,t,u,o,r,s,m)|0)!=0){D=C;E=M;break}G=c[B>>2]|0;if((G|0)==(c[N>>2]|0)){Fd[c[(c[A>>2]|0)+40>>2]&127](A)|0;n=A;z=M;continue}else{c[B>>2]=G+1;n=A;z=M;continue}}M=a[o]|0;if((M&1)==0){P=(M&255)>>>1}else{P=c[o+4>>2]|0}if((P|0)!=0?(P=c[s>>2]|0,(P-r|0)<160):0){M=c[t>>2]|0;c[s>>2]=P+4;c[P>>2]=M}b[l>>1]=yr(E,c[q>>2]|0,k,v)|0;To(o,r,c[s>>2]|0,k);if((A|0)!=0){if((c[A+12>>2]|0)==(c[A+16>>2]|0)?(Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0)==-1:0){c[g>>2]=0;Q=0}else{Q=A}}else{Q=0}A=(Q|0)==0;do{if((D|0)!=0){if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(!A){break}c[e>>2]=Q;Zj(p);Zj(o);i=f;return}if((Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0)==-1){c[h>>2]=0;F=54;break}if(A^(D|0)==0){c[e>>2]=Q;Zj(p);Zj(o);i=f;return}}else{F=54}}while(0);if((F|0)==54?!A:0){c[e>>2]=Q;Zj(p);Zj(o);i=f;return}c[k>>2]=c[k>>2]|2;c[e>>2]=Q;Zj(p);Zj(o);i=f;return}function Vl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];Wl(a,0,k,j,f,g,h);i=b;return}function Wl(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;e=i;i=i+224|0;l=e+198|0;m=e+196|0;n=e+4|0;o=e+16|0;p=e+28|0;q=e+32|0;r=e;s=e+192|0;t=c[h+4>>2]&74;if((t|0)==0){u=0}else if((t|0)==64){u=8}else if((t|0)==8){u=16}else{u=10}Gm(n,h,l,m);c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;ak(o,10,0);if((a[o]&1)==0){h=o+1|0;v=h;w=o+8|0;x=h}else{h=o+8|0;v=o+1|0;w=h;x=c[h>>2]|0}c[p>>2]=x;c[r>>2]=q;c[s>>2]=0;h=o+4|0;t=a[m]|0;m=c[f>>2]|0;y=x;a:while(1){if((m|0)!=0){if((c[m+12>>2]|0)==(c[m+16>>2]|0)?(Fd[c[(c[m>>2]|0)+36>>2]&127](m)|0)==-1:0){c[f>>2]=0;z=0}else{z=m}}else{z=0}x=(z|0)==0;A=c[g>>2]|0;do{if((A|0)!=0){if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(x){B=A;break}else{C=A;D=y;break a}}if(!((Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0)==-1)){if(x){B=A;break}else{C=A;D=y;break a}}else{c[g>>2]=0;E=18;break}}else{E=18}}while(0);if((E|0)==18){E=0;if(x){C=0;D=y;break}else{B=0}}A=a[o]|0;F=(A&1)==0;if(F){G=(A&255)>>>1}else{G=c[h>>2]|0}if(((c[p>>2]|0)-y|0)==(G|0)){if(F){H=(A&255)>>>1;I=(A&255)>>>1}else{A=c[h>>2]|0;H=A;I=A}ak(o,H<<1,0);if((a[o]&1)==0){J=10}else{J=(c[o>>2]&-2)+ -1|0}ak(o,J,0);if((a[o]&1)==0){K=v}else{K=c[w>>2]|0}c[p>>2]=K+I;L=K}else{L=y}A=z+12|0;F=c[A>>2]|0;M=z+16|0;if((F|0)==(c[M>>2]|0)){N=Fd[c[(c[z>>2]|0)+36>>2]&127](z)|0}else{N=d[F]|0}if((gm(N&255,u,L,p,s,t,n,q,r,l)|0)!=0){C=B;D=L;break}F=c[A>>2]|0;if((F|0)==(c[M>>2]|0)){Fd[c[(c[z>>2]|0)+40>>2]&127](z)|0;m=z;y=L;continue}else{c[A>>2]=F+1;m=z;y=L;continue}}L=a[n]|0;if((L&1)==0){O=(L&255)>>>1}else{O=c[n+4>>2]|0}if((O|0)!=0?(O=c[r>>2]|0,(O-q|0)<160):0){L=c[s>>2]|0;c[r>>2]=O+4;c[O>>2]=L}c[k>>2]=xr(D,c[p>>2]|0,j,u)|0;To(n,q,c[r>>2]|0,j);if((z|0)!=0){if((c[z+12>>2]|0)==(c[z+16>>2]|0)?(Fd[c[(c[z>>2]|0)+36>>2]&127](z)|0)==-1:0){c[f>>2]=0;P=0}else{P=z}}else{P=0}z=(P|0)==0;do{if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(!z){break}c[b>>2]=P;Zj(o);Zj(n);i=e;return}if((Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1){c[g>>2]=0;E=54;break}if(z^(C|0)==0){c[b>>2]=P;Zj(o);Zj(n);i=e;return}}else{E=54}}while(0);if((E|0)==54?!z:0){c[b>>2]=P;Zj(o);Zj(n);i=e;return}c[j>>2]=c[j>>2]|2;c[b>>2]=P;Zj(o);Zj(n);i=e;return}function Xl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];Yl(a,0,k,j,f,g,h);i=b;return}function Yl(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;e=i;i=i+224|0;l=e+198|0;m=e+196|0;n=e+4|0;o=e+16|0;p=e+28|0;q=e+32|0;r=e;s=e+192|0;t=c[h+4>>2]&74;if((t|0)==64){u=8}else if((t|0)==0){u=0}else if((t|0)==8){u=16}else{u=10}Gm(n,h,l,m);c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;ak(o,10,0);if((a[o]&1)==0){h=o+1|0;v=h;w=o+8|0;x=h}else{h=o+8|0;v=o+1|0;w=h;x=c[h>>2]|0}c[p>>2]=x;c[r>>2]=q;c[s>>2]=0;h=o+4|0;t=a[m]|0;m=c[f>>2]|0;y=x;a:while(1){if((m|0)!=0){if((c[m+12>>2]|0)==(c[m+16>>2]|0)?(Fd[c[(c[m>>2]|0)+36>>2]&127](m)|0)==-1:0){c[f>>2]=0;z=0}else{z=m}}else{z=0}x=(z|0)==0;A=c[g>>2]|0;do{if((A|0)!=0){if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(x){B=A;break}else{C=A;D=y;break a}}if(!((Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0)==-1)){if(x){B=A;break}else{C=A;D=y;break a}}else{c[g>>2]=0;E=18;break}}else{E=18}}while(0);if((E|0)==18){E=0;if(x){C=0;D=y;break}else{B=0}}A=a[o]|0;F=(A&1)==0;if(F){G=(A&255)>>>1}else{G=c[h>>2]|0}if(((c[p>>2]|0)-y|0)==(G|0)){if(F){H=(A&255)>>>1;I=(A&255)>>>1}else{A=c[h>>2]|0;H=A;I=A}ak(o,H<<1,0);if((a[o]&1)==0){J=10}else{J=(c[o>>2]&-2)+ -1|0}ak(o,J,0);if((a[o]&1)==0){K=v}else{K=c[w>>2]|0}c[p>>2]=K+I;L=K}else{L=y}A=z+12|0;F=c[A>>2]|0;M=z+16|0;if((F|0)==(c[M>>2]|0)){N=Fd[c[(c[z>>2]|0)+36>>2]&127](z)|0}else{N=d[F]|0}if((gm(N&255,u,L,p,s,t,n,q,r,l)|0)!=0){C=B;D=L;break}F=c[A>>2]|0;if((F|0)==(c[M>>2]|0)){Fd[c[(c[z>>2]|0)+40>>2]&127](z)|0;m=z;y=L;continue}else{c[A>>2]=F+1;m=z;y=L;continue}}L=a[n]|0;if((L&1)==0){O=(L&255)>>>1}else{O=c[n+4>>2]|0}if((O|0)!=0?(O=c[r>>2]|0,(O-q|0)<160):0){L=c[s>>2]|0;c[r>>2]=O+4;c[O>>2]=L}c[k>>2]=wr(D,c[p>>2]|0,j,u)|0;To(n,q,c[r>>2]|0,j);if((z|0)!=0){if((c[z+12>>2]|0)==(c[z+16>>2]|0)?(Fd[c[(c[z>>2]|0)+36>>2]&127](z)|0)==-1:0){c[f>>2]=0;P=0}else{P=z}}else{P=0}z=(P|0)==0;do{if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(!z){break}c[b>>2]=P;Zj(o);Zj(n);i=e;return}if((Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1){c[g>>2]=0;E=54;break}if(z^(C|0)==0){c[b>>2]=P;Zj(o);Zj(n);i=e;return}}else{E=54}}while(0);if((E|0)==54?!z:0){c[b>>2]=P;Zj(o);Zj(n);i=e;return}c[j>>2]=c[j>>2]|2;c[b>>2]=P;Zj(o);Zj(n);i=e;return}function Zl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];_l(a,0,k,j,f,g,h);i=b;return}function _l(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;e=i;i=i+224|0;l=e+198|0;m=e+196|0;n=e+4|0;o=e+16|0;p=e+28|0;q=e+32|0;r=e;s=e+192|0;t=c[h+4>>2]&74;if((t|0)==0){u=0}else if((t|0)==64){u=8}else if((t|0)==8){u=16}else{u=10}Gm(n,h,l,m);c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;ak(o,10,0);if((a[o]&1)==0){h=o+1|0;v=h;w=o+8|0;x=h}else{h=o+8|0;v=o+1|0;w=h;x=c[h>>2]|0}c[p>>2]=x;c[r>>2]=q;c[s>>2]=0;h=o+4|0;t=a[m]|0;m=c[f>>2]|0;y=x;a:while(1){if((m|0)!=0){if((c[m+12>>2]|0)==(c[m+16>>2]|0)?(Fd[c[(c[m>>2]|0)+36>>2]&127](m)|0)==-1:0){c[f>>2]=0;z=0}else{z=m}}else{z=0}x=(z|0)==0;A=c[g>>2]|0;do{if((A|0)!=0){if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(x){B=A;break}else{C=A;D=y;break a}}if(!((Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0)==-1)){if(x){B=A;break}else{C=A;D=y;break a}}else{c[g>>2]=0;E=18;break}}else{E=18}}while(0);if((E|0)==18){E=0;if(x){C=0;D=y;break}else{B=0}}A=a[o]|0;F=(A&1)==0;if(F){G=(A&255)>>>1}else{G=c[h>>2]|0}if(((c[p>>2]|0)-y|0)==(G|0)){if(F){H=(A&255)>>>1;I=(A&255)>>>1}else{A=c[h>>2]|0;H=A;I=A}ak(o,H<<1,0);if((a[o]&1)==0){K=10}else{K=(c[o>>2]&-2)+ -1|0}ak(o,K,0);if((a[o]&1)==0){L=v}else{L=c[w>>2]|0}c[p>>2]=L+I;M=L}else{M=y}A=z+12|0;F=c[A>>2]|0;N=z+16|0;if((F|0)==(c[N>>2]|0)){O=Fd[c[(c[z>>2]|0)+36>>2]&127](z)|0}else{O=d[F]|0}if((gm(O&255,u,M,p,s,t,n,q,r,l)|0)!=0){C=B;D=M;break}F=c[A>>2]|0;if((F|0)==(c[N>>2]|0)){Fd[c[(c[z>>2]|0)+40>>2]&127](z)|0;m=z;y=M;continue}else{c[A>>2]=F+1;m=z;y=M;continue}}M=a[n]|0;if((M&1)==0){P=(M&255)>>>1}else{P=c[n+4>>2]|0}if((P|0)!=0?(P=c[r>>2]|0,(P-q|0)<160):0){M=c[s>>2]|0;c[r>>2]=P+4;c[P>>2]=M}M=vr(D,c[p>>2]|0,j,u)|0;u=k;c[u>>2]=M;c[u+4>>2]=J;To(n,q,c[r>>2]|0,j);if((z|0)!=0){if((c[z+12>>2]|0)==(c[z+16>>2]|0)?(Fd[c[(c[z>>2]|0)+36>>2]&127](z)|0)==-1:0){c[f>>2]=0;Q=0}else{Q=z}}else{Q=0}z=(Q|0)==0;do{if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(!z){break}c[b>>2]=Q;Zj(o);Zj(n);i=e;return}if((Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1){c[g>>2]=0;E=54;break}if(z^(C|0)==0){c[b>>2]=Q;Zj(o);Zj(n);i=e;return}}else{E=54}}while(0);if((E|0)==54?!z:0){c[b>>2]=Q;Zj(o);Zj(n);i=e;return}c[j>>2]=c[j>>2]|2;c[b>>2]=Q;Zj(o);Zj(n);i=e;return}function $l(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];am(a,0,k,j,f,g,h);i=b;return}function am(b,e,f,h,j,k,l){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;e=i;i=i+240|0;m=e+200|0;n=e+199|0;o=e+198|0;p=e+8|0;q=e+20|0;r=e+192|0;s=e+32|0;t=e;u=e+4|0;v=e+197|0;w=e+196|0;Hm(p,j,m,n,o);c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;ak(q,10,0);if((a[q]&1)==0){j=q+1|0;x=j;y=q+8|0;z=j}else{j=q+8|0;x=q+1|0;y=j;z=c[j>>2]|0}c[r>>2]=z;c[t>>2]=s;c[u>>2]=0;a[v]=1;a[w]=69;j=q+4|0;A=a[n]|0;n=a[o]|0;o=c[f>>2]|0;B=z;a:while(1){if((o|0)!=0){if((c[o+12>>2]|0)==(c[o+16>>2]|0)?(Fd[c[(c[o>>2]|0)+36>>2]&127](o)|0)==-1:0){c[f>>2]=0;C=0}else{C=o}}else{C=0}z=(C|0)==0;D=c[h>>2]|0;do{if((D|0)!=0){if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(z){E=D;break}else{F=D;G=B;break a}}if(!((Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0)==-1)){if(z){E=D;break}else{F=D;G=B;break a}}else{c[h>>2]=0;H=14;break}}else{H=14}}while(0);if((H|0)==14){H=0;if(z){F=0;G=B;break}else{E=0}}D=a[q]|0;I=(D&1)==0;if(I){J=(D&255)>>>1}else{J=c[j>>2]|0}if(((c[r>>2]|0)-B|0)==(J|0)){if(I){K=(D&255)>>>1;L=(D&255)>>>1}else{D=c[j>>2]|0;K=D;L=D}ak(q,K<<1,0);if((a[q]&1)==0){M=10}else{M=(c[q>>2]&-2)+ -1|0}ak(q,M,0);if((a[q]&1)==0){N=x}else{N=c[y>>2]|0}c[r>>2]=N+L;O=N}else{O=B}D=C+12|0;I=c[D>>2]|0;P=C+16|0;if((I|0)==(c[P>>2]|0)){Q=Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0}else{Q=d[I]|0}if((Im(Q&255,v,w,O,r,A,n,p,s,t,u,m)|0)!=0){F=E;G=O;break}I=c[D>>2]|0;if((I|0)==(c[P>>2]|0)){Fd[c[(c[C>>2]|0)+40>>2]&127](C)|0;o=C;B=O;continue}else{c[D>>2]=I+1;o=C;B=O;continue}}O=a[p]|0;if((O&1)==0){R=(O&255)>>>1}else{R=c[p+4>>2]|0}if(((R|0)!=0?(a[v]|0)!=0:0)?(v=c[t>>2]|0,(v-s|0)<160):0){R=c[u>>2]|0;c[t>>2]=v+4;c[v>>2]=R}g[l>>2]=+ur(G,c[r>>2]|0,k);To(p,s,c[t>>2]|0,k);if((C|0)!=0){if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[f>>2]=0;S=0}else{S=C}}else{S=0}C=(S|0)==0;do{if((F|0)!=0){if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(!C){break}c[b>>2]=S;Zj(q);Zj(p);i=e;return}if((Fd[c[(c[F>>2]|0)+36>>2]&127](F)|0)==-1){c[h>>2]=0;H=51;break}if(C^(F|0)==0){c[b>>2]=S;Zj(q);Zj(p);i=e;return}}else{H=51}}while(0);if((H|0)==51?!C:0){c[b>>2]=S;Zj(q);Zj(p);i=e;return}c[k>>2]=c[k>>2]|2;c[b>>2]=S;Zj(q);Zj(p);i=e;return}function bm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];cm(a,0,k,j,f,g,h);i=b;return}function cm(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;e=i;i=i+240|0;m=e+200|0;n=e+199|0;o=e+198|0;p=e+8|0;q=e+20|0;r=e+192|0;s=e+32|0;t=e;u=e+4|0;v=e+197|0;w=e+196|0;Hm(p,j,m,n,o);c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;ak(q,10,0);if((a[q]&1)==0){j=q+1|0;x=j;y=q+8|0;z=j}else{j=q+8|0;x=q+1|0;y=j;z=c[j>>2]|0}c[r>>2]=z;c[t>>2]=s;c[u>>2]=0;a[v]=1;a[w]=69;j=q+4|0;A=a[n]|0;n=a[o]|0;o=c[f>>2]|0;B=z;a:while(1){if((o|0)!=0){if((c[o+12>>2]|0)==(c[o+16>>2]|0)?(Fd[c[(c[o>>2]|0)+36>>2]&127](o)|0)==-1:0){c[f>>2]=0;C=0}else{C=o}}else{C=0}z=(C|0)==0;D=c[g>>2]|0;do{if((D|0)!=0){if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(z){E=D;break}else{F=D;G=B;break a}}if(!((Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0)==-1)){if(z){E=D;break}else{F=D;G=B;break a}}else{c[g>>2]=0;H=14;break}}else{H=14}}while(0);if((H|0)==14){H=0;if(z){F=0;G=B;break}else{E=0}}D=a[q]|0;I=(D&1)==0;if(I){J=(D&255)>>>1}else{J=c[j>>2]|0}if(((c[r>>2]|0)-B|0)==(J|0)){if(I){K=(D&255)>>>1;L=(D&255)>>>1}else{D=c[j>>2]|0;K=D;L=D}ak(q,K<<1,0);if((a[q]&1)==0){M=10}else{M=(c[q>>2]&-2)+ -1|0}ak(q,M,0);if((a[q]&1)==0){N=x}else{N=c[y>>2]|0}c[r>>2]=N+L;O=N}else{O=B}D=C+12|0;I=c[D>>2]|0;P=C+16|0;if((I|0)==(c[P>>2]|0)){Q=Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0}else{Q=d[I]|0}if((Im(Q&255,v,w,O,r,A,n,p,s,t,u,m)|0)!=0){F=E;G=O;break}I=c[D>>2]|0;if((I|0)==(c[P>>2]|0)){Fd[c[(c[C>>2]|0)+40>>2]&127](C)|0;o=C;B=O;continue}else{c[D>>2]=I+1;o=C;B=O;continue}}O=a[p]|0;if((O&1)==0){R=(O&255)>>>1}else{R=c[p+4>>2]|0}if(((R|0)!=0?(a[v]|0)!=0:0)?(v=c[t>>2]|0,(v-s|0)<160):0){R=c[u>>2]|0;c[t>>2]=v+4;c[v>>2]=R}h[l>>3]=+tr(G,c[r>>2]|0,k);To(p,s,c[t>>2]|0,k);if((C|0)!=0){if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[f>>2]=0;S=0}else{S=C}}else{S=0}C=(S|0)==0;do{if((F|0)!=0){if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(!C){break}c[b>>2]=S;Zj(q);Zj(p);i=e;return}if((Fd[c[(c[F>>2]|0)+36>>2]&127](F)|0)==-1){c[g>>2]=0;H=51;break}if(C^(F|0)==0){c[b>>2]=S;Zj(q);Zj(p);i=e;return}}else{H=51}}while(0);if((H|0)==51?!C:0){c[b>>2]=S;Zj(q);Zj(p);i=e;return}c[k>>2]=c[k>>2]|2;c[b>>2]=S;Zj(q);Zj(p);i=e;return}function dm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];em(a,0,k,j,f,g,h);i=b;return}function em(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;e=i;i=i+240|0;m=e+200|0;n=e+199|0;o=e+198|0;p=e+8|0;q=e+20|0;r=e+192|0;s=e+32|0;t=e;u=e+4|0;v=e+197|0;w=e+196|0;Hm(p,j,m,n,o);c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;ak(q,10,0);if((a[q]&1)==0){j=q+1|0;x=j;y=q+8|0;z=j}else{j=q+8|0;x=q+1|0;y=j;z=c[j>>2]|0}c[r>>2]=z;c[t>>2]=s;c[u>>2]=0;a[v]=1;a[w]=69;j=q+4|0;A=a[n]|0;n=a[o]|0;o=c[f>>2]|0;B=z;a:while(1){if((o|0)!=0){if((c[o+12>>2]|0)==(c[o+16>>2]|0)?(Fd[c[(c[o>>2]|0)+36>>2]&127](o)|0)==-1:0){c[f>>2]=0;C=0}else{C=o}}else{C=0}z=(C|0)==0;D=c[g>>2]|0;do{if((D|0)!=0){if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(z){E=D;break}else{F=D;G=B;break a}}if(!((Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0)==-1)){if(z){E=D;break}else{F=D;G=B;break a}}else{c[g>>2]=0;H=14;break}}else{H=14}}while(0);if((H|0)==14){H=0;if(z){F=0;G=B;break}else{E=0}}D=a[q]|0;I=(D&1)==0;if(I){J=(D&255)>>>1}else{J=c[j>>2]|0}if(((c[r>>2]|0)-B|0)==(J|0)){if(I){K=(D&255)>>>1;L=(D&255)>>>1}else{D=c[j>>2]|0;K=D;L=D}ak(q,K<<1,0);if((a[q]&1)==0){M=10}else{M=(c[q>>2]&-2)+ -1|0}ak(q,M,0);if((a[q]&1)==0){N=x}else{N=c[y>>2]|0}c[r>>2]=N+L;O=N}else{O=B}D=C+12|0;I=c[D>>2]|0;P=C+16|0;if((I|0)==(c[P>>2]|0)){Q=Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0}else{Q=d[I]|0}if((Im(Q&255,v,w,O,r,A,n,p,s,t,u,m)|0)!=0){F=E;G=O;break}I=c[D>>2]|0;if((I|0)==(c[P>>2]|0)){Fd[c[(c[C>>2]|0)+40>>2]&127](C)|0;o=C;B=O;continue}else{c[D>>2]=I+1;o=C;B=O;continue}}O=a[p]|0;if((O&1)==0){R=(O&255)>>>1}else{R=c[p+4>>2]|0}if(((R|0)!=0?(a[v]|0)!=0:0)?(v=c[t>>2]|0,(v-s|0)<160):0){R=c[u>>2]|0;c[t>>2]=v+4;c[v>>2]=R}h[l>>3]=+sr(G,c[r>>2]|0,k);To(p,s,c[t>>2]|0,k);if((C|0)!=0){if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[f>>2]=0;S=0}else{S=C}}else{S=0}C=(S|0)==0;do{if((F|0)!=0){if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(!C){break}c[b>>2]=S;Zj(q);Zj(p);i=e;return}if((Fd[c[(c[F>>2]|0)+36>>2]&127](F)|0)==-1){c[g>>2]=0;H=51;break}if(C^(F|0)==0){c[b>>2]=S;Zj(q);Zj(p);i=e;return}}else{H=51}}while(0);if((H|0)==51?!C:0){c[b>>2]=S;Zj(q);Zj(p);i=e;return}c[k>>2]=c[k>>2]|2;c[b>>2]=S;Zj(q);Zj(p);i=e;return}function fm(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;i=i+240|0;l=e;m=e+200|0;n=e+12|0;o=e+24|0;p=e+28|0;q=e+40|0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;sk(o,h);h=c[o>>2]|0;if(!((c[3266]|0)==-1)){c[l>>2]=13064;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13064,l,162)}r=(c[13068>>2]|0)+ -1|0;s=c[h+8>>2]|0;if(!((c[h+12>>2]|0)-s>>2>>>0>r>>>0)){t=fc(4)|0;Yr(t);td(t|0,21024,137)}h=c[s+(r<<2)>>2]|0;if((h|0)==0){t=fc(4)|0;Yr(t);td(t|0,21024,137)}Td[c[(c[h>>2]|0)+32>>2]&7](h,11608,11634|0,m)|0;Aj(c[o>>2]|0)|0;c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;ak(p,10,0);if((a[p]&1)==0){o=p+1|0;u=o;v=p+8|0;w=o}else{o=p+8|0;u=p+1|0;v=o;w=c[o>>2]|0}o=p+4|0;h=m+24|0;t=m+25|0;r=q;s=m+26|0;x=m;y=n+4|0;z=c[f>>2]|0;A=q;q=0;B=w;C=w;a:while(1){if((z|0)!=0){if((c[z+12>>2]|0)==(c[z+16>>2]|0)?(Fd[c[(c[z>>2]|0)+36>>2]&127](z)|0)==-1:0){c[f>>2]=0;D=0}else{D=z}}else{D=0}w=(D|0)==0;E=c[g>>2]|0;do{if((E|0)!=0){if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){if(w){break}else{F=C;break a}}if(!((Fd[c[(c[E>>2]|0)+36>>2]&127](E)|0)==-1)){if(w){break}else{F=C;break a}}else{c[g>>2]=0;G=19;break}}else{G=19}}while(0);if((G|0)==19?(G=0,w):0){F=C;break}E=a[p]|0;H=(E&1)==0;if(H){I=(E&255)>>>1}else{I=c[o>>2]|0}if((B-C|0)==(I|0)){if(H){J=(E&255)>>>1;K=(E&255)>>>1}else{E=c[o>>2]|0;J=E;K=E}ak(p,J<<1,0);if((a[p]&1)==0){L=10}else{L=(c[p>>2]&-2)+ -1|0}ak(p,L,0);if((a[p]&1)==0){M=u}else{M=c[v>>2]|0}N=M+K|0;O=M}else{N=B;O=C}E=c[D+12>>2]|0;if((E|0)==(c[D+16>>2]|0)){P=Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0}else{P=d[E]|0}E=P&255;H=(N|0)==(O|0);do{if(H){Q=(a[h]|0)==E<<24>>24;if(!Q?!((a[t]|0)==E<<24>>24):0){G=40;break}a[N]=Q?43:45;R=N+1|0;S=A;T=0}else{G=40}}while(0);do{if((G|0)==40){G=0;w=a[n]|0;if((w&1)==0){U=(w&255)>>>1}else{U=c[y>>2]|0}if((U|0)!=0&E<<24>>24==0){if((A-r|0)>=160){R=N;S=A;T=q;break}c[A>>2]=q;R=N;S=A+4|0;T=0;break}else{V=m}while(1){w=V+1|0;if((a[V]|0)==E<<24>>24){W=V;break}if((w|0)==(s|0)){W=s;break}else{V=w}}w=W-x|0;if((w|0)>23){F=O;break a}if((w|0)<22){a[N]=a[11608+w|0]|0;R=N+1|0;S=A;T=q+1|0;break}if(H){F=N;break a}if((N-O|0)>=3){F=O;break a}if((a[N+ -1|0]|0)!=48){F=O;break a}a[N]=a[11608+w|0]|0;R=N+1|0;S=A;T=0}}while(0);H=c[f>>2]|0;E=H+12|0;w=c[E>>2]|0;if((w|0)==(c[H+16>>2]|0)){Fd[c[(c[H>>2]|0)+40>>2]&127](H)|0;z=H;A=S;q=T;B=R;C=O;continue}else{c[E>>2]=w+1;z=H;A=S;q=T;B=R;C=O;continue}}a[F+3|0]=0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}O=c[3238]|0;c[l>>2]=k;if((hm(F,O,11648,l)|0)!=1){c[j>>2]=4}l=c[f>>2]|0;if((l|0)!=0){if((c[l+12>>2]|0)==(c[l+16>>2]|0)?(Fd[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1:0){c[f>>2]=0;X=0}else{X=l}}else{X=0}l=(X|0)==0;f=c[g>>2]|0;do{if((f|0)!=0){if((c[f+12>>2]|0)!=(c[f+16>>2]|0)){if(!l){break}c[b>>2]=X;Zj(p);Zj(n);i=e;return}if((Fd[c[(c[f>>2]|0)+36>>2]&127](f)|0)==-1){c[g>>2]=0;G=72;break}if(l^(f|0)==0){c[b>>2]=X;Zj(p);Zj(n);i=e;return}}else{G=72}}while(0);if((G|0)==72?!l:0){c[b>>2]=X;Zj(p);Zj(n);i=e;return}c[j>>2]=c[j>>2]|2;c[b>>2]=X;Zj(p);Zj(n);i=e;return}function gm(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0;n=i;o=c[f>>2]|0;p=(o|0)==(e|0);do{if(p){q=(a[m+24|0]|0)==b<<24>>24;if(!q?!((a[m+25|0]|0)==b<<24>>24):0){break}c[f>>2]=e+1;a[e]=q?43:45;c[g>>2]=0;r=0;i=n;return r|0}}while(0);q=a[j]|0;if((q&1)==0){s=(q&255)>>>1}else{s=c[j+4>>2]|0}if((s|0)!=0&b<<24>>24==h<<24>>24){h=c[l>>2]|0;if((h-k|0)>=160){r=0;i=n;return r|0}k=c[g>>2]|0;c[l>>2]=h+4;c[h>>2]=k;c[g>>2]=0;r=0;i=n;return r|0}k=m+26|0;h=m;while(1){l=h+1|0;if((a[h]|0)==b<<24>>24){t=h;break}if((l|0)==(k|0)){t=k;break}else{h=l}}h=t-m|0;if((h|0)>23){r=-1;i=n;return r|0}if((d|0)==16){if((h|0)>=22){if(p){r=-1;i=n;return r|0}if((o-e|0)>=3){r=-1;i=n;return r|0}if((a[o+ -1|0]|0)!=48){r=-1;i=n;return r|0}c[g>>2]=0;e=a[11608+h|0]|0;c[f>>2]=o+1;a[o]=e;r=0;i=n;return r|0}}else if((d|0)==10|(d|0)==8?(h|0)>=(d|0):0){r=-1;i=n;return r|0}d=a[11608+h|0]|0;c[f>>2]=o+1;a[o]=d;c[g>>2]=(c[g>>2]|0)+1;r=0;i=n;return r|0}function hm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;e=lc(b|0)|0;b=Ka(a|0,d|0,g|0)|0;if((e|0)==0){i=f;return b|0}lc(e|0)|0;i=f;return b|0}function im(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function jm(a){a=a|0;return}function km(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;k=i;i=i+80|0;l=k;m=k+64|0;n=k+60|0;o=k+56|0;p=k+52|0;q=k+68|0;r=k+16|0;s=k+12|0;t=k+24|0;u=k+48|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;c[p>>2]=c[e>>2];c[q>>2]=c[f>>2];c[m+0>>2]=c[p+0>>2];c[l+0>>2]=c[q+0>>2];Pd[v&63](o,d,m,l,g,h,n);m=c[o>>2]|0;c[e>>2]=m;o=c[n>>2]|0;if((o|0)==1){a[j]=1}else if((o|0)==0){a[j]=0}else{a[j]=1;c[h>>2]=4}c[b>>2]=m;i=k;return}sk(r,g);m=c[r>>2]|0;if(!((c[3264]|0)==-1)){c[l>>2]=13056;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13056,l,162)}o=(c[13060>>2]|0)+ -1|0;n=c[m+8>>2]|0;if(!((c[m+12>>2]|0)-n>>2>>>0>o>>>0)){w=fc(4)|0;Yr(w);td(w|0,21024,137)}m=c[n+(o<<2)>>2]|0;if((m|0)==0){w=fc(4)|0;Yr(w);td(w|0,21024,137)}Aj(c[r>>2]|0)|0;sk(s,g);g=c[s>>2]|0;if(!((c[3304]|0)==-1)){c[l>>2]=13216;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13216,l,162)}r=(c[13220>>2]|0)+ -1|0;w=c[g+8>>2]|0;if(!((c[g+12>>2]|0)-w>>2>>>0>r>>>0)){x=fc(4)|0;Yr(x);td(x|0,21024,137)}g=c[w+(r<<2)>>2]|0;if((g|0)==0){x=fc(4)|0;Yr(x);td(x|0,21024,137)}Aj(c[s>>2]|0)|0;Ed[c[(c[g>>2]|0)+24>>2]&63](t,g);Ed[c[(c[g>>2]|0)+28>>2]&63](t+12|0,g);c[u>>2]=c[f>>2];f=t+24|0;c[l+0>>2]=c[u+0>>2];a[j]=(lm(e,l,t,f,m,h,1)|0)==(t|0)|0;c[b>>2]=c[e>>2];jk(t+12|0);jk(t);i=k;return}function lm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0;k=i;i=i+112|0;l=k;m=(f-e|0)/12|0;if(m>>>0>100){n=rs(m)|0;if((n|0)==0){Ds()}else{o=n;p=n}}else{o=0;p=l}l=(e|0)==(f|0);if(l){q=0;r=m}else{n=e;s=0;t=m;m=p;while(1){u=a[n]|0;if((u&1)==0){v=(u&255)>>>1}else{v=c[n+4>>2]|0}if((v|0)==0){a[m]=2;w=s+1|0;x=t+ -1|0}else{a[m]=1;w=s;x=t}u=n+12|0;if((u|0)==(f|0)){q=w;r=x;break}else{n=u;s=w;t=x;m=m+1|0}}}m=0;x=q;q=r;a:while(1){r=c[b>>2]|0;do{if((r|0)!=0){t=c[r+12>>2]|0;if((t|0)==(c[r+16>>2]|0)){y=Fd[c[(c[r>>2]|0)+36>>2]&127](r)|0}else{y=c[t>>2]|0}if((y|0)==-1){c[b>>2]=0;z=1;break}else{z=(c[b>>2]|0)==0;break}}else{z=1}}while(0);r=c[d>>2]|0;if((r|0)!=0){t=c[r+12>>2]|0;if((t|0)==(c[r+16>>2]|0)){A=Fd[c[(c[r>>2]|0)+36>>2]&127](r)|0}else{A=c[t>>2]|0}if((A|0)==-1){c[d>>2]=0;B=0;C=1}else{B=r;C=0}}else{B=0;C=1}D=c[b>>2]|0;if(!((z^C)&(q|0)!=0)){break}r=c[D+12>>2]|0;if((r|0)==(c[D+16>>2]|0)){E=Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0}else{E=c[r>>2]|0}if(j){F=E}else{F=Sd[c[(c[g>>2]|0)+28>>2]&31](g,E)|0}r=m+1|0;if(l){m=r;continue}b:do{if(j){t=0;w=e;s=x;n=q;v=p;while(1){do{if((a[v]|0)==1){u=a[w]|0;G=(u&1)==0;if(G){H=w+4|0}else{H=c[w+8>>2]|0}if((F|0)!=(c[H+(m<<2)>>2]|0)){a[v]=0;I=t;J=s;K=n+ -1|0;break}if(G){L=(u&255)>>>1}else{L=c[w+4>>2]|0}if((L|0)==(r|0)){a[v]=2;I=1;J=s+1|0;K=n+ -1|0}else{I=1;J=s;K=n}}else{I=t;J=s;K=n}}while(0);u=w+12|0;if((u|0)==(f|0)){M=I;N=J;O=K;break b}t=I;w=u;s=J;n=K;v=v+1|0}}else{v=0;n=e;s=x;w=q;t=p;while(1){do{if((a[t]|0)==1){if((a[n]&1)==0){P=n+4|0}else{P=c[n+8>>2]|0}if((F|0)!=(Sd[c[(c[g>>2]|0)+28>>2]&31](g,c[P+(m<<2)>>2]|0)|0)){a[t]=0;Q=v;R=s;S=w+ -1|0;break}u=a[n]|0;if((u&1)==0){T=(u&255)>>>1}else{T=c[n+4>>2]|0}if((T|0)==(r|0)){a[t]=2;Q=1;R=s+1|0;S=w+ -1|0}else{Q=1;R=s;S=w}}else{Q=v;R=s;S=w}}while(0);u=n+12|0;if((u|0)==(f|0)){M=Q;N=R;O=S;break b}v=Q;n=u;s=R;w=S;t=t+1|0}}}while(0);if(!M){m=r;x=N;q=O;continue}t=c[b>>2]|0;w=t+12|0;s=c[w>>2]|0;if((s|0)==(c[t+16>>2]|0)){Fd[c[(c[t>>2]|0)+40>>2]&127](t)|0}else{c[w>>2]=s+4}if((O+N|0)>>>0<2){m=r;x=N;q=O;continue}else{U=e;V=N;W=p}while(1){if((a[W]|0)==2){s=a[U]|0;if((s&1)==0){X=(s&255)>>>1}else{X=c[U+4>>2]|0}if((X|0)!=(r|0)){a[W]=0;Y=V+ -1|0}else{Y=V}}else{Y=V}s=U+12|0;if((s|0)==(f|0)){m=r;x=Y;q=O;continue a}else{U=s;V=Y;W=W+1|0}}}do{if((D|0)!=0){W=c[D+12>>2]|0;if((W|0)==(c[D+16>>2]|0)){Z=Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0}else{Z=c[W>>2]|0}if((Z|0)==-1){c[b>>2]=0;_=1;break}else{_=(c[b>>2]|0)==0;break}}else{_=1}}while(0);do{if((B|0)!=0){b=c[B+12>>2]|0;if((b|0)==(c[B+16>>2]|0)){$=Fd[c[(c[B>>2]|0)+36>>2]&127](B)|0}else{$=c[b>>2]|0}if(!(($|0)==-1)){if(_){break}else{aa=87;break}}else{c[d>>2]=0;aa=85;break}}else{aa=85}}while(0);if((aa|0)==85?_:0){aa=87}if((aa|0)==87){c[h>>2]=c[h>>2]|2}c:do{if(!l){if((a[p]|0)==2){ba=e}else{_=e;d=p;while(1){$=_+12|0;B=d+1|0;if(($|0)==(f|0)){aa=92;break c}if((a[B]|0)==2){ba=$;break}else{_=$;d=B}}}}else{aa=92}}while(0);if((aa|0)==92){c[h>>2]=c[h>>2]|4;ba=f}if((o|0)==0){i=k;return ba|0}ss(o);i=k;return ba|0}function mm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];nm(a,0,k,j,f,g,h);i=b;return}function nm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+304|0;k=d+200|0;l=d;m=d+4|0;n=d+16|0;o=d+28|0;p=d+32|0;q=d+192|0;r=d+196|0;s=c[g+4>>2]&74;if((s|0)==0){t=0}else if((s|0)==8){t=16}else if((s|0)==64){t=8}else{t=10}Jm(m,g,k,l);c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;ak(n,10,0);if((a[n]&1)==0){g=n+1|0;u=g;v=n+8|0;w=g}else{g=n+8|0;u=n+1|0;v=g;w=c[g>>2]|0}c[o>>2]=w;c[q>>2]=p;c[r>>2]=0;g=n+4|0;s=c[l>>2]|0;l=c[e>>2]|0;x=w;a:while(1){if((l|0)!=0){w=c[l+12>>2]|0;if((w|0)==(c[l+16>>2]|0)){y=Fd[c[(c[l>>2]|0)+36>>2]&127](l)|0}else{y=c[w>>2]|0}if((y|0)==-1){c[e>>2]=0;z=1;A=0}else{z=0;A=l}}else{z=1;A=0}w=c[f>>2]|0;do{if((w|0)!=0){B=c[w+12>>2]|0;if((B|0)==(c[w+16>>2]|0)){C=Fd[c[(c[w>>2]|0)+36>>2]&127](w)|0}else{C=c[B>>2]|0}if(!((C|0)==-1)){if(z){D=w;break}else{E=w;F=x;break a}}else{c[f>>2]=0;G=21;break}}else{G=21}}while(0);if((G|0)==21){G=0;if(z){E=0;F=x;break}else{D=0}}w=a[n]|0;B=(w&1)==0;if(B){H=(w&255)>>>1}else{H=c[g>>2]|0}if(((c[o>>2]|0)-x|0)==(H|0)){if(B){I=(w&255)>>>1;J=(w&255)>>>1}else{w=c[g>>2]|0;I=w;J=w}ak(n,I<<1,0);if((a[n]&1)==0){K=10}else{K=(c[n>>2]&-2)+ -1|0}ak(n,K,0);if((a[n]&1)==0){L=u}else{L=c[v>>2]|0}c[o>>2]=L+J;M=L}else{M=x}w=A+12|0;B=c[w>>2]|0;N=A+16|0;if((B|0)==(c[N>>2]|0)){O=Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0}else{O=c[B>>2]|0}if((Fm(O,t,M,o,r,s,m,p,q,k)|0)!=0){E=D;F=M;break}B=c[w>>2]|0;if((B|0)==(c[N>>2]|0)){Fd[c[(c[A>>2]|0)+40>>2]&127](A)|0;l=A;x=M;continue}else{c[w>>2]=B+4;l=A;x=M;continue}}M=a[m]|0;if((M&1)==0){P=(M&255)>>>1}else{P=c[m+4>>2]|0}if((P|0)!=0?(P=c[q>>2]|0,(P-p|0)<160):0){M=c[r>>2]|0;c[q>>2]=P+4;c[P>>2]=M}c[j>>2]=Ar(F,c[o>>2]|0,h,t)|0;To(m,p,c[q>>2]|0,h);if((A|0)!=0){q=c[A+12>>2]|0;if((q|0)==(c[A+16>>2]|0)){Q=Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0}else{Q=c[q>>2]|0}if((Q|0)==-1){c[e>>2]=0;R=0;S=1}else{R=A;S=0}}else{R=0;S=1}do{if((E|0)!=0){A=c[E+12>>2]|0;if((A|0)==(c[E+16>>2]|0)){T=Fd[c[(c[E>>2]|0)+36>>2]&127](E)|0}else{T=c[A>>2]|0}if((T|0)==-1){c[f>>2]=0;G=60;break}if(S){c[b>>2]=R;Zj(n);Zj(m);i=d;return}}else{G=60}}while(0);if((G|0)==60?!S:0){c[b>>2]=R;Zj(n);Zj(m);i=d;return}c[h>>2]=c[h>>2]|2;c[b>>2]=R;Zj(n);Zj(m);i=d;return}function om(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];pm(a,0,k,j,f,g,h);i=b;return}function pm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+304|0;k=d+200|0;l=d;m=d+4|0;n=d+16|0;o=d+28|0;p=d+32|0;q=d+192|0;r=d+196|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}Jm(m,g,k,l);c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;ak(n,10,0);if((a[n]&1)==0){g=n+1|0;u=g;v=n+8|0;w=g}else{g=n+8|0;u=n+1|0;v=g;w=c[g>>2]|0}c[o>>2]=w;c[q>>2]=p;c[r>>2]=0;g=n+4|0;s=c[l>>2]|0;l=c[e>>2]|0;x=w;a:while(1){if((l|0)!=0){w=c[l+12>>2]|0;if((w|0)==(c[l+16>>2]|0)){y=Fd[c[(c[l>>2]|0)+36>>2]&127](l)|0}else{y=c[w>>2]|0}if((y|0)==-1){c[e>>2]=0;z=1;A=0}else{z=0;A=l}}else{z=1;A=0}w=c[f>>2]|0;do{if((w|0)!=0){B=c[w+12>>2]|0;if((B|0)==(c[w+16>>2]|0)){C=Fd[c[(c[w>>2]|0)+36>>2]&127](w)|0}else{C=c[B>>2]|0}if(!((C|0)==-1)){if(z){D=w;break}else{E=w;F=x;break a}}else{c[f>>2]=0;G=21;break}}else{G=21}}while(0);if((G|0)==21){G=0;if(z){E=0;F=x;break}else{D=0}}w=a[n]|0;B=(w&1)==0;if(B){H=(w&255)>>>1}else{H=c[g>>2]|0}if(((c[o>>2]|0)-x|0)==(H|0)){if(B){I=(w&255)>>>1;K=(w&255)>>>1}else{w=c[g>>2]|0;I=w;K=w}ak(n,I<<1,0);if((a[n]&1)==0){L=10}else{L=(c[n>>2]&-2)+ -1|0}ak(n,L,0);if((a[n]&1)==0){M=u}else{M=c[v>>2]|0}c[o>>2]=M+K;N=M}else{N=x}w=A+12|0;B=c[w>>2]|0;O=A+16|0;if((B|0)==(c[O>>2]|0)){P=Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0}else{P=c[B>>2]|0}if((Fm(P,t,N,o,r,s,m,p,q,k)|0)!=0){E=D;F=N;break}B=c[w>>2]|0;if((B|0)==(c[O>>2]|0)){Fd[c[(c[A>>2]|0)+40>>2]&127](A)|0;l=A;x=N;continue}else{c[w>>2]=B+4;l=A;x=N;continue}}N=a[m]|0;if((N&1)==0){Q=(N&255)>>>1}else{Q=c[m+4>>2]|0}if((Q|0)!=0?(Q=c[q>>2]|0,(Q-p|0)<160):0){N=c[r>>2]|0;c[q>>2]=Q+4;c[Q>>2]=N}N=zr(F,c[o>>2]|0,h,t)|0;t=j;c[t>>2]=N;c[t+4>>2]=J;To(m,p,c[q>>2]|0,h);if((A|0)!=0){q=c[A+12>>2]|0;if((q|0)==(c[A+16>>2]|0)){R=Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0}else{R=c[q>>2]|0}if((R|0)==-1){c[e>>2]=0;S=0;T=1}else{S=A;T=0}}else{S=0;T=1}do{if((E|0)!=0){A=c[E+12>>2]|0;if((A|0)==(c[E+16>>2]|0)){U=Fd[c[(c[E>>2]|0)+36>>2]&127](E)|0}else{U=c[A>>2]|0}if((U|0)==-1){c[f>>2]=0;G=60;break}if(T){c[b>>2]=S;Zj(n);Zj(m);i=d;return}}else{G=60}}while(0);if((G|0)==60?!T:0){c[b>>2]=S;Zj(n);Zj(m);i=d;return}c[h>>2]=c[h>>2]|2;c[b>>2]=S;Zj(n);Zj(m);i=d;return}function qm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];rm(a,0,k,j,f,g,h);i=b;return}function rm(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;e=i;i=i+304|0;l=e+200|0;m=e;n=e+4|0;o=e+16|0;p=e+28|0;q=e+32|0;r=e+192|0;s=e+196|0;t=c[h+4>>2]&74;if((t|0)==0){u=0}else if((t|0)==8){u=16}else if((t|0)==64){u=8}else{u=10}Jm(n,h,l,m);c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;ak(o,10,0);if((a[o]&1)==0){h=o+1|0;v=h;w=o+8|0;x=h}else{h=o+8|0;v=o+1|0;w=h;x=c[h>>2]|0}c[p>>2]=x;c[r>>2]=q;c[s>>2]=0;h=o+4|0;t=c[m>>2]|0;m=c[f>>2]|0;y=x;a:while(1){if((m|0)!=0){x=c[m+12>>2]|0;if((x|0)==(c[m+16>>2]|0)){z=Fd[c[(c[m>>2]|0)+36>>2]&127](m)|0}else{z=c[x>>2]|0}if((z|0)==-1){c[f>>2]=0;A=1;B=0}else{A=0;B=m}}else{A=1;B=0}x=c[g>>2]|0;do{if((x|0)!=0){C=c[x+12>>2]|0;if((C|0)==(c[x+16>>2]|0)){D=Fd[c[(c[x>>2]|0)+36>>2]&127](x)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){if(A){E=x;break}else{F=x;G=y;break a}}else{c[g>>2]=0;H=21;break}}else{H=21}}while(0);if((H|0)==21){H=0;if(A){F=0;G=y;break}else{E=0}}x=a[o]|0;C=(x&1)==0;if(C){I=(x&255)>>>1}else{I=c[h>>2]|0}if(((c[p>>2]|0)-y|0)==(I|0)){if(C){J=(x&255)>>>1;K=(x&255)>>>1}else{x=c[h>>2]|0;J=x;K=x}ak(o,J<<1,0);if((a[o]&1)==0){L=10}else{L=(c[o>>2]&-2)+ -1|0}ak(o,L,0);if((a[o]&1)==0){M=v}else{M=c[w>>2]|0}c[p>>2]=M+K;N=M}else{N=y}x=B+12|0;C=c[x>>2]|0;O=B+16|0;if((C|0)==(c[O>>2]|0)){P=Fd[c[(c[B>>2]|0)+36>>2]&127](B)|0}else{P=c[C>>2]|0}if((Fm(P,u,N,p,s,t,n,q,r,l)|0)!=0){F=E;G=N;break}C=c[x>>2]|0;if((C|0)==(c[O>>2]|0)){Fd[c[(c[B>>2]|0)+40>>2]&127](B)|0;m=B;y=N;continue}else{c[x>>2]=C+4;m=B;y=N;continue}}N=a[n]|0;if((N&1)==0){Q=(N&255)>>>1}else{Q=c[n+4>>2]|0}if((Q|0)!=0?(Q=c[r>>2]|0,(Q-q|0)<160):0){N=c[s>>2]|0;c[r>>2]=Q+4;c[Q>>2]=N}b[k>>1]=yr(G,c[p>>2]|0,j,u)|0;To(n,q,c[r>>2]|0,j);if((B|0)!=0){r=c[B+12>>2]|0;if((r|0)==(c[B+16>>2]|0)){R=Fd[c[(c[B>>2]|0)+36>>2]&127](B)|0}else{R=c[r>>2]|0}if((R|0)==-1){c[f>>2]=0;S=0;T=1}else{S=B;T=0}}else{S=0;T=1}do{if((F|0)!=0){B=c[F+12>>2]|0;if((B|0)==(c[F+16>>2]|0)){U=Fd[c[(c[F>>2]|0)+36>>2]&127](F)|0}else{U=c[B>>2]|0}if((U|0)==-1){c[g>>2]=0;H=60;break}if(T){c[d>>2]=S;Zj(o);Zj(n);i=e;return}}else{H=60}}while(0);if((H|0)==60?!T:0){c[d>>2]=S;Zj(o);Zj(n);i=e;return}c[j>>2]=c[j>>2]|2;c[d>>2]=S;Zj(o);Zj(n);i=e;return}function sm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];tm(a,0,k,j,f,g,h);i=b;return}function tm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+304|0;k=d+200|0;l=d;m=d+4|0;n=d+16|0;o=d+28|0;p=d+32|0;q=d+192|0;r=d+196|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}Jm(m,g,k,l);c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;ak(n,10,0);if((a[n]&1)==0){g=n+1|0;u=g;v=n+8|0;w=g}else{g=n+8|0;u=n+1|0;v=g;w=c[g>>2]|0}c[o>>2]=w;c[q>>2]=p;c[r>>2]=0;g=n+4|0;s=c[l>>2]|0;l=c[e>>2]|0;x=w;a:while(1){if((l|0)!=0){w=c[l+12>>2]|0;if((w|0)==(c[l+16>>2]|0)){y=Fd[c[(c[l>>2]|0)+36>>2]&127](l)|0}else{y=c[w>>2]|0}if((y|0)==-1){c[e>>2]=0;z=1;A=0}else{z=0;A=l}}else{z=1;A=0}w=c[f>>2]|0;do{if((w|0)!=0){B=c[w+12>>2]|0;if((B|0)==(c[w+16>>2]|0)){C=Fd[c[(c[w>>2]|0)+36>>2]&127](w)|0}else{C=c[B>>2]|0}if(!((C|0)==-1)){if(z){D=w;break}else{E=w;F=x;break a}}else{c[f>>2]=0;G=21;break}}else{G=21}}while(0);if((G|0)==21){G=0;if(z){E=0;F=x;break}else{D=0}}w=a[n]|0;B=(w&1)==0;if(B){H=(w&255)>>>1}else{H=c[g>>2]|0}if(((c[o>>2]|0)-x|0)==(H|0)){if(B){I=(w&255)>>>1;J=(w&255)>>>1}else{w=c[g>>2]|0;I=w;J=w}ak(n,I<<1,0);if((a[n]&1)==0){K=10}else{K=(c[n>>2]&-2)+ -1|0}ak(n,K,0);if((a[n]&1)==0){L=u}else{L=c[v>>2]|0}c[o>>2]=L+J;M=L}else{M=x}w=A+12|0;B=c[w>>2]|0;N=A+16|0;if((B|0)==(c[N>>2]|0)){O=Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0}else{O=c[B>>2]|0}if((Fm(O,t,M,o,r,s,m,p,q,k)|0)!=0){E=D;F=M;break}B=c[w>>2]|0;if((B|0)==(c[N>>2]|0)){Fd[c[(c[A>>2]|0)+40>>2]&127](A)|0;l=A;x=M;continue}else{c[w>>2]=B+4;l=A;x=M;continue}}M=a[m]|0;if((M&1)==0){P=(M&255)>>>1}else{P=c[m+4>>2]|0}if((P|0)!=0?(P=c[q>>2]|0,(P-p|0)<160):0){M=c[r>>2]|0;c[q>>2]=P+4;c[P>>2]=M}c[j>>2]=xr(F,c[o>>2]|0,h,t)|0;To(m,p,c[q>>2]|0,h);if((A|0)!=0){q=c[A+12>>2]|0;if((q|0)==(c[A+16>>2]|0)){Q=Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0}else{Q=c[q>>2]|0}if((Q|0)==-1){c[e>>2]=0;R=0;S=1}else{R=A;S=0}}else{R=0;S=1}do{if((E|0)!=0){A=c[E+12>>2]|0;if((A|0)==(c[E+16>>2]|0)){T=Fd[c[(c[E>>2]|0)+36>>2]&127](E)|0}else{T=c[A>>2]|0}if((T|0)==-1){c[f>>2]=0;G=60;break}if(S){c[b>>2]=R;Zj(n);Zj(m);i=d;return}}else{G=60}}while(0);if((G|0)==60?!S:0){c[b>>2]=R;Zj(n);Zj(m);i=d;return}c[h>>2]=c[h>>2]|2;c[b>>2]=R;Zj(n);Zj(m);i=d;return}function um(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];vm(a,0,k,j,f,g,h);i=b;return}function vm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+304|0;k=d+200|0;l=d;m=d+4|0;n=d+16|0;o=d+28|0;p=d+32|0;q=d+192|0;r=d+196|0;s=c[g+4>>2]&74;if((s|0)==0){t=0}else if((s|0)==8){t=16}else if((s|0)==64){t=8}else{t=10}Jm(m,g,k,l);c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;ak(n,10,0);if((a[n]&1)==0){g=n+1|0;u=g;v=n+8|0;w=g}else{g=n+8|0;u=n+1|0;v=g;w=c[g>>2]|0}c[o>>2]=w;c[q>>2]=p;c[r>>2]=0;g=n+4|0;s=c[l>>2]|0;l=c[e>>2]|0;x=w;a:while(1){if((l|0)!=0){w=c[l+12>>2]|0;if((w|0)==(c[l+16>>2]|0)){y=Fd[c[(c[l>>2]|0)+36>>2]&127](l)|0}else{y=c[w>>2]|0}if((y|0)==-1){c[e>>2]=0;z=1;A=0}else{z=0;A=l}}else{z=1;A=0}w=c[f>>2]|0;do{if((w|0)!=0){B=c[w+12>>2]|0;if((B|0)==(c[w+16>>2]|0)){C=Fd[c[(c[w>>2]|0)+36>>2]&127](w)|0}else{C=c[B>>2]|0}if(!((C|0)==-1)){if(z){D=w;break}else{E=w;F=x;break a}}else{c[f>>2]=0;G=21;break}}else{G=21}}while(0);if((G|0)==21){G=0;if(z){E=0;F=x;break}else{D=0}}w=a[n]|0;B=(w&1)==0;if(B){H=(w&255)>>>1}else{H=c[g>>2]|0}if(((c[o>>2]|0)-x|0)==(H|0)){if(B){I=(w&255)>>>1;J=(w&255)>>>1}else{w=c[g>>2]|0;I=w;J=w}ak(n,I<<1,0);if((a[n]&1)==0){K=10}else{K=(c[n>>2]&-2)+ -1|0}ak(n,K,0);if((a[n]&1)==0){L=u}else{L=c[v>>2]|0}c[o>>2]=L+J;M=L}else{M=x}w=A+12|0;B=c[w>>2]|0;N=A+16|0;if((B|0)==(c[N>>2]|0)){O=Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0}else{O=c[B>>2]|0}if((Fm(O,t,M,o,r,s,m,p,q,k)|0)!=0){E=D;F=M;break}B=c[w>>2]|0;if((B|0)==(c[N>>2]|0)){Fd[c[(c[A>>2]|0)+40>>2]&127](A)|0;l=A;x=M;continue}else{c[w>>2]=B+4;l=A;x=M;continue}}M=a[m]|0;if((M&1)==0){P=(M&255)>>>1}else{P=c[m+4>>2]|0}if((P|0)!=0?(P=c[q>>2]|0,(P-p|0)<160):0){M=c[r>>2]|0;c[q>>2]=P+4;c[P>>2]=M}c[j>>2]=wr(F,c[o>>2]|0,h,t)|0;To(m,p,c[q>>2]|0,h);if((A|0)!=0){q=c[A+12>>2]|0;if((q|0)==(c[A+16>>2]|0)){Q=Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0}else{Q=c[q>>2]|0}if((Q|0)==-1){c[e>>2]=0;R=0;S=1}else{R=A;S=0}}else{R=0;S=1}do{if((E|0)!=0){A=c[E+12>>2]|0;if((A|0)==(c[E+16>>2]|0)){T=Fd[c[(c[E>>2]|0)+36>>2]&127](E)|0}else{T=c[A>>2]|0}if((T|0)==-1){c[f>>2]=0;G=60;break}if(S){c[b>>2]=R;Zj(n);Zj(m);i=d;return}}else{G=60}}while(0);if((G|0)==60?!S:0){c[b>>2]=R;Zj(n);Zj(m);i=d;return}c[h>>2]=c[h>>2]|2;c[b>>2]=R;Zj(n);Zj(m);i=d;return}function wm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];xm(a,0,k,j,f,g,h);i=b;return}function xm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+304|0;k=d+200|0;l=d;m=d+4|0;n=d+16|0;o=d+28|0;p=d+32|0;q=d+192|0;r=d+196|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}Jm(m,g,k,l);c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;ak(n,10,0);if((a[n]&1)==0){g=n+1|0;u=g;v=n+8|0;w=g}else{g=n+8|0;u=n+1|0;v=g;w=c[g>>2]|0}c[o>>2]=w;c[q>>2]=p;c[r>>2]=0;g=n+4|0;s=c[l>>2]|0;l=c[e>>2]|0;x=w;a:while(1){if((l|0)!=0){w=c[l+12>>2]|0;if((w|0)==(c[l+16>>2]|0)){y=Fd[c[(c[l>>2]|0)+36>>2]&127](l)|0}else{y=c[w>>2]|0}if((y|0)==-1){c[e>>2]=0;z=1;A=0}else{z=0;A=l}}else{z=1;A=0}w=c[f>>2]|0;do{if((w|0)!=0){B=c[w+12>>2]|0;if((B|0)==(c[w+16>>2]|0)){C=Fd[c[(c[w>>2]|0)+36>>2]&127](w)|0}else{C=c[B>>2]|0}if(!((C|0)==-1)){if(z){D=w;break}else{E=w;F=x;break a}}else{c[f>>2]=0;G=21;break}}else{G=21}}while(0);if((G|0)==21){G=0;if(z){E=0;F=x;break}else{D=0}}w=a[n]|0;B=(w&1)==0;if(B){H=(w&255)>>>1}else{H=c[g>>2]|0}if(((c[o>>2]|0)-x|0)==(H|0)){if(B){I=(w&255)>>>1;K=(w&255)>>>1}else{w=c[g>>2]|0;I=w;K=w}ak(n,I<<1,0);if((a[n]&1)==0){L=10}else{L=(c[n>>2]&-2)+ -1|0}ak(n,L,0);if((a[n]&1)==0){M=u}else{M=c[v>>2]|0}c[o>>2]=M+K;N=M}else{N=x}w=A+12|0;B=c[w>>2]|0;O=A+16|0;if((B|0)==(c[O>>2]|0)){P=Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0}else{P=c[B>>2]|0}if((Fm(P,t,N,o,r,s,m,p,q,k)|0)!=0){E=D;F=N;break}B=c[w>>2]|0;if((B|0)==(c[O>>2]|0)){Fd[c[(c[A>>2]|0)+40>>2]&127](A)|0;l=A;x=N;continue}else{c[w>>2]=B+4;l=A;x=N;continue}}N=a[m]|0;if((N&1)==0){Q=(N&255)>>>1}else{Q=c[m+4>>2]|0}if((Q|0)!=0?(Q=c[q>>2]|0,(Q-p|0)<160):0){N=c[r>>2]|0;c[q>>2]=Q+4;c[Q>>2]=N}N=vr(F,c[o>>2]|0,h,t)|0;t=j;c[t>>2]=N;c[t+4>>2]=J;To(m,p,c[q>>2]|0,h);if((A|0)!=0){q=c[A+12>>2]|0;if((q|0)==(c[A+16>>2]|0)){R=Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0}else{R=c[q>>2]|0}if((R|0)==-1){c[e>>2]=0;S=0;T=1}else{S=A;T=0}}else{S=0;T=1}do{if((E|0)!=0){A=c[E+12>>2]|0;if((A|0)==(c[E+16>>2]|0)){U=Fd[c[(c[E>>2]|0)+36>>2]&127](E)|0}else{U=c[A>>2]|0}if((U|0)==-1){c[f>>2]=0;G=60;break}if(T){c[b>>2]=S;Zj(n);Zj(m);i=d;return}}else{G=60}}while(0);if((G|0)==60?!T:0){c[b>>2]=S;Zj(n);Zj(m);i=d;return}c[h>>2]=c[h>>2]|2;c[b>>2]=S;Zj(n);Zj(m);i=d;return}function ym(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];zm(a,0,k,j,f,g,h);i=b;return}function zm(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;d=i;i=i+352|0;l=d+176|0;m=d+332|0;n=d+328|0;o=d+316|0;p=d+304|0;q=d+168|0;r=d+8|0;s=d+4|0;t=d;u=d+337|0;v=d+336|0;Km(o,h,l,m,n);c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;ak(p,10,0);if((a[p]&1)==0){h=p+1|0;w=h;x=p+8|0;y=h}else{h=p+8|0;w=p+1|0;x=h;y=c[h>>2]|0}c[q>>2]=y;c[s>>2]=r;c[t>>2]=0;a[u]=1;a[v]=69;h=p+4|0;z=c[m>>2]|0;m=c[n>>2]|0;n=c[e>>2]|0;A=y;a:while(1){if((n|0)!=0){y=c[n+12>>2]|0;if((y|0)==(c[n+16>>2]|0)){B=Fd[c[(c[n>>2]|0)+36>>2]&127](n)|0}else{B=c[y>>2]|0}if((B|0)==-1){c[e>>2]=0;C=1;D=0}else{C=0;D=n}}else{C=1;D=0}y=c[f>>2]|0;do{if((y|0)!=0){E=c[y+12>>2]|0;if((E|0)==(c[y+16>>2]|0)){F=Fd[c[(c[y>>2]|0)+36>>2]&127](y)|0}else{F=c[E>>2]|0}if(!((F|0)==-1)){if(C){G=y;break}else{H=y;I=A;break a}}else{c[f>>2]=0;J=17;break}}else{J=17}}while(0);if((J|0)==17){J=0;if(C){H=0;I=A;break}else{G=0}}y=a[p]|0;E=(y&1)==0;if(E){K=(y&255)>>>1}else{K=c[h>>2]|0}if(((c[q>>2]|0)-A|0)==(K|0)){if(E){L=(y&255)>>>1;M=(y&255)>>>1}else{y=c[h>>2]|0;L=y;M=y}ak(p,L<<1,0);if((a[p]&1)==0){N=10}else{N=(c[p>>2]&-2)+ -1|0}ak(p,N,0);if((a[p]&1)==0){O=w}else{O=c[x>>2]|0}c[q>>2]=O+M;P=O}else{P=A}y=D+12|0;E=c[y>>2]|0;Q=D+16|0;if((E|0)==(c[Q>>2]|0)){R=Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0}else{R=c[E>>2]|0}if((Lm(R,u,v,P,q,z,m,o,r,s,t,l)|0)!=0){H=G;I=P;break}E=c[y>>2]|0;if((E|0)==(c[Q>>2]|0)){Fd[c[(c[D>>2]|0)+40>>2]&127](D)|0;n=D;A=P;continue}else{c[y>>2]=E+4;n=D;A=P;continue}}P=a[o]|0;if((P&1)==0){S=(P&255)>>>1}else{S=c[o+4>>2]|0}if(((S|0)!=0?(a[u]|0)!=0:0)?(u=c[s>>2]|0,(u-r|0)<160):0){S=c[t>>2]|0;c[s>>2]=u+4;c[u>>2]=S}g[k>>2]=+ur(I,c[q>>2]|0,j);To(o,r,c[s>>2]|0,j);if((D|0)!=0){s=c[D+12>>2]|0;if((s|0)==(c[D+16>>2]|0)){T=Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0}else{T=c[s>>2]|0}if((T|0)==-1){c[e>>2]=0;U=0;V=1}else{U=D;V=0}}else{U=0;V=1}do{if((H|0)!=0){D=c[H+12>>2]|0;if((D|0)==(c[H+16>>2]|0)){W=Fd[c[(c[H>>2]|0)+36>>2]&127](H)|0}else{W=c[D>>2]|0}if((W|0)==-1){c[f>>2]=0;J=57;break}if(V){c[b>>2]=U;Zj(p);Zj(o);i=d;return}}else{J=57}}while(0);if((J|0)==57?!V:0){c[b>>2]=U;Zj(p);Zj(o);i=d;return}c[j>>2]=c[j>>2]|2;c[b>>2]=U;Zj(p);Zj(o);i=d;return}function Am(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];Bm(a,0,k,j,f,g,h);i=b;return}function Bm(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;d=i;i=i+352|0;l=d+176|0;m=d+332|0;n=d+328|0;o=d+316|0;p=d+304|0;q=d+168|0;r=d+8|0;s=d+4|0;t=d;u=d+337|0;v=d+336|0;Km(o,g,l,m,n);c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;ak(p,10,0);if((a[p]&1)==0){g=p+1|0;w=g;x=p+8|0;y=g}else{g=p+8|0;w=p+1|0;x=g;y=c[g>>2]|0}c[q>>2]=y;c[s>>2]=r;c[t>>2]=0;a[u]=1;a[v]=69;g=p+4|0;z=c[m>>2]|0;m=c[n>>2]|0;n=c[e>>2]|0;A=y;a:while(1){if((n|0)!=0){y=c[n+12>>2]|0;if((y|0)==(c[n+16>>2]|0)){B=Fd[c[(c[n>>2]|0)+36>>2]&127](n)|0}else{B=c[y>>2]|0}if((B|0)==-1){c[e>>2]=0;C=1;D=0}else{C=0;D=n}}else{C=1;D=0}y=c[f>>2]|0;do{if((y|0)!=0){E=c[y+12>>2]|0;if((E|0)==(c[y+16>>2]|0)){F=Fd[c[(c[y>>2]|0)+36>>2]&127](y)|0}else{F=c[E>>2]|0}if(!((F|0)==-1)){if(C){G=y;break}else{H=y;I=A;break a}}else{c[f>>2]=0;J=17;break}}else{J=17}}while(0);if((J|0)==17){J=0;if(C){H=0;I=A;break}else{G=0}}y=a[p]|0;E=(y&1)==0;if(E){K=(y&255)>>>1}else{K=c[g>>2]|0}if(((c[q>>2]|0)-A|0)==(K|0)){if(E){L=(y&255)>>>1;M=(y&255)>>>1}else{y=c[g>>2]|0;L=y;M=y}ak(p,L<<1,0);if((a[p]&1)==0){N=10}else{N=(c[p>>2]&-2)+ -1|0}ak(p,N,0);if((a[p]&1)==0){O=w}else{O=c[x>>2]|0}c[q>>2]=O+M;P=O}else{P=A}y=D+12|0;E=c[y>>2]|0;Q=D+16|0;if((E|0)==(c[Q>>2]|0)){R=Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0}else{R=c[E>>2]|0}if((Lm(R,u,v,P,q,z,m,o,r,s,t,l)|0)!=0){H=G;I=P;break}E=c[y>>2]|0;if((E|0)==(c[Q>>2]|0)){Fd[c[(c[D>>2]|0)+40>>2]&127](D)|0;n=D;A=P;continue}else{c[y>>2]=E+4;n=D;A=P;continue}}P=a[o]|0;if((P&1)==0){S=(P&255)>>>1}else{S=c[o+4>>2]|0}if(((S|0)!=0?(a[u]|0)!=0:0)?(u=c[s>>2]|0,(u-r|0)<160):0){S=c[t>>2]|0;c[s>>2]=u+4;c[u>>2]=S}h[k>>3]=+tr(I,c[q>>2]|0,j);To(o,r,c[s>>2]|0,j);if((D|0)!=0){s=c[D+12>>2]|0;if((s|0)==(c[D+16>>2]|0)){T=Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0}else{T=c[s>>2]|0}if((T|0)==-1){c[e>>2]=0;U=0;V=1}else{U=D;V=0}}else{U=0;V=1}do{if((H|0)!=0){D=c[H+12>>2]|0;if((D|0)==(c[H+16>>2]|0)){W=Fd[c[(c[H>>2]|0)+36>>2]&127](H)|0}else{W=c[D>>2]|0}if((W|0)==-1){c[f>>2]=0;J=57;break}if(V){c[b>>2]=U;Zj(p);Zj(o);i=d;return}}else{J=57}}while(0);if((J|0)==57?!V:0){c[b>>2]=U;Zj(p);Zj(o);i=d;return}c[j>>2]=c[j>>2]|2;c[b>>2]=U;Zj(p);Zj(o);i=d;return}function Cm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];Dm(a,0,k,j,f,g,h);i=b;return}function Dm(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;d=i;i=i+352|0;l=d+176|0;m=d+332|0;n=d+328|0;o=d+316|0;p=d+304|0;q=d+168|0;r=d+8|0;s=d+4|0;t=d;u=d+337|0;v=d+336|0;Km(o,g,l,m,n);c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;ak(p,10,0);if((a[p]&1)==0){g=p+1|0;w=g;x=p+8|0;y=g}else{g=p+8|0;w=p+1|0;x=g;y=c[g>>2]|0}c[q>>2]=y;c[s>>2]=r;c[t>>2]=0;a[u]=1;a[v]=69;g=p+4|0;z=c[m>>2]|0;m=c[n>>2]|0;n=c[e>>2]|0;A=y;a:while(1){if((n|0)!=0){y=c[n+12>>2]|0;if((y|0)==(c[n+16>>2]|0)){B=Fd[c[(c[n>>2]|0)+36>>2]&127](n)|0}else{B=c[y>>2]|0}if((B|0)==-1){c[e>>2]=0;C=1;D=0}else{C=0;D=n}}else{C=1;D=0}y=c[f>>2]|0;do{if((y|0)!=0){E=c[y+12>>2]|0;if((E|0)==(c[y+16>>2]|0)){F=Fd[c[(c[y>>2]|0)+36>>2]&127](y)|0}else{F=c[E>>2]|0}if(!((F|0)==-1)){if(C){G=y;break}else{H=y;I=A;break a}}else{c[f>>2]=0;J=17;break}}else{J=17}}while(0);if((J|0)==17){J=0;if(C){H=0;I=A;break}else{G=0}}y=a[p]|0;E=(y&1)==0;if(E){K=(y&255)>>>1}else{K=c[g>>2]|0}if(((c[q>>2]|0)-A|0)==(K|0)){if(E){L=(y&255)>>>1;M=(y&255)>>>1}else{y=c[g>>2]|0;L=y;M=y}ak(p,L<<1,0);if((a[p]&1)==0){N=10}else{N=(c[p>>2]&-2)+ -1|0}ak(p,N,0);if((a[p]&1)==0){O=w}else{O=c[x>>2]|0}c[q>>2]=O+M;P=O}else{P=A}y=D+12|0;E=c[y>>2]|0;Q=D+16|0;if((E|0)==(c[Q>>2]|0)){R=Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0}else{R=c[E>>2]|0}if((Lm(R,u,v,P,q,z,m,o,r,s,t,l)|0)!=0){H=G;I=P;break}E=c[y>>2]|0;if((E|0)==(c[Q>>2]|0)){Fd[c[(c[D>>2]|0)+40>>2]&127](D)|0;n=D;A=P;continue}else{c[y>>2]=E+4;n=D;A=P;continue}}P=a[o]|0;if((P&1)==0){S=(P&255)>>>1}else{S=c[o+4>>2]|0}if(((S|0)!=0?(a[u]|0)!=0:0)?(u=c[s>>2]|0,(u-r|0)<160):0){S=c[t>>2]|0;c[s>>2]=u+4;c[u>>2]=S}h[k>>3]=+sr(I,c[q>>2]|0,j);To(o,r,c[s>>2]|0,j);if((D|0)!=0){s=c[D+12>>2]|0;if((s|0)==(c[D+16>>2]|0)){T=Fd[c[(c[D>>2]|0)+36>>2]&127](D)|0}else{T=c[s>>2]|0}if((T|0)==-1){c[e>>2]=0;U=0;V=1}else{U=D;V=0}}else{U=0;V=1}do{if((H|0)!=0){D=c[H+12>>2]|0;if((D|0)==(c[H+16>>2]|0)){W=Fd[c[(c[H>>2]|0)+36>>2]&127](H)|0}else{W=c[D>>2]|0}if((W|0)==-1){c[f>>2]=0;J=57;break}if(V){c[b>>2]=U;Zj(p);Zj(o);i=d;return}}else{J=57}}while(0);if((J|0)==57?!V:0){c[b>>2]=U;Zj(p);Zj(o);i=d;return}c[j>>2]=c[j>>2]|2;c[b>>2]=U;Zj(p);Zj(o);i=d;return}function Em(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;d=i;i=i+304|0;k=d;l=d+200|0;m=d+12|0;n=d+24|0;o=d+28|0;p=d+40|0;c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;sk(n,g);g=c[n>>2]|0;if(!((c[3264]|0)==-1)){c[k>>2]=13056;c[k+4>>2]=161;c[k+8>>2]=0;Uj(13056,k,162)}q=(c[13060>>2]|0)+ -1|0;r=c[g+8>>2]|0;if(!((c[g+12>>2]|0)-r>>2>>>0>q>>>0)){s=fc(4)|0;Yr(s);td(s|0,21024,137)}g=c[r+(q<<2)>>2]|0;if((g|0)==0){s=fc(4)|0;Yr(s);td(s|0,21024,137)}Td[c[(c[g>>2]|0)+48>>2]&7](g,11608,11634|0,l)|0;Aj(c[n>>2]|0)|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;ak(o,10,0);if((a[o]&1)==0){n=o+1|0;t=n;u=o+8|0;v=n}else{n=o+8|0;t=o+1|0;u=n;v=c[n>>2]|0}n=o+4|0;g=l+96|0;s=l+100|0;q=p;r=l+104|0;w=l;x=m+4|0;y=c[e>>2]|0;z=p;p=0;A=v;B=v;a:while(1){if((y|0)!=0){v=c[y+12>>2]|0;if((v|0)==(c[y+16>>2]|0)){C=Fd[c[(c[y>>2]|0)+36>>2]&127](y)|0}else{C=c[v>>2]|0}if((C|0)==-1){c[e>>2]=0;D=1;E=0}else{D=0;E=y}}else{D=1;E=0}v=c[f>>2]|0;do{if((v|0)!=0){F=c[v+12>>2]|0;if((F|0)==(c[v+16>>2]|0)){G=Fd[c[(c[v>>2]|0)+36>>2]&127](v)|0}else{G=c[F>>2]|0}if(!((G|0)==-1)){if(D){break}else{H=B;break a}}else{c[f>>2]=0;I=22;break}}else{I=22}}while(0);if((I|0)==22?(I=0,D):0){H=B;break}v=a[o]|0;F=(v&1)==0;if(F){J=(v&255)>>>1}else{J=c[n>>2]|0}if((A-B|0)==(J|0)){if(F){K=(v&255)>>>1;L=(v&255)>>>1}else{v=c[n>>2]|0;K=v;L=v}ak(o,K<<1,0);if((a[o]&1)==0){M=10}else{M=(c[o>>2]&-2)+ -1|0}ak(o,M,0);if((a[o]&1)==0){N=t}else{N=c[u>>2]|0}O=N+L|0;P=N}else{O=A;P=B}v=c[E+12>>2]|0;if((v|0)==(c[E+16>>2]|0)){Q=Fd[c[(c[E>>2]|0)+36>>2]&127](E)|0}else{Q=c[v>>2]|0}v=(O|0)==(P|0);do{if(v){F=(c[g>>2]|0)==(Q|0);if(!F?(c[s>>2]|0)!=(Q|0):0){I=43;break}a[O]=F?43:45;R=O+1|0;S=z;T=0}else{I=43}}while(0);do{if((I|0)==43){I=0;F=a[m]|0;if((F&1)==0){U=(F&255)>>>1}else{U=c[x>>2]|0}if((U|0)!=0&(Q|0)==0){if((z-q|0)>=160){R=O;S=z;T=p;break}c[z>>2]=p;R=O;S=z+4|0;T=0;break}else{V=l}while(1){F=V+4|0;if((c[V>>2]|0)==(Q|0)){W=V;break}if((F|0)==(r|0)){W=r;break}else{V=F}}F=W-w|0;X=F>>2;if((F|0)>92){H=P;break a}if((F|0)<88){a[O]=a[11608+X|0]|0;R=O+1|0;S=z;T=p+1|0;break}if(v){H=O;break a}if((O-P|0)>=3){H=P;break a}if((a[O+ -1|0]|0)!=48){H=P;break a}a[O]=a[11608+X|0]|0;R=O+1|0;S=z;T=0}}while(0);v=c[e>>2]|0;X=v+12|0;F=c[X>>2]|0;if((F|0)==(c[v+16>>2]|0)){Fd[c[(c[v>>2]|0)+40>>2]&127](v)|0;y=v;z=S;p=T;A=R;B=P;continue}else{c[X>>2]=F+4;y=v;z=S;p=T;A=R;B=P;continue}}a[H+3|0]=0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}P=c[3238]|0;c[k>>2]=j;if((hm(H,P,11648,k)|0)!=1){c[h>>2]=4}k=c[e>>2]|0;if((k|0)!=0){P=c[k+12>>2]|0;if((P|0)==(c[k+16>>2]|0)){Y=Fd[c[(c[k>>2]|0)+36>>2]&127](k)|0}else{Y=c[P>>2]|0}if((Y|0)==-1){c[e>>2]=0;Z=0;_=1}else{Z=k;_=0}}else{Z=0;_=1}k=c[f>>2]|0;do{if((k|0)!=0){e=c[k+12>>2]|0;if((e|0)==(c[k+16>>2]|0)){$=Fd[c[(c[k>>2]|0)+36>>2]&127](k)|0}else{$=c[e>>2]|0}if(($|0)==-1){c[f>>2]=0;I=78;break}if(_){c[b>>2]=Z;Zj(o);Zj(m);i=d;return}}else{I=78}}while(0);if((I|0)==78?!_:0){c[b>>2]=Z;Zj(o);Zj(m);i=d;return}c[h>>2]=c[h>>2]|2;c[b>>2]=Z;Zj(o);Zj(m);i=d;return}function Fm(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0;n=i;o=c[f>>2]|0;p=(o|0)==(e|0);do{if(p){q=(c[m+96>>2]|0)==(b|0);if(!q?(c[m+100>>2]|0)!=(b|0):0){break}c[f>>2]=e+1;a[e]=q?43:45;c[g>>2]=0;r=0;i=n;return r|0}}while(0);q=a[j]|0;if((q&1)==0){s=(q&255)>>>1}else{s=c[j+4>>2]|0}if((s|0)!=0&(b|0)==(h|0)){h=c[l>>2]|0;if((h-k|0)>=160){r=0;i=n;return r|0}k=c[g>>2]|0;c[l>>2]=h+4;c[h>>2]=k;c[g>>2]=0;r=0;i=n;return r|0}k=m+104|0;h=m;while(1){l=h+4|0;if((c[h>>2]|0)==(b|0)){t=h;break}if((l|0)==(k|0)){t=k;break}else{h=l}}h=t-m|0;m=h>>2;if((h|0)>92){r=-1;i=n;return r|0}if((d|0)==16){if((h|0)>=88){if(p){r=-1;i=n;return r|0}if((o-e|0)>=3){r=-1;i=n;return r|0}if((a[o+ -1|0]|0)!=48){r=-1;i=n;return r|0}c[g>>2]=0;e=a[11608+m|0]|0;c[f>>2]=o+1;a[o]=e;r=0;i=n;return r|0}}else if((d|0)==10|(d|0)==8?(m|0)>=(d|0):0){r=-1;i=n;return r|0}d=a[11608+m|0]|0;c[f>>2]=o+1;a[o]=d;c[g>>2]=(c[g>>2]|0)+1;r=0;i=n;return r|0}function Gm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+16|0;h=g;j=g+12|0;sk(j,d);d=c[j>>2]|0;if(!((c[3266]|0)==-1)){c[h>>2]=13064;c[h+4>>2]=161;c[h+8>>2]=0;Uj(13064,h,162)}k=(c[13068>>2]|0)+ -1|0;l=c[d+8>>2]|0;if(!((c[d+12>>2]|0)-l>>2>>>0>k>>>0)){m=fc(4)|0;Yr(m);td(m|0,21024,137)}d=c[l+(k<<2)>>2]|0;if((d|0)==0){m=fc(4)|0;Yr(m);td(m|0,21024,137)}Td[c[(c[d>>2]|0)+32>>2]&7](d,11608,11634|0,e)|0;e=c[j>>2]|0;if(!((c[3302]|0)==-1)){c[h>>2]=13208;c[h+4>>2]=161;c[h+8>>2]=0;Uj(13208,h,162)}h=(c[13212>>2]|0)+ -1|0;d=c[e+8>>2]|0;if(!((c[e+12>>2]|0)-d>>2>>>0>h>>>0)){n=fc(4)|0;Yr(n);td(n|0,21024,137)}e=c[d+(h<<2)>>2]|0;if((e|0)==0){n=fc(4)|0;Yr(n);td(n|0,21024,137)}else{a[f]=Fd[c[(c[e>>2]|0)+16>>2]&127](e)|0;Ed[c[(c[e>>2]|0)+20>>2]&63](b,e);Aj(c[j>>2]|0)|0;i=g;return}}function Hm(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+16|0;j=h;k=h+12|0;sk(k,d);d=c[k>>2]|0;if(!((c[3266]|0)==-1)){c[j>>2]=13064;c[j+4>>2]=161;c[j+8>>2]=0;Uj(13064,j,162)}l=(c[13068>>2]|0)+ -1|0;m=c[d+8>>2]|0;if(!((c[d+12>>2]|0)-m>>2>>>0>l>>>0)){n=fc(4)|0;Yr(n);td(n|0,21024,137)}d=c[m+(l<<2)>>2]|0;if((d|0)==0){n=fc(4)|0;Yr(n);td(n|0,21024,137)}Td[c[(c[d>>2]|0)+32>>2]&7](d,11608,11640|0,e)|0;e=c[k>>2]|0;if(!((c[3302]|0)==-1)){c[j>>2]=13208;c[j+4>>2]=161;c[j+8>>2]=0;Uj(13208,j,162)}j=(c[13212>>2]|0)+ -1|0;d=c[e+8>>2]|0;if(!((c[e+12>>2]|0)-d>>2>>>0>j>>>0)){o=fc(4)|0;Yr(o);td(o|0,21024,137)}e=c[d+(j<<2)>>2]|0;if((e|0)==0){o=fc(4)|0;Yr(o);td(o|0,21024,137)}else{a[f]=Fd[c[(c[e>>2]|0)+12>>2]&127](e)|0;a[g]=Fd[c[(c[e>>2]|0)+16>>2]&127](e)|0;Ed[c[(c[e>>2]|0)+20>>2]&63](b,e);Aj(c[k>>2]|0)|0;i=h;return}}function Im(b,d,e,f,g,h,j,k,l,m,n,o){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0;p=i;if(b<<24>>24==h<<24>>24){if((a[d]|0)==0){q=-1;i=p;return q|0}a[d]=0;h=c[g>>2]|0;c[g>>2]=h+1;a[h]=46;h=a[k]|0;if((h&1)==0){r=(h&255)>>>1}else{r=c[k+4>>2]|0}if((r|0)==0){q=0;i=p;return q|0}r=c[m>>2]|0;if((r-l|0)>=160){q=0;i=p;return q|0}h=c[n>>2]|0;c[m>>2]=r+4;c[r>>2]=h;q=0;i=p;return q|0}if(b<<24>>24==j<<24>>24){j=a[k]|0;if((j&1)==0){s=(j&255)>>>1}else{s=c[k+4>>2]|0}if((s|0)!=0){if((a[d]|0)==0){q=-1;i=p;return q|0}s=c[m>>2]|0;if((s-l|0)>=160){q=0;i=p;return q|0}j=c[n>>2]|0;c[m>>2]=s+4;c[s>>2]=j;c[n>>2]=0;q=0;i=p;return q|0}}j=o+32|0;s=o;while(1){h=s+1|0;if((a[s]|0)==b<<24>>24){t=s;break}if((h|0)==(j|0)){t=j;break}else{s=h}}s=t-o|0;if((s|0)>31){q=-1;i=p;return q|0}o=a[11608+s|0]|0;if((s|0)==24|(s|0)==25){t=c[g>>2]|0;if((t|0)!=(f|0)?(a[t+ -1|0]&95|0)!=(a[e]&127|0):0){q=-1;i=p;return q|0}c[g>>2]=t+1;a[t]=o;q=0;i=p;return q|0}else if((s|0)==23|(s|0)==22){a[e]=80;t=c[g>>2]|0;c[g>>2]=t+1;a[t]=o;q=0;i=p;return q|0}else{t=o&95;if((t|0)==(a[e]|0)?(a[e]=t|128,(a[d]|0)!=0):0){a[d]=0;d=a[k]|0;if((d&1)==0){u=(d&255)>>>1}else{u=c[k+4>>2]|0}if((u|0)!=0?(u=c[m>>2]|0,(u-l|0)<160):0){l=c[n>>2]|0;c[m>>2]=u+4;c[u>>2]=l}}l=c[g>>2]|0;c[g>>2]=l+1;a[l]=o;if((s|0)>21){q=0;i=p;return q|0}c[n>>2]=(c[n>>2]|0)+1;q=0;i=p;return q|0}return 0}function Jm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+16|0;g=f;h=f+12|0;sk(h,b);b=c[h>>2]|0;if(!((c[3264]|0)==-1)){c[g>>2]=13056;c[g+4>>2]=161;c[g+8>>2]=0;Uj(13056,g,162)}j=(c[13060>>2]|0)+ -1|0;k=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-k>>2>>>0>j>>>0)){l=fc(4)|0;Yr(l);td(l|0,21024,137)}b=c[k+(j<<2)>>2]|0;if((b|0)==0){l=fc(4)|0;Yr(l);td(l|0,21024,137)}Td[c[(c[b>>2]|0)+48>>2]&7](b,11608,11634|0,d)|0;d=c[h>>2]|0;if(!((c[3304]|0)==-1)){c[g>>2]=13216;c[g+4>>2]=161;c[g+8>>2]=0;Uj(13216,g,162)}g=(c[13220>>2]|0)+ -1|0;b=c[d+8>>2]|0;if(!((c[d+12>>2]|0)-b>>2>>>0>g>>>0)){m=fc(4)|0;Yr(m);td(m|0,21024,137)}d=c[b+(g<<2)>>2]|0;if((d|0)==0){m=fc(4)|0;Yr(m);td(m|0,21024,137)}else{c[e>>2]=Fd[c[(c[d>>2]|0)+16>>2]&127](d)|0;Ed[c[(c[d>>2]|0)+20>>2]&63](a,d);Aj(c[h>>2]|0)|0;i=f;return}}function Km(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+16|0;h=g;j=g+12|0;sk(j,b);b=c[j>>2]|0;if(!((c[3264]|0)==-1)){c[h>>2]=13056;c[h+4>>2]=161;c[h+8>>2]=0;Uj(13056,h,162)}k=(c[13060>>2]|0)+ -1|0;l=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-l>>2>>>0>k>>>0)){m=fc(4)|0;Yr(m);td(m|0,21024,137)}b=c[l+(k<<2)>>2]|0;if((b|0)==0){m=fc(4)|0;Yr(m);td(m|0,21024,137)}Td[c[(c[b>>2]|0)+48>>2]&7](b,11608,11640|0,d)|0;d=c[j>>2]|0;if(!((c[3304]|0)==-1)){c[h>>2]=13216;c[h+4>>2]=161;c[h+8>>2]=0;Uj(13216,h,162)}h=(c[13220>>2]|0)+ -1|0;b=c[d+8>>2]|0;if(!((c[d+12>>2]|0)-b>>2>>>0>h>>>0)){n=fc(4)|0;Yr(n);td(n|0,21024,137)}d=c[b+(h<<2)>>2]|0;if((d|0)==0){n=fc(4)|0;Yr(n);td(n|0,21024,137)}else{c[e>>2]=Fd[c[(c[d>>2]|0)+12>>2]&127](d)|0;c[f>>2]=Fd[c[(c[d>>2]|0)+16>>2]&127](d)|0;Ed[c[(c[d>>2]|0)+20>>2]&63](a,d);Aj(c[j>>2]|0)|0;i=g;return}}function Lm(b,d,e,f,g,h,j,k,l,m,n,o){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0;p=i;if((b|0)==(h|0)){if((a[d]|0)==0){q=-1;i=p;return q|0}a[d]=0;h=c[g>>2]|0;c[g>>2]=h+1;a[h]=46;h=a[k]|0;if((h&1)==0){r=(h&255)>>>1}else{r=c[k+4>>2]|0}if((r|0)==0){q=0;i=p;return q|0}r=c[m>>2]|0;if((r-l|0)>=160){q=0;i=p;return q|0}h=c[n>>2]|0;c[m>>2]=r+4;c[r>>2]=h;q=0;i=p;return q|0}if((b|0)==(j|0)){j=a[k]|0;if((j&1)==0){s=(j&255)>>>1}else{s=c[k+4>>2]|0}if((s|0)!=0){if((a[d]|0)==0){q=-1;i=p;return q|0}s=c[m>>2]|0;if((s-l|0)>=160){q=0;i=p;return q|0}j=c[n>>2]|0;c[m>>2]=s+4;c[s>>2]=j;c[n>>2]=0;q=0;i=p;return q|0}}j=o+128|0;s=o;while(1){h=s+4|0;if((c[s>>2]|0)==(b|0)){t=s;break}if((h|0)==(j|0)){t=j;break}else{s=h}}s=t-o|0;o=s>>2;if((s|0)>124){q=-1;i=p;return q|0}t=a[11608+o|0]|0;if((o|0)==24|(o|0)==25){j=c[g>>2]|0;if((j|0)!=(f|0)?(a[j+ -1|0]&95|0)!=(a[e]&127|0):0){q=-1;i=p;return q|0}c[g>>2]=j+1;a[j]=t;q=0;i=p;return q|0}else if(!((o|0)==23|(o|0)==22)){o=t&95;if((o|0)==(a[e]|0)?(a[e]=o|128,(a[d]|0)!=0):0){a[d]=0;d=a[k]|0;if((d&1)==0){u=(d&255)>>>1}else{u=c[k+4>>2]|0}if((u|0)!=0?(u=c[m>>2]|0,(u-l|0)<160):0){l=c[n>>2]|0;c[m>>2]=u+4;c[u>>2]=l}}}else{a[e]=80}e=c[g>>2]|0;c[g>>2]=e+1;a[e]=t;if((s|0)>84){q=0;i=p;return q|0}c[n>>2]=(c[n>>2]|0)+1;q=0;i=p;return q|0}function Mm(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Nm(a){a=a|0;return}function Om(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;j=i;i=i+32|0;k=j;l=j+28|0;m=j+12|0;n=j+16|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];p=h&1;c[k+0>>2]=c[l+0>>2];Nd[o&31](b,d,k,f,g,p);i=j;return}sk(m,f);f=c[m>>2]|0;if(!((c[3302]|0)==-1)){c[k>>2]=13208;c[k+4>>2]=161;c[k+8>>2]=0;Uj(13208,k,162)}k=(c[13212>>2]|0)+ -1|0;p=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-p>>2>>>0>k>>>0)){q=fc(4)|0;Yr(q);td(q|0,21024,137)}f=c[p+(k<<2)>>2]|0;if((f|0)==0){q=fc(4)|0;Yr(q);td(q|0,21024,137)}Aj(c[m>>2]|0)|0;m=c[f>>2]|0;if(h){Ed[c[m+24>>2]&63](n,f)}else{Ed[c[m+28>>2]&63](n,f)}f=a[n]|0;if((f&1)==0){m=n+1|0;r=m;s=m;t=n+8|0}else{m=n+8|0;r=c[m>>2]|0;s=n+1|0;t=m}m=n+4|0;h=f;f=r;while(1){if((h&1)==0){u=s;v=(h&255)>>>1}else{u=c[t>>2]|0;v=c[m>>2]|0}if((f|0)==(u+v|0)){break}r=a[f]|0;q=c[e>>2]|0;do{if((q|0)!=0){k=q+24|0;p=c[k>>2]|0;if((p|0)!=(c[q+28>>2]|0)){c[k>>2]=p+1;a[p]=r;break}if((Sd[c[(c[q>>2]|0)+52>>2]&31](q,r&255)|0)==-1){c[e>>2]=0}}}while(0);h=a[n]|0;f=f+1|0}c[b>>2]=c[e>>2];Zj(n);i=j;return}function Pm(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+64|0;j=d;k=d+56|0;l=d+44|0;m=d+20|0;n=d+12|0;o=d+8|0;p=d+4|0;q=d+16|0;a[k+0|0]=a[11856|0]|0;a[k+1|0]=a[11857|0]|0;a[k+2|0]=a[11858|0]|0;a[k+3|0]=a[11859|0]|0;a[k+4|0]=a[11860|0]|0;a[k+5|0]=a[11861|0]|0;r=k+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=k+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}u=c[3238]|0;c[j>>2]=h;h=Qm(l,12,u,k,j)|0;k=l+h|0;u=c[s>>2]&176;do{if((u|0)==32){w=k}else if((u|0)==16){s=a[l]|0;if(s<<24>>24==43|s<<24>>24==45){w=l+1|0;break}if((h|0)>1&s<<24>>24==48?(s=a[l+1|0]|0,s<<24>>24==88|s<<24>>24==120):0){w=l+2|0}else{x=20}}else{x=20}}while(0);if((x|0)==20){w=l}sk(p,f);Rm(l,w,k,m,n,o,p);Aj(c[p>>2]|0)|0;c[q>>2]=c[e>>2];e=c[n>>2]|0;n=c[o>>2]|0;c[j+0>>2]=c[q+0>>2];eh(b,j,m,e,n,f,g);i=d;return}function Qm(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;c[h>>2]=f;f=lc(d|0)|0;d=Rb(a|0,b|0,e|0,h|0)|0;if((f|0)==0){i=g;return d|0}lc(f|0)|0;i=g;return d|0}function Rm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;k=i;i=i+32|0;l=k;m=k+12|0;n=c[j>>2]|0;if(!((c[3266]|0)==-1)){c[l>>2]=13064;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13064,l,162)}o=(c[13068>>2]|0)+ -1|0;p=c[n+8>>2]|0;if(!((c[n+12>>2]|0)-p>>2>>>0>o>>>0)){q=fc(4)|0;Yr(q);td(q|0,21024,137)}n=c[p+(o<<2)>>2]|0;if((n|0)==0){q=fc(4)|0;Yr(q);td(q|0,21024,137)}q=c[j>>2]|0;if(!((c[3302]|0)==-1)){c[l>>2]=13208;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13208,l,162)}l=(c[13212>>2]|0)+ -1|0;j=c[q+8>>2]|0;if(!((c[q+12>>2]|0)-j>>2>>>0>l>>>0)){r=fc(4)|0;Yr(r);td(r|0,21024,137)}q=c[j+(l<<2)>>2]|0;if((q|0)==0){r=fc(4)|0;Yr(r);td(r|0,21024,137)}Ed[c[(c[q>>2]|0)+20>>2]&63](m,q);r=a[m]|0;if((r&1)==0){s=(r&255)>>>1}else{s=c[m+4>>2]|0}if((s|0)!=0){c[h>>2]=f;s=a[b]|0;if(s<<24>>24==43|s<<24>>24==45){r=Sd[c[(c[n>>2]|0)+28>>2]&31](n,s)|0;s=c[h>>2]|0;c[h>>2]=s+1;a[s]=r;t=b+1|0}else{t=b}if(((e-t|0)>1?(a[t]|0)==48:0)?(r=t+1|0,s=a[r]|0,s<<24>>24==88|s<<24>>24==120):0){s=Sd[c[(c[n>>2]|0)+28>>2]&31](n,48)|0;l=c[h>>2]|0;c[h>>2]=l+1;a[l]=s;s=Sd[c[(c[n>>2]|0)+28>>2]&31](n,a[r]|0)|0;r=c[h>>2]|0;c[h>>2]=r+1;a[r]=s;u=t+2|0}else{u=t}if((u|0)!=(e|0)?(t=e+ -1|0,t>>>0>u>>>0):0){s=u;r=t;do{t=a[s]|0;a[s]=a[r]|0;a[r]=t;s=s+1|0;r=r+ -1|0}while(s>>>0<r>>>0)}r=Fd[c[(c[q>>2]|0)+16>>2]&127](q)|0;if(u>>>0<e>>>0){q=m+1|0;s=m+4|0;t=m+8|0;l=0;j=0;o=u;while(1){p=(a[m]&1)==0;if((a[(p?q:c[t>>2]|0)+j|0]|0)!=0?(l|0)==(a[(p?q:c[t>>2]|0)+j|0]|0):0){p=c[h>>2]|0;c[h>>2]=p+1;a[p]=r;p=a[m]|0;if((p&1)==0){v=(p&255)>>>1}else{v=c[s>>2]|0}w=0;x=(j>>>0<(v+ -1|0)>>>0)+j|0}else{w=l;x=j}p=Sd[c[(c[n>>2]|0)+28>>2]&31](n,a[o]|0)|0;y=c[h>>2]|0;c[h>>2]=y+1;a[y]=p;o=o+1|0;if(!(o>>>0<e>>>0)){break}else{l=w+1|0;j=x}}}x=f+(u-b)|0;u=c[h>>2]|0;if((x|0)!=(u|0)?(j=u+ -1|0,j>>>0>x>>>0):0){u=x;x=j;do{j=a[u]|0;a[u]=a[x]|0;a[x]=j;u=u+1|0;x=x+ -1|0}while(u>>>0<x>>>0)}}else{Td[c[(c[n>>2]|0)+32>>2]&7](n,b,e,f)|0;c[h>>2]=f+(e-b)}if((d|0)==(e|0)){z=c[h>>2]|0;c[g>>2]=z;Zj(m);i=k;return}else{z=f+(d-b)|0;c[g>>2]=z;Zj(m);i=k;return}}function Sm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+96|0;k=d+8|0;l=d;m=d+74|0;n=d+32|0;o=d+20|0;p=d+24|0;q=d+16|0;r=d+28|0;s=l;c[s>>2]=37;c[s+4>>2]=0;s=l+1|0;t=f+4|0;u=c[t>>2]|0;if((u&2048|0)==0){v=s}else{a[s]=43;v=l+2|0}if((u&512|0)==0){w=v}else{a[v]=35;w=v+1|0}v=w+2|0;a[w]=108;a[w+1|0]=108;w=u&74;do{if((w|0)==64){a[v]=111}else if((w|0)==8){if((u&16384|0)==0){a[v]=120;break}else{a[v]=88;break}}else{a[v]=100}}while(0);if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}v=c[3238]|0;u=k;c[u>>2]=h;c[u+4>>2]=j;j=Qm(m,22,v,l,k)|0;l=m+j|0;v=c[t>>2]&176;do{if((v|0)==32){x=l}else if((v|0)==16){t=a[m]|0;if(t<<24>>24==43|t<<24>>24==45){x=m+1|0;break}if((j|0)>1&t<<24>>24==48?(t=a[m+1|0]|0,t<<24>>24==88|t<<24>>24==120):0){x=m+2|0}else{y=20}}else{y=20}}while(0);if((y|0)==20){x=m}sk(q,f);Rm(m,x,l,n,o,p,q);Aj(c[q>>2]|0)|0;c[r>>2]=c[e>>2];e=c[o>>2]|0;o=c[p>>2]|0;c[k+0>>2]=c[r+0>>2];eh(b,k,n,e,o,f,g);i=d;return}function Tm(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+64|0;j=d;k=d+56|0;l=d+44|0;m=d+20|0;n=d+12|0;o=d+8|0;p=d+4|0;q=d+16|0;a[k+0|0]=a[11856|0]|0;a[k+1|0]=a[11857|0]|0;a[k+2|0]=a[11858|0]|0;a[k+3|0]=a[11859|0]|0;a[k+4|0]=a[11860|0]|0;a[k+5|0]=a[11861|0]|0;r=k+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=k+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}u=c[3238]|0;c[j>>2]=h;h=Qm(l,12,u,k,j)|0;k=l+h|0;u=c[s>>2]&176;do{if((u|0)==16){s=a[l]|0;if(s<<24>>24==43|s<<24>>24==45){w=l+1|0;break}if((h|0)>1&s<<24>>24==48?(s=a[l+1|0]|0,s<<24>>24==88|s<<24>>24==120):0){w=l+2|0}else{x=20}}else if((u|0)==32){w=k}else{x=20}}while(0);if((x|0)==20){w=l}sk(p,f);Rm(l,w,k,m,n,o,p);Aj(c[p>>2]|0)|0;c[q>>2]=c[e>>2];e=c[n>>2]|0;n=c[o>>2]|0;c[j+0>>2]=c[q+0>>2];eh(b,j,m,e,n,f,g);i=d;return}function Um(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+112|0;k=d+8|0;l=d;m=d+75|0;n=d+32|0;o=d+20|0;p=d+24|0;q=d+16|0;r=d+28|0;s=l;c[s>>2]=37;c[s+4>>2]=0;s=l+1|0;t=f+4|0;u=c[t>>2]|0;if((u&2048|0)==0){v=s}else{a[s]=43;v=l+2|0}if((u&512|0)==0){w=v}else{a[v]=35;w=v+1|0}v=w+2|0;a[w]=108;a[w+1|0]=108;w=u&74;do{if((w|0)==64){a[v]=111}else if((w|0)==8){if((u&16384|0)==0){a[v]=120;break}else{a[v]=88;break}}else{a[v]=117}}while(0);if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}v=c[3238]|0;u=k;c[u>>2]=h;c[u+4>>2]=j;j=Qm(m,23,v,l,k)|0;l=m+j|0;v=c[t>>2]&176;do{if((v|0)==32){x=l}else if((v|0)==16){t=a[m]|0;if(t<<24>>24==43|t<<24>>24==45){x=m+1|0;break}if((j|0)>1&t<<24>>24==48?(t=a[m+1|0]|0,t<<24>>24==88|t<<24>>24==120):0){x=m+2|0}else{y=20}}else{y=20}}while(0);if((y|0)==20){x=m}sk(q,f);Rm(m,x,l,n,o,p,q);Aj(c[q>>2]|0)|0;c[r>>2]=c[e>>2];e=c[o>>2]|0;o=c[p>>2]|0;c[k+0>>2]=c[r+0>>2];eh(b,k,n,e,o,f,g);i=d;return}function Vm(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;l=d+8|0;m=d;n=d+44|0;o=d+36|0;p=d+74|0;q=d+40|0;r=d+24|0;s=d+20|0;t=d+28|0;u=d+32|0;v=m;c[v>>2]=37;c[v+4>>2]=0;v=m+1|0;w=f+4|0;x=c[w>>2]|0;if((x&2048|0)==0){y=v}else{a[v]=43;y=m+2|0}if((x&1024|0)==0){z=y}else{a[y]=35;z=y+1|0}y=x&260;v=x>>>14;do{if((y|0)==260){if((v&1|0)==0){a[z]=97;A=0;break}else{a[z]=65;A=0;break}}else{a[z]=46;x=z+2|0;a[z+1|0]=42;if((y|0)==4){if((v&1|0)==0){a[x]=102;A=1;break}else{a[x]=70;A=1;break}}else if((y|0)==256){if((v&1|0)==0){a[x]=101;A=1;break}else{a[x]=69;A=1;break}}else{if((v&1|0)==0){a[x]=103;A=1;break}else{a[x]=71;A=1;break}}}}while(0);c[o>>2]=n;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}v=c[3238]|0;if(A){c[l>>2]=c[f+8>>2];y=l+4|0;h[k>>3]=j;c[y>>2]=c[k>>2];c[y+4>>2]=c[k+4>>2];B=Qm(n,30,v,m,l)|0}else{h[k>>3]=j;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];B=Qm(n,30,v,m,l)|0}if((B|0)>29){v=(a[12960]|0)==0;if(A){if(v?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}A=c[3238]|0;c[l>>2]=c[f+8>>2];y=l+4|0;h[k>>3]=j;c[y>>2]=c[k>>2];c[y+4>>2]=c[k+4>>2];C=Wm(o,A,m,l)|0}else{if(v?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}v=c[3238]|0;c[l>>2]=c[f+8>>2];A=l+4|0;h[k>>3]=j;c[A>>2]=c[k>>2];c[A+4>>2]=c[k+4>>2];C=Wm(o,v,m,l)|0}m=c[o>>2]|0;if((m|0)==0){Ds()}else{D=m;E=m;F=C}}else{D=c[o>>2]|0;E=0;F=B}B=D+F|0;o=c[w>>2]&176;do{if((o|0)==16){w=a[D]|0;if(w<<24>>24==43|w<<24>>24==45){G=D+1|0;break}if((F|0)>1&w<<24>>24==48?(w=a[D+1|0]|0,w<<24>>24==88|w<<24>>24==120):0){G=D+2|0}else{H=44}}else if((o|0)==32){G=B}else{H=44}}while(0);if((H|0)==44){G=D}if((D|0)!=(n|0)){H=rs(F<<1)|0;if((H|0)==0){Ds()}else{I=D;J=H;K=H}}else{I=n;J=0;K=p}sk(s,f);Xm(I,G,B,K,q,r,s);Aj(c[s>>2]|0)|0;c[u>>2]=c[e>>2];s=c[q>>2]|0;q=c[r>>2]|0;c[l+0>>2]=c[u+0>>2];eh(t,l,K,s,q,f,g);g=c[t>>2]|0;c[e>>2]=g;c[b>>2]=g;if((J|0)!=0){ss(J)}if((E|0)==0){i=d;return}ss(E);i=d;return}function Wm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;e=lc(b|0)|0;b=Pb(a|0,d|0,g|0)|0;if((e|0)==0){i=f;return b|0}lc(e|0)|0;i=f;return b|0}function Xm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;k=i;i=i+32|0;l=k;m=k+12|0;n=c[j>>2]|0;if(!((c[3266]|0)==-1)){c[l>>2]=13064;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13064,l,162)}o=(c[13068>>2]|0)+ -1|0;p=c[n+8>>2]|0;if(!((c[n+12>>2]|0)-p>>2>>>0>o>>>0)){q=fc(4)|0;Yr(q);td(q|0,21024,137)}n=c[p+(o<<2)>>2]|0;if((n|0)==0){q=fc(4)|0;Yr(q);td(q|0,21024,137)}q=c[j>>2]|0;if(!((c[3302]|0)==-1)){c[l>>2]=13208;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13208,l,162)}l=(c[13212>>2]|0)+ -1|0;j=c[q+8>>2]|0;if(!((c[q+12>>2]|0)-j>>2>>>0>l>>>0)){r=fc(4)|0;Yr(r);td(r|0,21024,137)}q=c[j+(l<<2)>>2]|0;if((q|0)==0){r=fc(4)|0;Yr(r);td(r|0,21024,137)}Ed[c[(c[q>>2]|0)+20>>2]&63](m,q);c[h>>2]=f;r=a[b]|0;if(r<<24>>24==43|r<<24>>24==45){l=Sd[c[(c[n>>2]|0)+28>>2]&31](n,r)|0;r=c[h>>2]|0;c[h>>2]=r+1;a[r]=l;s=b+1|0}else{s=b}l=e;a:do{if(((l-s|0)>1?(a[s]|0)==48:0)?(r=s+1|0,j=a[r]|0,j<<24>>24==88|j<<24>>24==120):0){j=Sd[c[(c[n>>2]|0)+28>>2]&31](n,48)|0;o=c[h>>2]|0;c[h>>2]=o+1;a[o]=j;j=s+2|0;o=Sd[c[(c[n>>2]|0)+28>>2]&31](n,a[r]|0)|0;r=c[h>>2]|0;c[h>>2]=r+1;a[r]=o;if(j>>>0<e>>>0){o=j;while(1){r=a[o]|0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}p=o+1|0;if((zb(r<<24>>24|0,c[3238]|0)|0)==0){t=j;u=o;break a}if(p>>>0<e>>>0){o=p}else{t=j;u=p;break}}}else{t=j;u=j}}else{v=14}}while(0);b:do{if((v|0)==14){if(s>>>0<e>>>0){o=s;while(1){p=a[o]|0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}r=o+1|0;if((Hb(p<<24>>24|0,c[3238]|0)|0)==0){t=s;u=o;break b}if(r>>>0<e>>>0){o=r}else{t=s;u=r;break}}}else{t=s;u=s}}}while(0);s=a[m]|0;if((s&1)==0){w=(s&255)>>>1}else{w=c[m+4>>2]|0}if((w|0)!=0){if((t|0)!=(u|0)?(w=u+ -1|0,w>>>0>t>>>0):0){s=t;v=w;do{w=a[s]|0;a[s]=a[v]|0;a[v]=w;s=s+1|0;v=v+ -1|0}while(s>>>0<v>>>0)}v=Fd[c[(c[q>>2]|0)+16>>2]&127](q)|0;if(t>>>0<u>>>0){s=m+1|0;w=m+4|0;o=m+8|0;j=0;r=0;p=t;while(1){x=(a[m]&1)==0;if((a[(x?s:c[o>>2]|0)+r|0]|0)>0?(j|0)==(a[(x?s:c[o>>2]|0)+r|0]|0):0){x=c[h>>2]|0;c[h>>2]=x+1;a[x]=v;x=a[m]|0;if((x&1)==0){y=(x&255)>>>1}else{y=c[w>>2]|0}z=0;A=(r>>>0<(y+ -1|0)>>>0)+r|0}else{z=j;A=r}x=Sd[c[(c[n>>2]|0)+28>>2]&31](n,a[p]|0)|0;B=c[h>>2]|0;c[h>>2]=B+1;a[B]=x;p=p+1|0;if(!(p>>>0<u>>>0)){break}else{j=z+1|0;r=A}}}A=f+(t-b)|0;r=c[h>>2]|0;if((A|0)!=(r|0)?(z=r+ -1|0,z>>>0>A>>>0):0){r=A;A=z;do{z=a[r]|0;a[r]=a[A]|0;a[A]=z;r=r+1|0;A=A+ -1|0}while(r>>>0<A>>>0)}}else{Td[c[(c[n>>2]|0)+32>>2]&7](n,t,u,c[h>>2]|0)|0;c[h>>2]=(c[h>>2]|0)+(u-t)}c:do{if(u>>>0<e>>>0){t=u;while(1){A=a[t]|0;if(A<<24>>24==46){break}r=Sd[c[(c[n>>2]|0)+28>>2]&31](n,A)|0;A=c[h>>2]|0;c[h>>2]=A+1;a[A]=r;r=t+1|0;if(r>>>0<e>>>0){t=r}else{C=r;break c}}r=Fd[c[(c[q>>2]|0)+12>>2]&127](q)|0;A=c[h>>2]|0;c[h>>2]=A+1;a[A]=r;C=t+1|0}else{C=u}}while(0);Td[c[(c[n>>2]|0)+32>>2]&7](n,C,e,c[h>>2]|0)|0;n=(c[h>>2]|0)+(l-C)|0;c[h>>2]=n;if((d|0)==(e|0)){D=n;c[g>>2]=D;Zj(m);i=k;return}D=f+(d-b)|0;c[g>>2]=D;Zj(m);i=k;return}function Ym(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+144|0;l=d+8|0;m=d;n=d+44|0;o=d+36|0;p=d+74|0;q=d+40|0;r=d+24|0;s=d+20|0;t=d+28|0;u=d+32|0;v=m;c[v>>2]=37;c[v+4>>2]=0;v=m+1|0;w=f+4|0;x=c[w>>2]|0;if((x&2048|0)==0){y=v}else{a[v]=43;y=m+2|0}if((x&1024|0)==0){z=y}else{a[y]=35;z=y+1|0}y=x&260;v=x>>>14;do{if((y|0)==260){a[z]=76;x=z+1|0;if((v&1|0)==0){a[x]=97;A=0;break}else{a[x]=65;A=0;break}}else{a[z]=46;a[z+1|0]=42;a[z+2|0]=76;x=z+3|0;if((y|0)==4){if((v&1|0)==0){a[x]=102;A=1;break}else{a[x]=70;A=1;break}}else if((y|0)==256){if((v&1|0)==0){a[x]=101;A=1;break}else{a[x]=69;A=1;break}}else{if((v&1|0)==0){a[x]=103;A=1;break}else{a[x]=71;A=1;break}}}}while(0);c[o>>2]=n;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}v=c[3238]|0;if(A){c[l>>2]=c[f+8>>2];y=l+4|0;h[k>>3]=j;c[y>>2]=c[k>>2];c[y+4>>2]=c[k+4>>2];B=Qm(n,30,v,m,l)|0}else{h[k>>3]=j;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];B=Qm(n,30,v,m,l)|0}if((B|0)>29){v=(a[12960]|0)==0;if(A){if(v?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}A=c[3238]|0;c[l>>2]=c[f+8>>2];y=l+4|0;h[k>>3]=j;c[y>>2]=c[k>>2];c[y+4>>2]=c[k+4>>2];C=Wm(o,A,m,l)|0}else{if(v?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}v=c[3238]|0;h[k>>3]=j;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];C=Wm(o,v,m,l)|0}m=c[o>>2]|0;if((m|0)==0){Ds()}else{D=m;E=m;F=C}}else{D=c[o>>2]|0;E=0;F=B}B=D+F|0;o=c[w>>2]&176;do{if((o|0)==32){G=B}else if((o|0)==16){w=a[D]|0;if(w<<24>>24==43|w<<24>>24==45){G=D+1|0;break}if((F|0)>1&w<<24>>24==48?(w=a[D+1|0]|0,w<<24>>24==88|w<<24>>24==120):0){G=D+2|0}else{H=44}}else{H=44}}while(0);if((H|0)==44){G=D}if((D|0)!=(n|0)){H=rs(F<<1)|0;if((H|0)==0){Ds()}else{I=D;J=H;K=H}}else{I=n;J=0;K=p}sk(s,f);Xm(I,G,B,K,q,r,s);Aj(c[s>>2]|0)|0;c[u>>2]=c[e>>2];s=c[q>>2]|0;q=c[r>>2]|0;c[l+0>>2]=c[u+0>>2];eh(t,l,K,s,q,f,g);g=c[t>>2]|0;c[e>>2]=g;c[b>>2]=g;if((J|0)!=0){ss(J)}if((E|0)==0){i=d;return}ss(E);i=d;return}function Zm(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;i=i+96|0;j=d;k=d+80|0;l=d+60|0;m=d+20|0;n=d+12|0;o=d+16|0;a[k+0|0]=a[11864|0]|0;a[k+1|0]=a[11865|0]|0;a[k+2|0]=a[11866|0]|0;a[k+3|0]=a[11867|0]|0;a[k+4|0]=a[11868|0]|0;a[k+5|0]=a[11869|0]|0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}p=c[3238]|0;c[j>>2]=h;h=Qm(l,20,p,k,j)|0;k=l+h|0;p=c[f+4>>2]&176;do{if((p|0)==32){q=k}else if((p|0)==16){r=a[l]|0;if(r<<24>>24==43|r<<24>>24==45){q=l+1|0;break}if((h|0)>1&r<<24>>24==48?(r=a[l+1|0]|0,r<<24>>24==88|r<<24>>24==120):0){q=l+2|0}else{s=10}}else{s=10}}while(0);if((s|0)==10){q=l}sk(n,f);s=c[n>>2]|0;if(!((c[3266]|0)==-1)){c[j>>2]=13064;c[j+4>>2]=161;c[j+8>>2]=0;Uj(13064,j,162)}p=(c[13068>>2]|0)+ -1|0;r=c[s+8>>2]|0;if(!((c[s+12>>2]|0)-r>>2>>>0>p>>>0)){t=fc(4)|0;Yr(t);td(t|0,21024,137)}s=c[r+(p<<2)>>2]|0;if((s|0)==0){t=fc(4)|0;Yr(t);td(t|0,21024,137)}Aj(c[n>>2]|0)|0;Td[c[(c[s>>2]|0)+32>>2]&7](s,l,k,m)|0;s=m+h|0;if((q|0)==(k|0)){u=s;v=c[e>>2]|0;c[o>>2]=v;c[j+0>>2]=c[o+0>>2];eh(b,j,m,u,s,f,g);i=d;return}u=m+(q-l)|0;v=c[e>>2]|0;c[o>>2]=v;c[j+0>>2]=c[o+0>>2];eh(b,j,m,u,s,f,g);i=d;return}function _m(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function $m(a){a=a|0;return}function an(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;i=i+32|0;k=j;l=j+28|0;m=j+12|0;n=j+16|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];p=h&1;c[k+0>>2]=c[l+0>>2];Nd[o&31](b,d,k,f,g,p);i=j;return}sk(m,f);f=c[m>>2]|0;if(!((c[3304]|0)==-1)){c[k>>2]=13216;c[k+4>>2]=161;c[k+8>>2]=0;Uj(13216,k,162)}k=(c[13220>>2]|0)+ -1|0;p=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-p>>2>>>0>k>>>0)){q=fc(4)|0;Yr(q);td(q|0,21024,137)}f=c[p+(k<<2)>>2]|0;if((f|0)==0){q=fc(4)|0;Yr(q);td(q|0,21024,137)}Aj(c[m>>2]|0)|0;m=c[f>>2]|0;if(h){Ed[c[m+24>>2]&63](n,f)}else{Ed[c[m+28>>2]&63](n,f)}f=a[n]|0;if((f&1)==0){m=n+4|0;r=m;s=n+8|0;t=m}else{m=n+8|0;r=c[m>>2]|0;s=m;t=n+4|0}m=f;f=r;while(1){if((m&1)==0){u=t;v=(m&255)>>>1}else{u=c[s>>2]|0;v=c[t>>2]|0}if((f|0)==(u+(v<<2)|0)){break}r=c[f>>2]|0;h=c[e>>2]|0;if((h|0)!=0){q=h+24|0;k=c[q>>2]|0;if((k|0)==(c[h+28>>2]|0)){w=Sd[c[(c[h>>2]|0)+52>>2]&31](h,r)|0}else{c[q>>2]=k+4;c[k>>2]=r;w=r}if((w|0)==-1){c[e>>2]=0}}m=a[n]|0;f=f+4|0}c[b>>2]=c[e>>2];jk(n);i=j;return}function bn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+128|0;j=d;k=d+116|0;l=d+104|0;m=d+8|0;n=d+92|0;o=d+96|0;p=d+4|0;q=d+100|0;a[k+0|0]=a[11856|0]|0;a[k+1|0]=a[11857|0]|0;a[k+2|0]=a[11858|0]|0;a[k+3|0]=a[11859|0]|0;a[k+4|0]=a[11860|0]|0;a[k+5|0]=a[11861|0]|0;r=k+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=k+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}u=c[3238]|0;c[j>>2]=h;h=Qm(l,12,u,k,j)|0;k=l+h|0;u=c[s>>2]&176;do{if((u|0)==32){w=k}else if((u|0)==16){s=a[l]|0;if(s<<24>>24==43|s<<24>>24==45){w=l+1|0;break}if((h|0)>1&s<<24>>24==48?(s=a[l+1|0]|0,s<<24>>24==88|s<<24>>24==120):0){w=l+2|0}else{x=20}}else{x=20}}while(0);if((x|0)==20){w=l}sk(p,f);cn(l,w,k,m,n,o,p);Aj(c[p>>2]|0)|0;c[q>>2]=c[e>>2];e=c[n>>2]|0;n=c[o>>2]|0;c[j+0>>2]=c[q+0>>2];dn(b,j,m,e,n,f,g);i=d;return}function cn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;k=i;i=i+32|0;l=k;m=k+12|0;n=c[j>>2]|0;if(!((c[3264]|0)==-1)){c[l>>2]=13056;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13056,l,162)}o=(c[13060>>2]|0)+ -1|0;p=c[n+8>>2]|0;if(!((c[n+12>>2]|0)-p>>2>>>0>o>>>0)){q=fc(4)|0;Yr(q);td(q|0,21024,137)}n=c[p+(o<<2)>>2]|0;if((n|0)==0){q=fc(4)|0;Yr(q);td(q|0,21024,137)}q=c[j>>2]|0;if(!((c[3304]|0)==-1)){c[l>>2]=13216;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13216,l,162)}l=(c[13220>>2]|0)+ -1|0;j=c[q+8>>2]|0;if(!((c[q+12>>2]|0)-j>>2>>>0>l>>>0)){r=fc(4)|0;Yr(r);td(r|0,21024,137)}q=c[j+(l<<2)>>2]|0;if((q|0)==0){r=fc(4)|0;Yr(r);td(r|0,21024,137)}Ed[c[(c[q>>2]|0)+20>>2]&63](m,q);r=a[m]|0;if((r&1)==0){s=(r&255)>>>1}else{s=c[m+4>>2]|0}if((s|0)!=0){c[h>>2]=f;s=a[b]|0;if(s<<24>>24==43|s<<24>>24==45){r=Sd[c[(c[n>>2]|0)+44>>2]&31](n,s)|0;s=c[h>>2]|0;c[h>>2]=s+4;c[s>>2]=r;t=b+1|0}else{t=b}if(((e-t|0)>1?(a[t]|0)==48:0)?(r=t+1|0,s=a[r]|0,s<<24>>24==88|s<<24>>24==120):0){s=Sd[c[(c[n>>2]|0)+44>>2]&31](n,48)|0;l=c[h>>2]|0;c[h>>2]=l+4;c[l>>2]=s;s=Sd[c[(c[n>>2]|0)+44>>2]&31](n,a[r]|0)|0;r=c[h>>2]|0;c[h>>2]=r+4;c[r>>2]=s;u=t+2|0}else{u=t}if((u|0)!=(e|0)?(t=e+ -1|0,t>>>0>u>>>0):0){s=u;r=t;do{t=a[s]|0;a[s]=a[r]|0;a[r]=t;s=s+1|0;r=r+ -1|0}while(s>>>0<r>>>0)}r=Fd[c[(c[q>>2]|0)+16>>2]&127](q)|0;if(u>>>0<e>>>0){q=m+1|0;s=m+4|0;t=m+8|0;l=0;j=0;o=u;while(1){p=(a[m]&1)==0;if((a[(p?q:c[t>>2]|0)+j|0]|0)!=0?(l|0)==(a[(p?q:c[t>>2]|0)+j|0]|0):0){p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=r;p=a[m]|0;if((p&1)==0){v=(p&255)>>>1}else{v=c[s>>2]|0}w=0;x=(j>>>0<(v+ -1|0)>>>0)+j|0}else{w=l;x=j}p=Sd[c[(c[n>>2]|0)+44>>2]&31](n,a[o]|0)|0;y=c[h>>2]|0;z=y+4|0;c[h>>2]=z;c[y>>2]=p;p=o+1|0;if(p>>>0<e>>>0){l=w+1|0;j=x;o=p}else{A=z;break}}}else{A=c[h>>2]|0}o=f+(u-b<<2)|0;if((o|0)!=(A|0)?(u=A+ -4|0,u>>>0>o>>>0):0){x=o;o=u;while(1){u=c[x>>2]|0;c[x>>2]=c[o>>2];c[o>>2]=u;u=x+4|0;j=o+ -4|0;if(u>>>0<j>>>0){x=u;o=j}else{B=A;break}}}else{B=A}}else{Td[c[(c[n>>2]|0)+48>>2]&7](n,b,e,f)|0;n=f+(e-b<<2)|0;c[h>>2]=n;B=n}if((d|0)==(e|0)){C=B;c[g>>2]=C;Zj(m);i=k;return}C=f+(d-b<<2)|0;c[g>>2]=C;Zj(m);i=k;return}function dn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=k;m=c[d>>2]|0;if((m|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g>>2;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;g=h>>2;if((h|0)>0?(Kd[c[(c[m>>2]|0)+48>>2]&31](m,e,g)|0)!=(g|0):0){c[d>>2]=0;c[b>>2]=0;i=k;return}do{if((q|0)>0){ik(l,q,j);if((a[l]&1)==0){r=l+4|0}else{r=c[l+8>>2]|0}if((Kd[c[(c[m>>2]|0)+48>>2]&31](m,r,q)|0)==(q|0)){jk(l);break}c[d>>2]=0;c[b>>2]=0;jk(l);i=k;return}}while(0);l=n-o|0;o=l>>2;if((l|0)>0?(Kd[c[(c[m>>2]|0)+48>>2]&31](m,f,o)|0)!=(o|0):0){c[d>>2]=0;c[b>>2]=0;i=k;return}c[p>>2]=0;c[b>>2]=m;i=k;return}function en(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+224|0;k=d+8|0;l=d;m=d+196|0;n=d+16|0;o=d+180|0;p=d+184|0;q=d+188|0;r=d+192|0;s=l;c[s>>2]=37;c[s+4>>2]=0;s=l+1|0;t=f+4|0;u=c[t>>2]|0;if((u&2048|0)==0){v=s}else{a[s]=43;v=l+2|0}if((u&512|0)==0){w=v}else{a[v]=35;w=v+1|0}v=w+2|0;a[w]=108;a[w+1|0]=108;w=u&74;do{if((w|0)==64){a[v]=111}else if((w|0)==8){if((u&16384|0)==0){a[v]=120;break}else{a[v]=88;break}}else{a[v]=100}}while(0);if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}v=c[3238]|0;u=k;c[u>>2]=h;c[u+4>>2]=j;j=Qm(m,22,v,l,k)|0;l=m+j|0;v=c[t>>2]&176;do{if((v|0)==32){x=l}else if((v|0)==16){t=a[m]|0;if(t<<24>>24==43|t<<24>>24==45){x=m+1|0;break}if((j|0)>1&t<<24>>24==48?(t=a[m+1|0]|0,t<<24>>24==88|t<<24>>24==120):0){x=m+2|0}else{y=20}}else{y=20}}while(0);if((y|0)==20){x=m}sk(q,f);cn(m,x,l,n,o,p,q);Aj(c[q>>2]|0)|0;c[r>>2]=c[e>>2];e=c[o>>2]|0;o=c[p>>2]|0;c[k+0>>2]=c[r+0>>2];dn(b,k,n,e,o,f,g);i=d;return}function fn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+128|0;j=d;k=d+116|0;l=d+104|0;m=d+8|0;n=d+92|0;o=d+96|0;p=d+4|0;q=d+100|0;a[k+0|0]=a[11856|0]|0;a[k+1|0]=a[11857|0]|0;a[k+2|0]=a[11858|0]|0;a[k+3|0]=a[11859|0]|0;a[k+4|0]=a[11860|0]|0;a[k+5|0]=a[11861|0]|0;r=k+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=k+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}u=c[3238]|0;c[j>>2]=h;h=Qm(l,12,u,k,j)|0;k=l+h|0;u=c[s>>2]&176;do{if((u|0)==16){s=a[l]|0;if(s<<24>>24==43|s<<24>>24==45){w=l+1|0;break}if((h|0)>1&s<<24>>24==48?(s=a[l+1|0]|0,s<<24>>24==88|s<<24>>24==120):0){w=l+2|0}else{x=20}}else if((u|0)==32){w=k}else{x=20}}while(0);if((x|0)==20){w=l}sk(p,f);cn(l,w,k,m,n,o,p);Aj(c[p>>2]|0)|0;c[q>>2]=c[e>>2];e=c[n>>2]|0;n=c[o>>2]|0;c[j+0>>2]=c[q+0>>2];dn(b,j,m,e,n,f,g);i=d;return}function gn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+240|0;k=d+8|0;l=d;m=d+204|0;n=d+16|0;o=d+188|0;p=d+192|0;q=d+196|0;r=d+200|0;s=l;c[s>>2]=37;c[s+4>>2]=0;s=l+1|0;t=f+4|0;u=c[t>>2]|0;if((u&2048|0)==0){v=s}else{a[s]=43;v=l+2|0}if((u&512|0)==0){w=v}else{a[v]=35;w=v+1|0}v=w+2|0;a[w]=108;a[w+1|0]=108;w=u&74;do{if((w|0)==64){a[v]=111}else if((w|0)==8){if((u&16384|0)==0){a[v]=120;break}else{a[v]=88;break}}else{a[v]=117}}while(0);if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}v=c[3238]|0;u=k;c[u>>2]=h;c[u+4>>2]=j;j=Qm(m,23,v,l,k)|0;l=m+j|0;v=c[t>>2]&176;do{if((v|0)==32){x=l}else if((v|0)==16){t=a[m]|0;if(t<<24>>24==43|t<<24>>24==45){x=m+1|0;break}if((j|0)>1&t<<24>>24==48?(t=a[m+1|0]|0,t<<24>>24==88|t<<24>>24==120):0){x=m+2|0}else{y=20}}else{y=20}}while(0);if((y|0)==20){x=m}sk(q,f);cn(m,x,l,n,o,p,q);Aj(c[q>>2]|0)|0;c[r>>2]=c[e>>2];e=c[o>>2]|0;o=c[p>>2]|0;c[k+0>>2]=c[r+0>>2];dn(b,k,n,e,o,f,g);i=d;return}function hn(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+304|0;l=d+8|0;m=d;n=d+272|0;o=d+264|0;p=d+36|0;q=d+268|0;r=d+24|0;s=d+20|0;t=d+28|0;u=d+32|0;v=m;c[v>>2]=37;c[v+4>>2]=0;v=m+1|0;w=f+4|0;x=c[w>>2]|0;if((x&2048|0)==0){y=v}else{a[v]=43;y=m+2|0}if((x&1024|0)==0){z=y}else{a[y]=35;z=y+1|0}y=x&260;v=x>>>14;do{if((y|0)==260){if((v&1|0)==0){a[z]=97;A=0;break}else{a[z]=65;A=0;break}}else{a[z]=46;x=z+2|0;a[z+1|0]=42;if((y|0)==256){if((v&1|0)==0){a[x]=101;A=1;break}else{a[x]=69;A=1;break}}else if((y|0)==4){if((v&1|0)==0){a[x]=102;A=1;break}else{a[x]=70;A=1;break}}else{if((v&1|0)==0){a[x]=103;A=1;break}else{a[x]=71;A=1;break}}}}while(0);c[o>>2]=n;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}v=c[3238]|0;if(A){c[l>>2]=c[f+8>>2];y=l+4|0;h[k>>3]=j;c[y>>2]=c[k>>2];c[y+4>>2]=c[k+4>>2];B=Qm(n,30,v,m,l)|0}else{h[k>>3]=j;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];B=Qm(n,30,v,m,l)|0}if((B|0)>29){v=(a[12960]|0)==0;if(A){if(v?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}A=c[3238]|0;c[l>>2]=c[f+8>>2];y=l+4|0;h[k>>3]=j;c[y>>2]=c[k>>2];c[y+4>>2]=c[k+4>>2];C=Wm(o,A,m,l)|0}else{if(v?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}v=c[3238]|0;c[l>>2]=c[f+8>>2];A=l+4|0;h[k>>3]=j;c[A>>2]=c[k>>2];c[A+4>>2]=c[k+4>>2];C=Wm(o,v,m,l)|0}m=c[o>>2]|0;if((m|0)==0){Ds()}else{D=m;E=m;F=C}}else{D=c[o>>2]|0;E=0;F=B}B=D+F|0;o=c[w>>2]&176;do{if((o|0)==32){G=B}else if((o|0)==16){w=a[D]|0;if(w<<24>>24==43|w<<24>>24==45){G=D+1|0;break}if((F|0)>1&w<<24>>24==48?(w=a[D+1|0]|0,w<<24>>24==88|w<<24>>24==120):0){G=D+2|0}else{H=44}}else{H=44}}while(0);if((H|0)==44){G=D}if((D|0)!=(n|0)){H=rs(F<<3)|0;if((H|0)==0){Ds()}else{I=D;J=H;K=H}}else{I=n;J=0;K=p}sk(s,f);jn(I,G,B,K,q,r,s);Aj(c[s>>2]|0)|0;c[u>>2]=c[e>>2];s=c[q>>2]|0;q=c[r>>2]|0;c[l+0>>2]=c[u+0>>2];dn(t,l,K,s,q,f,g);g=c[t>>2]|0;c[e>>2]=g;c[b>>2]=g;if((J|0)!=0){ss(J)}if((E|0)==0){i=d;return}ss(E);i=d;return}function jn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;k=i;i=i+32|0;l=k;m=k+12|0;n=c[j>>2]|0;if(!((c[3264]|0)==-1)){c[l>>2]=13056;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13056,l,162)}o=(c[13060>>2]|0)+ -1|0;p=c[n+8>>2]|0;if(!((c[n+12>>2]|0)-p>>2>>>0>o>>>0)){q=fc(4)|0;Yr(q);td(q|0,21024,137)}n=c[p+(o<<2)>>2]|0;if((n|0)==0){q=fc(4)|0;Yr(q);td(q|0,21024,137)}q=c[j>>2]|0;if(!((c[3304]|0)==-1)){c[l>>2]=13216;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13216,l,162)}l=(c[13220>>2]|0)+ -1|0;j=c[q+8>>2]|0;if(!((c[q+12>>2]|0)-j>>2>>>0>l>>>0)){r=fc(4)|0;Yr(r);td(r|0,21024,137)}q=c[j+(l<<2)>>2]|0;if((q|0)==0){r=fc(4)|0;Yr(r);td(r|0,21024,137)}Ed[c[(c[q>>2]|0)+20>>2]&63](m,q);c[h>>2]=f;r=a[b]|0;if(r<<24>>24==43|r<<24>>24==45){l=Sd[c[(c[n>>2]|0)+44>>2]&31](n,r)|0;r=c[h>>2]|0;c[h>>2]=r+4;c[r>>2]=l;s=b+1|0}else{s=b}l=e;a:do{if(((l-s|0)>1?(a[s]|0)==48:0)?(r=s+1|0,j=a[r]|0,j<<24>>24==88|j<<24>>24==120):0){j=Sd[c[(c[n>>2]|0)+44>>2]&31](n,48)|0;o=c[h>>2]|0;c[h>>2]=o+4;c[o>>2]=j;j=s+2|0;o=Sd[c[(c[n>>2]|0)+44>>2]&31](n,a[r]|0)|0;r=c[h>>2]|0;c[h>>2]=r+4;c[r>>2]=o;if(j>>>0<e>>>0){o=j;while(1){r=a[o]|0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}p=o+1|0;if((zb(r<<24>>24|0,c[3238]|0)|0)==0){t=j;u=o;break a}if(p>>>0<e>>>0){o=p}else{t=j;u=p;break}}}else{t=j;u=j}}else{v=14}}while(0);b:do{if((v|0)==14){if(s>>>0<e>>>0){o=s;while(1){p=a[o]|0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}r=o+1|0;if((Hb(p<<24>>24|0,c[3238]|0)|0)==0){t=s;u=o;break b}if(r>>>0<e>>>0){o=r}else{t=s;u=r;break}}}else{t=s;u=s}}}while(0);s=a[m]|0;if((s&1)==0){w=(s&255)>>>1}else{w=c[m+4>>2]|0}if((w|0)!=0){if((t|0)!=(u|0)?(w=u+ -1|0,w>>>0>t>>>0):0){s=t;v=w;do{w=a[s]|0;a[s]=a[v]|0;a[v]=w;s=s+1|0;v=v+ -1|0}while(s>>>0<v>>>0)}v=Fd[c[(c[q>>2]|0)+16>>2]&127](q)|0;if(t>>>0<u>>>0){s=m+1|0;w=m+4|0;o=m+8|0;j=0;r=0;p=t;while(1){x=(a[m]&1)==0;if((a[(x?s:c[o>>2]|0)+r|0]|0)>0?(j|0)==(a[(x?s:c[o>>2]|0)+r|0]|0):0){x=c[h>>2]|0;c[h>>2]=x+4;c[x>>2]=v;x=a[m]|0;if((x&1)==0){y=(x&255)>>>1}else{y=c[w>>2]|0}z=0;A=(r>>>0<(y+ -1|0)>>>0)+r|0}else{z=j;A=r}x=Sd[c[(c[n>>2]|0)+44>>2]&31](n,a[p]|0)|0;B=c[h>>2]|0;C=B+4|0;c[h>>2]=C;c[B>>2]=x;x=p+1|0;if(x>>>0<u>>>0){j=z+1|0;r=A;p=x}else{D=C;break}}}else{D=c[h>>2]|0}p=f+(t-b<<2)|0;if((p|0)!=(D|0)?(A=D+ -4|0,A>>>0>p>>>0):0){r=p;p=A;while(1){A=c[r>>2]|0;c[r>>2]=c[p>>2];c[p>>2]=A;A=r+4|0;z=p+ -4|0;if(A>>>0<z>>>0){r=A;p=z}else{E=D;break}}}else{E=D}}else{Td[c[(c[n>>2]|0)+48>>2]&7](n,t,u,c[h>>2]|0)|0;D=(c[h>>2]|0)+(u-t<<2)|0;c[h>>2]=D;E=D}c:do{if(u>>>0<e>>>0){D=u;while(1){t=a[D]|0;if(t<<24>>24==46){break}p=Sd[c[(c[n>>2]|0)+44>>2]&31](n,t)|0;t=c[h>>2]|0;r=t+4|0;c[h>>2]=r;c[t>>2]=p;p=D+1|0;if(p>>>0<e>>>0){D=p}else{F=r;G=p;break c}}p=Fd[c[(c[q>>2]|0)+12>>2]&127](q)|0;r=c[h>>2]|0;t=r+4|0;c[h>>2]=t;c[r>>2]=p;F=t;G=D+1|0}else{F=E;G=u}}while(0);Td[c[(c[n>>2]|0)+48>>2]&7](n,G,e,F)|0;F=(c[h>>2]|0)+(l-G<<2)|0;c[h>>2]=F;if((d|0)==(e|0)){H=F;c[g>>2]=H;Zj(m);i=k;return}H=f+(d-b<<2)|0;c[g>>2]=H;Zj(m);i=k;return}function kn(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=i;i=i+304|0;l=d+8|0;m=d;n=d+272|0;o=d+264|0;p=d+36|0;q=d+268|0;r=d+24|0;s=d+20|0;t=d+28|0;u=d+32|0;v=m;c[v>>2]=37;c[v+4>>2]=0;v=m+1|0;w=f+4|0;x=c[w>>2]|0;if((x&2048|0)==0){y=v}else{a[v]=43;y=m+2|0}if((x&1024|0)==0){z=y}else{a[y]=35;z=y+1|0}y=x&260;v=x>>>14;do{if((y|0)==260){a[z]=76;x=z+1|0;if((v&1|0)==0){a[x]=97;A=0;break}else{a[x]=65;A=0;break}}else{a[z]=46;a[z+1|0]=42;a[z+2|0]=76;x=z+3|0;if((y|0)==4){if((v&1|0)==0){a[x]=102;A=1;break}else{a[x]=70;A=1;break}}else if((y|0)==256){if((v&1|0)==0){a[x]=101;A=1;break}else{a[x]=69;A=1;break}}else{if((v&1|0)==0){a[x]=103;A=1;break}else{a[x]=71;A=1;break}}}}while(0);c[o>>2]=n;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}v=c[3238]|0;if(A){c[l>>2]=c[f+8>>2];y=l+4|0;h[k>>3]=j;c[y>>2]=c[k>>2];c[y+4>>2]=c[k+4>>2];B=Qm(n,30,v,m,l)|0}else{h[k>>3]=j;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];B=Qm(n,30,v,m,l)|0}if((B|0)>29){v=(a[12960]|0)==0;if(A){if(v?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}A=c[3238]|0;c[l>>2]=c[f+8>>2];y=l+4|0;h[k>>3]=j;c[y>>2]=c[k>>2];c[y+4>>2]=c[k+4>>2];C=Wm(o,A,m,l)|0}else{if(v?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}v=c[3238]|0;h[k>>3]=j;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];C=Wm(o,v,m,l)|0}m=c[o>>2]|0;if((m|0)==0){Ds()}else{D=m;E=m;F=C}}else{D=c[o>>2]|0;E=0;F=B}B=D+F|0;o=c[w>>2]&176;do{if((o|0)==16){w=a[D]|0;if(w<<24>>24==43|w<<24>>24==45){G=D+1|0;break}if((F|0)>1&w<<24>>24==48?(w=a[D+1|0]|0,w<<24>>24==88|w<<24>>24==120):0){G=D+2|0}else{H=44}}else if((o|0)==32){G=B}else{H=44}}while(0);if((H|0)==44){G=D}if((D|0)!=(n|0)){H=rs(F<<3)|0;if((H|0)==0){Ds()}else{I=D;J=H;K=H}}else{I=n;J=0;K=p}sk(s,f);jn(I,G,B,K,q,r,s);Aj(c[s>>2]|0)|0;c[u>>2]=c[e>>2];s=c[q>>2]|0;q=c[r>>2]|0;c[l+0>>2]=c[u+0>>2];dn(t,l,K,s,q,f,g);g=c[t>>2]|0;c[e>>2]=g;c[b>>2]=g;if((J|0)!=0){ss(J)}if((E|0)==0){i=d;return}ss(E);i=d;return}function ln(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;i=i+208|0;j=d;k=d+188|0;l=d+168|0;m=d+16|0;n=d+12|0;o=d+164|0;a[k+0|0]=a[11864|0]|0;a[k+1|0]=a[11865|0]|0;a[k+2|0]=a[11866|0]|0;a[k+3|0]=a[11867|0]|0;a[k+4|0]=a[11868|0]|0;a[k+5|0]=a[11869|0]|0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}p=c[3238]|0;c[j>>2]=h;h=Qm(l,20,p,k,j)|0;k=l+h|0;p=c[f+4>>2]&176;do{if((p|0)==32){q=k}else if((p|0)==16){r=a[l]|0;if(r<<24>>24==43|r<<24>>24==45){q=l+1|0;break}if((h|0)>1&r<<24>>24==48?(r=a[l+1|0]|0,r<<24>>24==88|r<<24>>24==120):0){q=l+2|0}else{s=10}}else{s=10}}while(0);if((s|0)==10){q=l}sk(n,f);s=c[n>>2]|0;if(!((c[3264]|0)==-1)){c[j>>2]=13056;c[j+4>>2]=161;c[j+8>>2]=0;Uj(13056,j,162)}p=(c[13060>>2]|0)+ -1|0;r=c[s+8>>2]|0;if(!((c[s+12>>2]|0)-r>>2>>>0>p>>>0)){t=fc(4)|0;Yr(t);td(t|0,21024,137)}s=c[r+(p<<2)>>2]|0;if((s|0)==0){t=fc(4)|0;Yr(t);td(t|0,21024,137)}Aj(c[n>>2]|0)|0;Td[c[(c[s>>2]|0)+48>>2]&7](s,l,k,m)|0;s=m+(h<<2)|0;if((q|0)==(k|0)){u=s;v=c[e>>2]|0;c[o>>2]=v;c[j+0>>2]=c[o+0>>2];dn(b,j,m,u,s,f,g);i=d;return}u=m+(q-l<<2)|0;v=c[e>>2]|0;c[o>>2]=v;c[j+0>>2]=c[o+0>>2];dn(b,j,m,u,s,f,g);i=d;return}function mn(e,f,g,h,j,k,l,m,n){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;o=i;i=i+32|0;p=o;q=o+28|0;r=o+12|0;s=o+16|0;t=o+20|0;u=o+24|0;sk(r,j);v=c[r>>2]|0;if(!((c[3266]|0)==-1)){c[p>>2]=13064;c[p+4>>2]=161;c[p+8>>2]=0;Uj(13064,p,162)}w=(c[13068>>2]|0)+ -1|0;x=c[v+8>>2]|0;if(!((c[v+12>>2]|0)-x>>2>>>0>w>>>0)){y=fc(4)|0;Yr(y);td(y|0,21024,137)}v=c[x+(w<<2)>>2]|0;if((v|0)==0){y=fc(4)|0;Yr(y);td(y|0,21024,137)}Aj(c[r>>2]|0)|0;c[k>>2]=0;a:do{if((m|0)!=(n|0)){r=v+8|0;y=m;w=0;b:while(1){x=w;while(1){if((x|0)!=0){z=65;break a}A=c[g>>2]|0;if((A|0)!=0){if((c[A+12>>2]|0)==(c[A+16>>2]|0)?(Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0)==-1:0){c[g>>2]=0;B=0}else{B=A}}else{B=0}A=(B|0)==0;C=c[h>>2]|0;do{if((C|0)!=0){if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[h>>2]=0;z=19;break}if(A){D=C}else{z=20;break b}}else{z=19}}while(0);if((z|0)==19){z=0;if(A){z=20;break b}else{D=0}}if((Kd[c[(c[v>>2]|0)+36>>2]&31](v,a[y]|0,0)|0)<<24>>24==37){z=22;break}C=a[y]|0;if(C<<24>>24>-1?(E=c[r>>2]|0,!((b[E+(C<<24>>24<<1)>>1]&8192)==0)):0){F=y;z=33;break}G=B+12|0;C=c[G>>2]|0;H=B+16|0;if((C|0)==(c[H>>2]|0)){I=Fd[c[(c[B>>2]|0)+36>>2]&127](B)|0}else{I=d[C]|0}C=Sd[c[(c[v>>2]|0)+12>>2]&31](v,I&255)|0;if(C<<24>>24==(Sd[c[(c[v>>2]|0)+12>>2]&31](v,a[y]|0)|0)<<24>>24){z=60;break}c[k>>2]=4;x=4}c:do{if((z|0)==22){z=0;x=y+1|0;if((x|0)==(n|0)){z=23;break b}C=Kd[c[(c[v>>2]|0)+36>>2]&31](v,a[x]|0,0)|0;if(C<<24>>24==48|C<<24>>24==69){J=y+2|0;if((J|0)==(n|0)){z=26;break b}K=J;L=Kd[c[(c[v>>2]|0)+36>>2]&31](v,a[J]|0,0)|0;M=C}else{K=x;L=C;M=0}C=c[(c[f>>2]|0)+36>>2]|0;c[t>>2]=B;c[u>>2]=D;c[q+0>>2]=c[t+0>>2];c[p+0>>2]=c[u+0>>2];Rd[C&3](s,f,q,p,j,k,l,L,M);c[g>>2]=c[s>>2];N=K+1|0}else if((z|0)==33){while(1){z=0;C=F+1|0;if((C|0)==(n|0)){O=n;break}x=a[C]|0;if(!(x<<24>>24>-1)){O=C;break}if((b[E+(x<<24>>24<<1)>>1]&8192)==0){O=C;break}else{F=C;z=33}}A=B;C=D;x=D;while(1){if((A|0)!=0){if((c[A+12>>2]|0)==(c[A+16>>2]|0)?(Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0)==-1:0){c[g>>2]=0;P=0}else{P=A}}else{P=0}J=(P|0)==0;do{if((x|0)!=0){if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){if(J){Q=C;R=x;break}else{N=O;break c}}if(!((Fd[c[(c[x>>2]|0)+36>>2]&127](x)|0)==-1)){if(J^(C|0)==0){Q=C;R=C;break}else{N=O;break c}}else{c[h>>2]=0;S=0;z=46;break}}else{S=C;z=46}}while(0);if((z|0)==46){z=0;if(J){N=O;break c}else{Q=S;R=0}}T=P+12|0;U=c[T>>2]|0;V=P+16|0;if((U|0)==(c[V>>2]|0)){W=Fd[c[(c[P>>2]|0)+36>>2]&127](P)|0}else{W=d[U]|0}if(!((W&255)<<24>>24>-1)){N=O;break c}if((b[(c[r>>2]|0)+(W<<24>>24<<1)>>1]&8192)==0){N=O;break c}U=c[T>>2]|0;if((U|0)==(c[V>>2]|0)){Fd[c[(c[P>>2]|0)+40>>2]&127](P)|0;A=P;C=Q;x=R;continue}else{c[T>>2]=U+1;A=P;C=Q;x=R;continue}}}else if((z|0)==60){z=0;x=c[G>>2]|0;if((x|0)==(c[H>>2]|0)){Fd[c[(c[B>>2]|0)+40>>2]&127](B)|0}else{c[G>>2]=x+1}N=y+1|0}}while(0);if((N|0)==(n|0)){z=65;break a}y=N;w=c[k>>2]|0}if((z|0)==20){c[k>>2]=4;X=B;break}else if((z|0)==23){c[k>>2]=4;X=B;break}else if((z|0)==26){c[k>>2]=4;X=B;break}}else{z=65}}while(0);if((z|0)==65){X=c[g>>2]|0}if((X|0)!=0){if((c[X+12>>2]|0)==(c[X+16>>2]|0)?(Fd[c[(c[X>>2]|0)+36>>2]&127](X)|0)==-1:0){c[g>>2]=0;Y=0}else{Y=X}}else{Y=0}X=(Y|0)==0;g=c[h>>2]|0;do{if((g|0)!=0){if((c[g+12>>2]|0)==(c[g+16>>2]|0)?(Fd[c[(c[g>>2]|0)+36>>2]&127](g)|0)==-1:0){c[h>>2]=0;z=75;break}if(X){c[e>>2]=Y;i=o;return}}else{z=75}}while(0);if((z|0)==75?!X:0){c[e>>2]=Y;i=o;return}c[k>>2]=c[k>>2]|2;c[e>>2]=Y;i=o;return}function nn(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function on(a){a=a|0;return}function pn(a){a=a|0;return 2}function qn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j;m=j+4|0;n=j+8|0;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];mn(a,b,l,k,f,g,h,11968,11976|0);i=j;return}function rn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;k=i;i=i+16|0;l=k+12|0;m=k;n=k+4|0;o=k+8|0;p=d+8|0;q=Fd[c[(c[p>>2]|0)+20>>2]&127](p)|0;c[n>>2]=c[e>>2];c[o>>2]=c[f>>2];f=a[q]|0;if((f&1)==0){r=q+1|0;s=(f&255)>>>1;t=q+1|0}else{f=c[q+8>>2]|0;r=f;s=c[q+4>>2]|0;t=f}f=r+s|0;c[m+0>>2]=c[n+0>>2];c[l+0>>2]=c[o+0>>2];mn(b,d,m,l,g,h,j,t,f);i=k;return}function sn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+32|0;k=j;l=j+16|0;m=j+12|0;sk(m,f);f=c[m>>2]|0;if(!((c[3266]|0)==-1)){c[k>>2]=13064;c[k+4>>2]=161;c[k+8>>2]=0;Uj(13064,k,162)}n=(c[13068>>2]|0)+ -1|0;o=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-o>>2>>>0>n>>>0)){p=fc(4)|0;Yr(p);td(p|0,21024,137)}f=c[o+(n<<2)>>2]|0;if((f|0)==0){p=fc(4)|0;Yr(p);td(p|0,21024,137)}Aj(c[m>>2]|0)|0;m=c[e>>2]|0;e=b+8|0;b=Fd[c[c[e>>2]>>2]&127](e)|0;c[l>>2]=m;m=b+168|0;c[k+0>>2]=c[l+0>>2];l=(Ol(d,k,b,m,f,g,0)|0)-b|0;if((l|0)>=168){q=c[d>>2]|0;c[a>>2]=q;i=j;return}c[h+24>>2]=((l|0)/12|0|0)%7|0;q=c[d>>2]|0;c[a>>2]=q;i=j;return}function tn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+32|0;k=j;l=j+16|0;m=j+12|0;sk(m,f);f=c[m>>2]|0;if(!((c[3266]|0)==-1)){c[k>>2]=13064;c[k+4>>2]=161;c[k+8>>2]=0;Uj(13064,k,162)}n=(c[13068>>2]|0)+ -1|0;o=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-o>>2>>>0>n>>>0)){p=fc(4)|0;Yr(p);td(p|0,21024,137)}f=c[o+(n<<2)>>2]|0;if((f|0)==0){p=fc(4)|0;Yr(p);td(p|0,21024,137)}Aj(c[m>>2]|0)|0;m=c[e>>2]|0;e=b+8|0;b=Fd[c[(c[e>>2]|0)+4>>2]&127](e)|0;c[l>>2]=m;m=b+288|0;c[k+0>>2]=c[l+0>>2];l=(Ol(d,k,b,m,f,g,0)|0)-b|0;if((l|0)>=288){q=c[d>>2]|0;c[a>>2]=q;i=j;return}c[h+16>>2]=((l|0)/12|0|0)%12|0;q=c[d>>2]|0;c[a>>2]=q;i=j;return}function un(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+32|0;j=b;k=b+16|0;l=b+12|0;sk(l,f);f=c[l>>2]|0;if(!((c[3266]|0)==-1)){c[j>>2]=13064;c[j+4>>2]=161;c[j+8>>2]=0;Uj(13064,j,162)}m=(c[13068>>2]|0)+ -1|0;n=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-n>>2>>>0>m>>>0)){o=fc(4)|0;Yr(o);td(o|0,21024,137)}f=c[n+(m<<2)>>2]|0;if((f|0)==0){o=fc(4)|0;Yr(o);td(o|0,21024,137)}Aj(c[l>>2]|0)|0;l=h+20|0;c[k>>2]=c[e>>2];c[j+0>>2]=c[k+0>>2];k=yn(d,j,g,f,4)|0;if((c[g>>2]&4|0)!=0){p=c[d>>2]|0;c[a>>2]=p;i=b;return}if((k|0)<69){q=k+2e3|0}else{q=(k+ -69|0)>>>0<31?k+1900|0:k}c[l>>2]=q+ -1900;p=c[d>>2]|0;c[a>>2]=p;i=b;return}function vn(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0;l=i;i=i+176|0;m=l;n=l+160|0;o=l+156|0;p=l+152|0;q=l+148|0;r=l+144|0;s=l+140|0;t=l+136|0;u=l+132|0;v=l+128|0;w=l+124|0;x=l+120|0;y=l+116|0;z=l+112|0;A=l+108|0;B=l+104|0;C=l+100|0;D=l+96|0;E=l+92|0;F=l+88|0;G=l+164|0;H=l+44|0;I=l+36|0;J=l+32|0;K=l+28|0;L=l+40|0;M=l+16|0;N=l+12|0;O=l+20|0;P=l+24|0;Q=l+80|0;R=l+48|0;S=l+52|0;T=l+56|0;U=l+60|0;V=l+64|0;W=l+68|0;X=l+72|0;Y=l+76|0;Z=l+84|0;c[h>>2]=0;sk(A,g);_=c[A>>2]|0;if(!((c[3266]|0)==-1)){c[m>>2]=13064;c[m+4>>2]=161;c[m+8>>2]=0;Uj(13064,m,162)}$=(c[13068>>2]|0)+ -1|0;aa=c[_+8>>2]|0;if(!((c[_+12>>2]|0)-aa>>2>>>0>$>>>0)){ba=fc(4)|0;Yr(ba);td(ba|0,21024,137)}_=c[aa+($<<2)>>2]|0;if((_|0)==0){ba=fc(4)|0;Yr(ba);td(ba|0,21024,137)}Aj(c[A>>2]|0)|0;a:do{switch(k<<24>>24|0){case 77:{c[s>>2]=c[f>>2];c[m+0>>2]=c[s+0>>2];A=yn(e,m,h,_,2)|0;ba=c[h>>2]|0;if((ba&4|0)==0&(A|0)<60){c[j+4>>2]=A;break a}else{c[h>>2]=ba|4;break a}break};case 72:{c[w>>2]=c[f>>2];c[m+0>>2]=c[w+0>>2];ba=yn(e,m,h,_,2)|0;A=c[h>>2]|0;if((A&4|0)==0&(ba|0)<24){c[j+8>>2]=ba;break a}else{c[h>>2]=A|4;break a}break};case 120:{A=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];c[n+0>>2]=c[U+0>>2];c[m+0>>2]=c[V+0>>2];Pd[A&63](b,d,n,m,g,h,j);i=l;return};case 65:case 97:{A=c[f>>2]|0;ba=d+8|0;$=Fd[c[c[ba>>2]>>2]&127](ba)|0;c[z>>2]=A;c[m+0>>2]=c[z+0>>2];A=(Ol(e,m,$,$+168|0,_,h,0)|0)-$|0;if((A|0)<168){c[j+24>>2]=((A|0)/12|0|0)%7|0}break};case 112:{A=j+8|0;$=c[f>>2]|0;ba=d+8|0;aa=Fd[c[(c[ba>>2]|0)+8>>2]&127](ba)|0;ba=a[aa]|0;if((ba&1)==0){ca=(ba&255)>>>1}else{ca=c[aa+4>>2]|0}ba=a[aa+12|0]|0;if((ba&1)==0){da=(ba&255)>>>1}else{da=c[aa+16>>2]|0}if((ca|0)==(0-da|0)){c[h>>2]=c[h>>2]|4;break a}c[r>>2]=$;c[m+0>>2]=c[r+0>>2];$=Ol(e,m,aa,aa+24|0,_,h,0)|0;ba=$-aa|0;if(($|0)==(aa|0)?(c[A>>2]|0)==12:0){c[A>>2]=0;break a}if((ba|0)==12?(ba=c[A>>2]|0,(ba|0)<12):0){c[A>>2]=ba+12}break};case 89:{c[n>>2]=c[f>>2];c[m+0>>2]=c[n+0>>2];ba=yn(e,m,h,_,4)|0;if((c[h>>2]&4|0)==0){c[j+20>>2]=ba+ -1900}break};case 116:case 110:{c[K>>2]=c[f>>2];c[m+0>>2]=c[K+0>>2];wn(0,e,m,h,_);break};case 83:{c[q>>2]=c[f>>2];c[m+0>>2]=c[q+0>>2];ba=yn(e,m,h,_,2)|0;A=c[h>>2]|0;if((A&4|0)==0&(ba|0)<61){c[j>>2]=ba;break a}else{c[h>>2]=A|4;break a}break};case 70:{c[I>>2]=c[e>>2];c[J>>2]=c[f>>2];c[n+0>>2]=c[I+0>>2];c[m+0>>2]=c[J+0>>2];mn(H,d,n,m,g,h,j,11984,11992|0);c[e>>2]=c[H>>2];break};case 68:{c[F>>2]=c[e>>2];c[G>>2]=c[f>>2];c[n+0>>2]=c[F+0>>2];c[m+0>>2]=c[G+0>>2];mn(E,d,n,m,g,h,j,11976,11984|0);c[e>>2]=c[E>>2];break};case 114:{c[M>>2]=c[e>>2];c[N>>2]=c[f>>2];c[n+0>>2]=c[M+0>>2];c[m+0>>2]=c[N+0>>2];mn(L,d,n,m,g,h,j,11992,12003|0);c[e>>2]=c[L>>2];break};case 37:{c[Z>>2]=c[f>>2];c[m+0>>2]=c[Z+0>>2];xn(0,e,m,h,_);break};case 82:{c[P>>2]=c[e>>2];c[Q>>2]=c[f>>2];c[n+0>>2]=c[P+0>>2];c[m+0>>2]=c[Q+0>>2];mn(O,d,n,m,g,h,j,12008,12013|0);c[e>>2]=c[O>>2];break};case 106:{c[u>>2]=c[f>>2];c[m+0>>2]=c[u+0>>2];A=yn(e,m,h,_,3)|0;ba=c[h>>2]|0;if((ba&4|0)==0&(A|0)<366){c[j+28>>2]=A;break a}else{c[h>>2]=ba|4;break a}break};case 73:{ba=j+8|0;c[v>>2]=c[f>>2];c[m+0>>2]=c[v+0>>2];A=yn(e,m,h,_,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0?(A+ -1|0)>>>0<12:0){c[ba>>2]=A;break a}c[h>>2]=aa|4;break};case 84:{c[S>>2]=c[e>>2];c[T>>2]=c[f>>2];c[n+0>>2]=c[S+0>>2];c[m+0>>2]=c[T+0>>2];mn(R,d,n,m,g,h,j,12016,12024|0);c[e>>2]=c[R>>2];break};case 119:{c[p>>2]=c[f>>2];c[m+0>>2]=c[p+0>>2];aa=yn(e,m,h,_,1)|0;A=c[h>>2]|0;if((A&4|0)==0&(aa|0)<7){c[j+24>>2]=aa;break a}else{c[h>>2]=A|4;break a}break};case 104:case 66:case 98:{A=c[f>>2]|0;aa=d+8|0;ba=Fd[c[(c[aa>>2]|0)+4>>2]&127](aa)|0;c[y>>2]=A;c[m+0>>2]=c[y+0>>2];A=(Ol(e,m,ba,ba+288|0,_,h,0)|0)-ba|0;if((A|0)<288){c[j+16>>2]=((A|0)/12|0|0)%12|0}break};case 99:{A=d+8|0;ba=Fd[c[(c[A>>2]|0)+12>>2]&127](A)|0;c[C>>2]=c[e>>2];c[D>>2]=c[f>>2];A=a[ba]|0;if((A&1)==0){ea=ba+1|0;fa=(A&255)>>>1;ga=ba+1|0}else{A=c[ba+8>>2]|0;ea=A;fa=c[ba+4>>2]|0;ga=A}c[n+0>>2]=c[C+0>>2];c[m+0>>2]=c[D+0>>2];mn(B,d,n,m,g,h,j,ga,ea+fa|0);c[e>>2]=c[B>>2];break};case 101:case 100:{A=j+12|0;c[x>>2]=c[f>>2];c[m+0>>2]=c[x+0>>2];ba=yn(e,m,h,_,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0?(ba+ -1|0)>>>0<31:0){c[A>>2]=ba;break a}c[h>>2]=aa|4;break};case 88:{aa=d+8|0;ba=Fd[c[(c[aa>>2]|0)+24>>2]&127](aa)|0;c[X>>2]=c[e>>2];c[Y>>2]=c[f>>2];aa=a[ba]|0;if((aa&1)==0){ha=ba+1|0;ia=(aa&255)>>>1;ja=ba+1|0}else{aa=c[ba+8>>2]|0;ha=aa;ia=c[ba+4>>2]|0;ja=aa}c[n+0>>2]=c[X+0>>2];c[m+0>>2]=c[Y+0>>2];mn(W,d,n,m,g,h,j,ja,ha+ia|0);c[e>>2]=c[W>>2];break};case 121:{aa=j+20|0;c[o>>2]=c[f>>2];c[m+0>>2]=c[o+0>>2];ba=yn(e,m,h,_,4)|0;if((c[h>>2]&4|0)==0){if((ba|0)<69){ka=ba+2e3|0}else{ka=(ba+ -69|0)>>>0<31?ba+1900|0:ba}c[aa>>2]=ka+ -1900}break};case 109:{c[t>>2]=c[f>>2];c[m+0>>2]=c[t+0>>2];aa=yn(e,m,h,_,2)|0;ba=c[h>>2]|0;if((ba&4|0)==0&(aa|0)<13){c[j+16>>2]=aa+ -1;break a}else{c[h>>2]=ba|4;break a}break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}function wn(a,e,f,g,h){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;a=i;j=h+8|0;a:while(1){h=c[e>>2]|0;do{if((h|0)!=0){if((c[h+12>>2]|0)==(c[h+16>>2]|0)){if((Fd[c[(c[h>>2]|0)+36>>2]&127](h)|0)==-1){c[e>>2]=0;k=0;break}else{k=c[e>>2]|0;break}}else{k=h}}else{k=0}}while(0);h=(k|0)==0;l=c[f>>2]|0;do{if((l|0)!=0){if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){if(h){m=l;break}else{n=l;break a}}if(!((Fd[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1)){if(h){m=l;break}else{n=l;break a}}else{c[f>>2]=0;o=12;break}}else{o=12}}while(0);if((o|0)==12){o=0;if(h){n=0;break}else{m=0}}l=c[e>>2]|0;p=c[l+12>>2]|0;if((p|0)==(c[l+16>>2]|0)){q=Fd[c[(c[l>>2]|0)+36>>2]&127](l)|0}else{q=d[p]|0}if(!((q&255)<<24>>24>-1)){n=m;break}if((b[(c[j>>2]|0)+(q<<24>>24<<1)>>1]&8192)==0){n=m;break}p=c[e>>2]|0;l=p+12|0;r=c[l>>2]|0;if((r|0)==(c[p+16>>2]|0)){Fd[c[(c[p>>2]|0)+40>>2]&127](p)|0;continue}else{c[l>>2]=r+1;continue}}m=c[e>>2]|0;do{if((m|0)!=0){if((c[m+12>>2]|0)==(c[m+16>>2]|0)){if((Fd[c[(c[m>>2]|0)+36>>2]&127](m)|0)==-1){c[e>>2]=0;s=0;break}else{s=c[e>>2]|0;break}}else{s=m}}else{s=0}}while(0);m=(s|0)==0;do{if((n|0)!=0){if((c[n+12>>2]|0)==(c[n+16>>2]|0)?(Fd[c[(c[n>>2]|0)+36>>2]&127](n)|0)==-1:0){c[f>>2]=0;o=32;break}if(m){i=a;return}}else{o=32}}while(0);if((o|0)==32?!m:0){i=a;return}c[g>>2]=c[g>>2]|2;i=a;return}function xn(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;a=i;h=c[b>>2]|0;do{if((h|0)!=0){if((c[h+12>>2]|0)==(c[h+16>>2]|0)){if((Fd[c[(c[h>>2]|0)+36>>2]&127](h)|0)==-1){c[b>>2]=0;j=0;break}else{j=c[b>>2]|0;break}}else{j=h}}else{j=0}}while(0);h=(j|0)==0;j=c[e>>2]|0;do{if((j|0)!=0){if((c[j+12>>2]|0)==(c[j+16>>2]|0)?(Fd[c[(c[j>>2]|0)+36>>2]&127](j)|0)==-1:0){c[e>>2]=0;k=11;break}if(h){l=j}else{k=12}}else{k=11}}while(0);if((k|0)==11){if(h){k=12}else{l=0}}if((k|0)==12){c[f>>2]=c[f>>2]|6;i=a;return}h=c[b>>2]|0;j=c[h+12>>2]|0;if((j|0)==(c[h+16>>2]|0)){m=Fd[c[(c[h>>2]|0)+36>>2]&127](h)|0}else{m=d[j]|0}if(!((Kd[c[(c[g>>2]|0)+36>>2]&31](g,m&255,0)|0)<<24>>24==37)){c[f>>2]=c[f>>2]|4;i=a;return}m=c[b>>2]|0;g=m+12|0;j=c[g>>2]|0;if((j|0)==(c[m+16>>2]|0)){Fd[c[(c[m>>2]|0)+40>>2]&127](m)|0}else{c[g>>2]=j+1}j=c[b>>2]|0;do{if((j|0)!=0){if((c[j+12>>2]|0)==(c[j+16>>2]|0)){if((Fd[c[(c[j>>2]|0)+36>>2]&127](j)|0)==-1){c[b>>2]=0;n=0;break}else{n=c[b>>2]|0;break}}else{n=j}}else{n=0}}while(0);j=(n|0)==0;do{if((l|0)!=0){if((c[l+12>>2]|0)==(c[l+16>>2]|0)?(Fd[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1:0){c[e>>2]=0;k=31;break}if(j){i=a;return}}else{k=31}}while(0);if((k|0)==31?!j:0){i=a;return}c[f>>2]=c[f>>2]|2;i=a;return}function yn(a,e,f,g,h){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;j=i;k=c[a>>2]|0;do{if((k|0)!=0){if((c[k+12>>2]|0)==(c[k+16>>2]|0)){if((Fd[c[(c[k>>2]|0)+36>>2]&127](k)|0)==-1){c[a>>2]=0;l=0;break}else{l=c[a>>2]|0;break}}else{l=k}}else{l=0}}while(0);k=(l|0)==0;l=c[e>>2]|0;do{if((l|0)!=0){if((c[l+12>>2]|0)==(c[l+16>>2]|0)?(Fd[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1:0){c[e>>2]=0;m=11;break}if(k){n=l}else{m=12}}else{m=11}}while(0);if((m|0)==11){if(k){m=12}else{n=0}}if((m|0)==12){c[f>>2]=c[f>>2]|6;o=0;i=j;return o|0}k=c[a>>2]|0;l=c[k+12>>2]|0;if((l|0)==(c[k+16>>2]|0)){p=Fd[c[(c[k>>2]|0)+36>>2]&127](k)|0}else{p=d[l]|0}l=p&255;if(l<<24>>24>-1?(k=g+8|0,!((b[(c[k>>2]|0)+(p<<24>>24<<1)>>1]&2048)==0)):0){p=(Kd[c[(c[g>>2]|0)+36>>2]&31](g,l,0)|0)<<24>>24;l=c[a>>2]|0;q=l+12|0;r=c[q>>2]|0;if((r|0)==(c[l+16>>2]|0)){Fd[c[(c[l>>2]|0)+40>>2]&127](l)|0;s=h;t=n;u=n;v=p}else{c[q>>2]=r+1;s=h;t=n;u=n;v=p}while(1){w=v+ -48|0;p=s+ -1|0;n=c[a>>2]|0;do{if((n|0)!=0){if((c[n+12>>2]|0)==(c[n+16>>2]|0)){if((Fd[c[(c[n>>2]|0)+36>>2]&127](n)|0)==-1){c[a>>2]=0;x=0;break}else{x=c[a>>2]|0;break}}else{x=n}}else{x=0}}while(0);n=(x|0)==0;if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)){if((Fd[c[(c[u>>2]|0)+36>>2]&127](u)|0)==-1){c[e>>2]=0;y=0;z=0}else{y=t;z=t}}else{y=t;z=u}}else{y=t;z=0}A=c[a>>2]|0;if(!((n^(z|0)==0)&(p|0)>0)){m=40;break}n=c[A+12>>2]|0;if((n|0)==(c[A+16>>2]|0)){B=Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0}else{B=d[n]|0}n=B&255;if(!(n<<24>>24>-1)){o=w;m=52;break}if((b[(c[k>>2]|0)+(B<<24>>24<<1)>>1]&2048)==0){o=w;m=52;break}h=((Kd[c[(c[g>>2]|0)+36>>2]&31](g,n,0)|0)<<24>>24)+(w*10|0)|0;n=c[a>>2]|0;r=n+12|0;q=c[r>>2]|0;if((q|0)==(c[n+16>>2]|0)){Fd[c[(c[n>>2]|0)+40>>2]&127](n)|0;s=p;t=y;u=z;v=h;continue}else{c[r>>2]=q+1;s=p;t=y;u=z;v=h;continue}}if((m|0)==40){do{if((A|0)!=0){if((c[A+12>>2]|0)==(c[A+16>>2]|0)){if((Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0)==-1){c[a>>2]=0;C=0;break}else{C=c[a>>2]|0;break}}else{C=A}}else{C=0}}while(0);A=(C|0)==0;do{if((y|0)!=0){if((c[y+12>>2]|0)==(c[y+16>>2]|0)?(Fd[c[(c[y>>2]|0)+36>>2]&127](y)|0)==-1:0){c[e>>2]=0;m=50;break}if(A){o=w;i=j;return o|0}}else{m=50}}while(0);if((m|0)==50?!A:0){o=w;i=j;return o|0}c[f>>2]=c[f>>2]|2;o=w;i=j;return o|0}else if((m|0)==52){i=j;return o|0}}c[f>>2]=c[f>>2]|4;o=0;i=j;return o|0}function zn(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;l=i;i=i+32|0;m=l;n=l+28|0;o=l+12|0;p=l+16|0;q=l+20|0;r=l+24|0;sk(o,f);s=c[o>>2]|0;if(!((c[3264]|0)==-1)){c[m>>2]=13056;c[m+4>>2]=161;c[m+8>>2]=0;Uj(13056,m,162)}t=(c[13060>>2]|0)+ -1|0;u=c[s+8>>2]|0;if(!((c[s+12>>2]|0)-u>>2>>>0>t>>>0)){v=fc(4)|0;Yr(v);td(v|0,21024,137)}s=c[u+(t<<2)>>2]|0;if((s|0)==0){v=fc(4)|0;Yr(v);td(v|0,21024,137)}Aj(c[o>>2]|0)|0;c[g>>2]=0;a:do{if((j|0)!=(k|0)){o=j;v=0;b:while(1){t=v;while(1){if((t|0)!=0){w=69;break a}u=c[d>>2]|0;if((u|0)!=0){x=c[u+12>>2]|0;if((x|0)==(c[u+16>>2]|0)){y=Fd[c[(c[u>>2]|0)+36>>2]&127](u)|0}else{y=c[x>>2]|0}if((y|0)==-1){c[d>>2]=0;z=1;A=0}else{z=0;A=u}}else{z=1;A=0}u=c[e>>2]|0;do{if((u|0)!=0){x=c[u+12>>2]|0;if((x|0)==(c[u+16>>2]|0)){B=Fd[c[(c[u>>2]|0)+36>>2]&127](u)|0}else{B=c[x>>2]|0}if(!((B|0)==-1)){if(z){C=u;break}else{w=24;break b}}else{c[e>>2]=0;w=22;break}}else{w=22}}while(0);if((w|0)==22){w=0;if(z){w=24;break b}else{C=0}}if((Kd[c[(c[s>>2]|0)+52>>2]&31](s,c[o>>2]|0,0)|0)<<24>>24==37){w=26;break}if(Kd[c[(c[s>>2]|0)+12>>2]&31](s,8192,c[o>>2]|0)|0){D=o;w=36;break}E=A+12|0;u=c[E>>2]|0;F=A+16|0;if((u|0)==(c[F>>2]|0)){G=Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0}else{G=c[u>>2]|0}u=Sd[c[(c[s>>2]|0)+28>>2]&31](s,G)|0;if((u|0)==(Sd[c[(c[s>>2]|0)+28>>2]&31](s,c[o>>2]|0)|0)){w=64;break}c[g>>2]=4;t=4}c:do{if((w|0)==26){w=0;t=o+4|0;if((t|0)==(k|0)){w=27;break b}u=Kd[c[(c[s>>2]|0)+52>>2]&31](s,c[t>>2]|0,0)|0;if(u<<24>>24==48|u<<24>>24==69){x=o+8|0;if((x|0)==(k|0)){w=30;break b}H=x;I=Kd[c[(c[s>>2]|0)+52>>2]&31](s,c[x>>2]|0,0)|0;J=u}else{H=t;I=u;J=0}u=c[(c[b>>2]|0)+36>>2]|0;c[q>>2]=A;c[r>>2]=C;c[n+0>>2]=c[q+0>>2];c[m+0>>2]=c[r+0>>2];Rd[u&3](p,b,n,m,f,g,h,I,J);c[d>>2]=c[p>>2];K=H+4|0}else if((w|0)==36){while(1){w=0;u=D+4|0;if((u|0)==(k|0)){L=k;break}if(Kd[c[(c[s>>2]|0)+12>>2]&31](s,8192,c[u>>2]|0)|0){D=u;w=36}else{L=u;break}}u=A;t=C;x=C;while(1){if((u|0)!=0){M=c[u+12>>2]|0;if((M|0)==(c[u+16>>2]|0)){N=Fd[c[(c[u>>2]|0)+36>>2]&127](u)|0}else{N=c[M>>2]|0}if((N|0)==-1){c[d>>2]=0;O=1;P=0}else{O=0;P=u}}else{O=1;P=0}do{if((x|0)!=0){M=c[x+12>>2]|0;if((M|0)==(c[x+16>>2]|0)){Q=Fd[c[(c[x>>2]|0)+36>>2]&127](x)|0}else{Q=c[M>>2]|0}if(!((Q|0)==-1)){if(O^(t|0)==0){R=t;S=t;break}else{K=L;break c}}else{c[e>>2]=0;T=0;w=51;break}}else{T=t;w=51}}while(0);if((w|0)==51){w=0;if(O){K=L;break c}else{R=T;S=0}}M=P+12|0;U=c[M>>2]|0;V=P+16|0;if((U|0)==(c[V>>2]|0)){W=Fd[c[(c[P>>2]|0)+36>>2]&127](P)|0}else{W=c[U>>2]|0}if(!(Kd[c[(c[s>>2]|0)+12>>2]&31](s,8192,W)|0)){K=L;break c}U=c[M>>2]|0;if((U|0)==(c[V>>2]|0)){Fd[c[(c[P>>2]|0)+40>>2]&127](P)|0;u=P;t=R;x=S;continue}else{c[M>>2]=U+4;u=P;t=R;x=S;continue}}}else if((w|0)==64){w=0;x=c[E>>2]|0;if((x|0)==(c[F>>2]|0)){Fd[c[(c[A>>2]|0)+40>>2]&127](A)|0}else{c[E>>2]=x+4}K=o+4|0}}while(0);if((K|0)==(k|0)){w=69;break a}o=K;v=c[g>>2]|0}if((w|0)==24){c[g>>2]=4;X=A;break}else if((w|0)==27){c[g>>2]=4;X=A;break}else if((w|0)==30){c[g>>2]=4;X=A;break}}else{w=69}}while(0);if((w|0)==69){X=c[d>>2]|0}if((X|0)!=0){A=c[X+12>>2]|0;if((A|0)==(c[X+16>>2]|0)){Y=Fd[c[(c[X>>2]|0)+36>>2]&127](X)|0}else{Y=c[A>>2]|0}if((Y|0)==-1){c[d>>2]=0;Z=0;_=1}else{Z=X;_=0}}else{Z=0;_=1}X=c[e>>2]|0;do{if((X|0)!=0){d=c[X+12>>2]|0;if((d|0)==(c[X+16>>2]|0)){$=Fd[c[(c[X>>2]|0)+36>>2]&127](X)|0}else{$=c[d>>2]|0}if(($|0)==-1){c[e>>2]=0;w=82;break}if(_){c[a>>2]=Z;i=l;return}}else{w=82}}while(0);if((w|0)==82?!_:0){c[a>>2]=Z;i=l;return}c[g>>2]=c[g>>2]|2;c[a>>2]=Z;i=l;return}function An(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Bn(a){a=a|0;return}function Cn(a){a=a|0;return 2}function Dn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j;m=j+4|0;n=j+8|0;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];zn(a,b,l,k,f,g,h,12120,12152|0);i=j;return}function En(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;k=i;i=i+16|0;l=k+12|0;m=k;n=k+4|0;o=k+8|0;p=d+8|0;q=Fd[c[(c[p>>2]|0)+20>>2]&127](p)|0;c[n>>2]=c[e>>2];c[o>>2]=c[f>>2];f=a[q]|0;if((f&1)==0){r=q+4|0;s=(f&255)>>>1;t=q+4|0}else{f=c[q+8>>2]|0;r=f;s=c[q+4>>2]|0;t=f}f=r+(s<<2)|0;c[m+0>>2]=c[n+0>>2];c[l+0>>2]=c[o+0>>2];zn(b,d,m,l,g,h,j,t,f);i=k;return}function Fn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+32|0;k=j;l=j+16|0;m=j+12|0;sk(m,f);f=c[m>>2]|0;if(!((c[3264]|0)==-1)){c[k>>2]=13056;c[k+4>>2]=161;c[k+8>>2]=0;Uj(13056,k,162)}n=(c[13060>>2]|0)+ -1|0;o=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-o>>2>>>0>n>>>0)){p=fc(4)|0;Yr(p);td(p|0,21024,137)}f=c[o+(n<<2)>>2]|0;if((f|0)==0){p=fc(4)|0;Yr(p);td(p|0,21024,137)}Aj(c[m>>2]|0)|0;m=c[e>>2]|0;e=b+8|0;b=Fd[c[c[e>>2]>>2]&127](e)|0;c[l>>2]=m;m=b+168|0;c[k+0>>2]=c[l+0>>2];l=(lm(d,k,b,m,f,g,0)|0)-b|0;if((l|0)>=168){q=c[d>>2]|0;c[a>>2]=q;i=j;return}c[h+24>>2]=((l|0)/12|0|0)%7|0;q=c[d>>2]|0;c[a>>2]=q;i=j;return}function Gn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+32|0;k=j;l=j+16|0;m=j+12|0;sk(m,f);f=c[m>>2]|0;if(!((c[3264]|0)==-1)){c[k>>2]=13056;c[k+4>>2]=161;c[k+8>>2]=0;Uj(13056,k,162)}n=(c[13060>>2]|0)+ -1|0;o=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-o>>2>>>0>n>>>0)){p=fc(4)|0;Yr(p);td(p|0,21024,137)}f=c[o+(n<<2)>>2]|0;if((f|0)==0){p=fc(4)|0;Yr(p);td(p|0,21024,137)}Aj(c[m>>2]|0)|0;m=c[e>>2]|0;e=b+8|0;b=Fd[c[(c[e>>2]|0)+4>>2]&127](e)|0;c[l>>2]=m;m=b+288|0;c[k+0>>2]=c[l+0>>2];l=(lm(d,k,b,m,f,g,0)|0)-b|0;if((l|0)>=288){q=c[d>>2]|0;c[a>>2]=q;i=j;return}c[h+16>>2]=((l|0)/12|0|0)%12|0;q=c[d>>2]|0;c[a>>2]=q;i=j;return}function Hn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+32|0;j=b;k=b+16|0;l=b+12|0;sk(l,f);f=c[l>>2]|0;if(!((c[3264]|0)==-1)){c[j>>2]=13056;c[j+4>>2]=161;c[j+8>>2]=0;Uj(13056,j,162)}m=(c[13060>>2]|0)+ -1|0;n=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-n>>2>>>0>m>>>0)){o=fc(4)|0;Yr(o);td(o|0,21024,137)}f=c[n+(m<<2)>>2]|0;if((f|0)==0){o=fc(4)|0;Yr(o);td(o|0,21024,137)}Aj(c[l>>2]|0)|0;l=h+20|0;c[k>>2]=c[e>>2];c[j+0>>2]=c[k+0>>2];k=Ln(d,j,g,f,4)|0;if((c[g>>2]&4|0)!=0){p=c[d>>2]|0;c[a>>2]=p;i=b;return}if((k|0)<69){q=k+2e3|0}else{q=(k+ -69|0)>>>0<31?k+1900|0:k}c[l>>2]=q+ -1900;p=c[d>>2]|0;c[a>>2]=p;i=b;return}function In(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0;l=i;i=i+176|0;m=l;n=l+160|0;o=l+156|0;p=l+152|0;q=l+148|0;r=l+144|0;s=l+140|0;t=l+136|0;u=l+132|0;v=l+128|0;w=l+124|0;x=l+120|0;y=l+116|0;z=l+112|0;A=l+108|0;B=l+104|0;C=l+100|0;D=l+96|0;E=l+92|0;F=l+88|0;G=l+164|0;H=l+44|0;I=l+36|0;J=l+32|0;K=l+28|0;L=l+40|0;M=l+16|0;N=l+12|0;O=l+20|0;P=l+24|0;Q=l+80|0;R=l+48|0;S=l+52|0;T=l+56|0;U=l+60|0;V=l+64|0;W=l+68|0;X=l+72|0;Y=l+76|0;Z=l+84|0;c[h>>2]=0;sk(A,g);_=c[A>>2]|0;if(!((c[3264]|0)==-1)){c[m>>2]=13056;c[m+4>>2]=161;c[m+8>>2]=0;Uj(13056,m,162)}$=(c[13060>>2]|0)+ -1|0;aa=c[_+8>>2]|0;if(!((c[_+12>>2]|0)-aa>>2>>>0>$>>>0)){ba=fc(4)|0;Yr(ba);td(ba|0,21024,137)}_=c[aa+($<<2)>>2]|0;if((_|0)==0){ba=fc(4)|0;Yr(ba);td(ba|0,21024,137)}Aj(c[A>>2]|0)|0;a:do{switch(k<<24>>24|0){case 77:{c[s>>2]=c[f>>2];c[m+0>>2]=c[s+0>>2];A=Ln(e,m,h,_,2)|0;ba=c[h>>2]|0;if((ba&4|0)==0&(A|0)<60){c[j+4>>2]=A;break a}else{c[h>>2]=ba|4;break a}break};case 70:{c[I>>2]=c[e>>2];c[J>>2]=c[f>>2];c[n+0>>2]=c[I+0>>2];c[m+0>>2]=c[J+0>>2];zn(H,d,n,m,g,h,j,12184,12216|0);c[e>>2]=c[H>>2];break};case 68:{c[F>>2]=c[e>>2];c[G>>2]=c[f>>2];c[n+0>>2]=c[F+0>>2];c[m+0>>2]=c[G+0>>2];zn(E,d,n,m,g,h,j,12152,12184|0);c[e>>2]=c[E>>2];break};case 65:case 97:{ba=c[f>>2]|0;A=d+8|0;$=Fd[c[c[A>>2]>>2]&127](A)|0;c[z>>2]=ba;c[m+0>>2]=c[z+0>>2];ba=(lm(e,m,$,$+168|0,_,h,0)|0)-$|0;if((ba|0)<168){c[j+24>>2]=((ba|0)/12|0|0)%7|0}break};case 121:{ba=j+20|0;c[o>>2]=c[f>>2];c[m+0>>2]=c[o+0>>2];$=Ln(e,m,h,_,4)|0;if((c[h>>2]&4|0)==0){if(($|0)<69){ca=$+2e3|0}else{ca=($+ -69|0)>>>0<31?$+1900|0:$}c[ba>>2]=ca+ -1900}break};case 99:{ba=d+8|0;$=Fd[c[(c[ba>>2]|0)+12>>2]&127](ba)|0;c[C>>2]=c[e>>2];c[D>>2]=c[f>>2];ba=a[$]|0;if((ba&1)==0){da=$+4|0;ea=(ba&255)>>>1;fa=$+4|0}else{ba=c[$+8>>2]|0;da=ba;ea=c[$+4>>2]|0;fa=ba}c[n+0>>2]=c[C+0>>2];c[m+0>>2]=c[D+0>>2];zn(B,d,n,m,g,h,j,fa,da+(ea<<2)|0);c[e>>2]=c[B>>2];break};case 88:{ba=d+8|0;$=Fd[c[(c[ba>>2]|0)+24>>2]&127](ba)|0;c[X>>2]=c[e>>2];c[Y>>2]=c[f>>2];ba=a[$]|0;if((ba&1)==0){ga=$+4|0;ha=(ba&255)>>>1;ia=$+4|0}else{ba=c[$+8>>2]|0;ga=ba;ha=c[$+4>>2]|0;ia=ba}c[n+0>>2]=c[X+0>>2];c[m+0>>2]=c[Y+0>>2];zn(W,d,n,m,g,h,j,ia,ga+(ha<<2)|0);c[e>>2]=c[W>>2];break};case 112:{ba=j+8|0;$=c[f>>2]|0;A=d+8|0;aa=Fd[c[(c[A>>2]|0)+8>>2]&127](A)|0;A=a[aa]|0;if((A&1)==0){ja=(A&255)>>>1}else{ja=c[aa+4>>2]|0}A=a[aa+12|0]|0;if((A&1)==0){ka=(A&255)>>>1}else{ka=c[aa+16>>2]|0}if((ja|0)==(0-ka|0)){c[h>>2]=c[h>>2]|4;break a}c[r>>2]=$;c[m+0>>2]=c[r+0>>2];$=lm(e,m,aa,aa+24|0,_,h,0)|0;A=$-aa|0;if(($|0)==(aa|0)?(c[ba>>2]|0)==12:0){c[ba>>2]=0;break a}if((A|0)==12?(A=c[ba>>2]|0,(A|0)<12):0){c[ba>>2]=A+12}break};case 104:case 66:case 98:{A=c[f>>2]|0;ba=d+8|0;aa=Fd[c[(c[ba>>2]|0)+4>>2]&127](ba)|0;c[y>>2]=A;c[m+0>>2]=c[y+0>>2];A=(lm(e,m,aa,aa+288|0,_,h,0)|0)-aa|0;if((A|0)<288){c[j+16>>2]=((A|0)/12|0|0)%12|0}break};case 82:{c[P>>2]=c[e>>2];c[Q>>2]=c[f>>2];c[n+0>>2]=c[P+0>>2];c[m+0>>2]=c[Q+0>>2];zn(O,d,n,m,g,h,j,12264,12284|0);c[e>>2]=c[O>>2];break};case 116:case 110:{c[K>>2]=c[f>>2];c[m+0>>2]=c[K+0>>2];Jn(0,e,m,h,_);break};case 106:{c[u>>2]=c[f>>2];c[m+0>>2]=c[u+0>>2];A=Ln(e,m,h,_,3)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(A|0)<366){c[j+28>>2]=A;break a}else{c[h>>2]=aa|4;break a}break};case 109:{c[t>>2]=c[f>>2];c[m+0>>2]=c[t+0>>2];aa=Ln(e,m,h,_,2)|0;A=c[h>>2]|0;if((A&4|0)==0&(aa|0)<13){c[j+16>>2]=aa+ -1;break a}else{c[h>>2]=A|4;break a}break};case 101:case 100:{A=j+12|0;c[x>>2]=c[f>>2];c[m+0>>2]=c[x+0>>2];aa=Ln(e,m,h,_,2)|0;ba=c[h>>2]|0;if((ba&4|0)==0?(aa+ -1|0)>>>0<31:0){c[A>>2]=aa;break a}c[h>>2]=ba|4;break};case 73:{ba=j+8|0;c[v>>2]=c[f>>2];c[m+0>>2]=c[v+0>>2];aa=Ln(e,m,h,_,2)|0;A=c[h>>2]|0;if((A&4|0)==0?(aa+ -1|0)>>>0<12:0){c[ba>>2]=aa;break a}c[h>>2]=A|4;break};case 84:{c[S>>2]=c[e>>2];c[T>>2]=c[f>>2];c[n+0>>2]=c[S+0>>2];c[m+0>>2]=c[T+0>>2];zn(R,d,n,m,g,h,j,12288,12320|0);c[e>>2]=c[R>>2];break};case 120:{A=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];c[n+0>>2]=c[U+0>>2];c[m+0>>2]=c[V+0>>2];Pd[A&63](b,d,n,m,g,h,j);i=l;return};case 37:{c[Z>>2]=c[f>>2];c[m+0>>2]=c[Z+0>>2];Kn(0,e,m,h,_);break};case 119:{c[p>>2]=c[f>>2];c[m+0>>2]=c[p+0>>2];A=Ln(e,m,h,_,1)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(A|0)<7){c[j+24>>2]=A;break a}else{c[h>>2]=aa|4;break a}break};case 83:{c[q>>2]=c[f>>2];c[m+0>>2]=c[q+0>>2];aa=Ln(e,m,h,_,2)|0;A=c[h>>2]|0;if((A&4|0)==0&(aa|0)<61){c[j>>2]=aa;break a}else{c[h>>2]=A|4;break a}break};case 72:{c[w>>2]=c[f>>2];c[m+0>>2]=c[w+0>>2];A=Ln(e,m,h,_,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(A|0)<24){c[j+8>>2]=A;break a}else{c[h>>2]=aa|4;break a}break};case 114:{c[M>>2]=c[e>>2];c[N>>2]=c[f>>2];c[n+0>>2]=c[M+0>>2];c[m+0>>2]=c[N+0>>2];zn(L,d,n,m,g,h,j,12216,12260|0);c[e>>2]=c[L>>2];break};case 89:{c[n>>2]=c[f>>2];c[m+0>>2]=c[n+0>>2];aa=Ln(e,m,h,_,4)|0;if((c[h>>2]&4|0)==0){c[j+20>>2]=aa+ -1900}break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}function Jn(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;a=i;a:while(1){g=c[b>>2]|0;do{if((g|0)!=0){h=c[g+12>>2]|0;if((h|0)==(c[g+16>>2]|0)){j=Fd[c[(c[g>>2]|0)+36>>2]&127](g)|0}else{j=c[h>>2]|0}if((j|0)==-1){c[b>>2]=0;k=1;break}else{k=(c[b>>2]|0)==0;break}}else{k=1}}while(0);g=c[d>>2]|0;do{if((g|0)!=0){h=c[g+12>>2]|0;if((h|0)==(c[g+16>>2]|0)){l=Fd[c[(c[g>>2]|0)+36>>2]&127](g)|0}else{l=c[h>>2]|0}if(!((l|0)==-1)){if(k){m=g;break}else{n=g;break a}}else{c[d>>2]=0;o=15;break}}else{o=15}}while(0);if((o|0)==15){o=0;if(k){n=0;break}else{m=0}}g=c[b>>2]|0;h=c[g+12>>2]|0;if((h|0)==(c[g+16>>2]|0)){p=Fd[c[(c[g>>2]|0)+36>>2]&127](g)|0}else{p=c[h>>2]|0}if(!(Kd[c[(c[f>>2]|0)+12>>2]&31](f,8192,p)|0)){n=m;break}h=c[b>>2]|0;g=h+12|0;q=c[g>>2]|0;if((q|0)==(c[h+16>>2]|0)){Fd[c[(c[h>>2]|0)+40>>2]&127](h)|0;continue}else{c[g>>2]=q+4;continue}}m=c[b>>2]|0;do{if((m|0)!=0){p=c[m+12>>2]|0;if((p|0)==(c[m+16>>2]|0)){r=Fd[c[(c[m>>2]|0)+36>>2]&127](m)|0}else{r=c[p>>2]|0}if((r|0)==-1){c[b>>2]=0;s=1;break}else{s=(c[b>>2]|0)==0;break}}else{s=1}}while(0);do{if((n|0)!=0){b=c[n+12>>2]|0;if((b|0)==(c[n+16>>2]|0)){t=Fd[c[(c[n>>2]|0)+36>>2]&127](n)|0}else{t=c[b>>2]|0}if((t|0)==-1){c[d>>2]=0;o=37;break}if(s){i=a;return}}else{o=37}}while(0);if((o|0)==37?!s:0){i=a;return}c[e>>2]=c[e>>2]|2;i=a;return}function Kn(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=i;g=c[b>>2]|0;do{if((g|0)!=0){h=c[g+12>>2]|0;if((h|0)==(c[g+16>>2]|0)){j=Fd[c[(c[g>>2]|0)+36>>2]&127](g)|0}else{j=c[h>>2]|0}if((j|0)==-1){c[b>>2]=0;k=1;break}else{k=(c[b>>2]|0)==0;break}}else{k=1}}while(0);j=c[d>>2]|0;do{if((j|0)!=0){g=c[j+12>>2]|0;if((g|0)==(c[j+16>>2]|0)){l=Fd[c[(c[j>>2]|0)+36>>2]&127](j)|0}else{l=c[g>>2]|0}if(!((l|0)==-1)){if(k){m=j;break}else{n=16;break}}else{c[d>>2]=0;n=14;break}}else{n=14}}while(0);if((n|0)==14){if(k){n=16}else{m=0}}if((n|0)==16){c[e>>2]=c[e>>2]|6;i=a;return}k=c[b>>2]|0;j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0)){o=Fd[c[(c[k>>2]|0)+36>>2]&127](k)|0}else{o=c[j>>2]|0}if(!((Kd[c[(c[f>>2]|0)+52>>2]&31](f,o,0)|0)<<24>>24==37)){c[e>>2]=c[e>>2]|4;i=a;return}o=c[b>>2]|0;f=o+12|0;j=c[f>>2]|0;if((j|0)==(c[o+16>>2]|0)){Fd[c[(c[o>>2]|0)+40>>2]&127](o)|0}else{c[f>>2]=j+4}j=c[b>>2]|0;do{if((j|0)!=0){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0)){p=Fd[c[(c[j>>2]|0)+36>>2]&127](j)|0}else{p=c[f>>2]|0}if((p|0)==-1){c[b>>2]=0;q=1;break}else{q=(c[b>>2]|0)==0;break}}else{q=1}}while(0);do{if((m|0)!=0){b=c[m+12>>2]|0;if((b|0)==(c[m+16>>2]|0)){r=Fd[c[(c[m>>2]|0)+36>>2]&127](m)|0}else{r=c[b>>2]|0}if((r|0)==-1){c[d>>2]=0;n=38;break}if(q){i=a;return}}else{n=38}}while(0);if((n|0)==38?!q:0){i=a;return}c[e>>2]=c[e>>2]|2;i=a;return}function Ln(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;h=c[a>>2]|0;do{if((h|0)!=0){j=c[h+12>>2]|0;if((j|0)==(c[h+16>>2]|0)){k=Fd[c[(c[h>>2]|0)+36>>2]&127](h)|0}else{k=c[j>>2]|0}if((k|0)==-1){c[a>>2]=0;l=1;break}else{l=(c[a>>2]|0)==0;break}}else{l=1}}while(0);k=c[b>>2]|0;do{if((k|0)!=0){h=c[k+12>>2]|0;if((h|0)==(c[k+16>>2]|0)){m=Fd[c[(c[k>>2]|0)+36>>2]&127](k)|0}else{m=c[h>>2]|0}if(!((m|0)==-1)){if(l){n=k;break}else{o=16;break}}else{c[b>>2]=0;o=14;break}}else{o=14}}while(0);if((o|0)==14){if(l){o=16}else{n=0}}if((o|0)==16){c[d>>2]=c[d>>2]|6;p=0;i=g;return p|0}l=c[a>>2]|0;k=c[l+12>>2]|0;if((k|0)==(c[l+16>>2]|0)){q=Fd[c[(c[l>>2]|0)+36>>2]&127](l)|0}else{q=c[k>>2]|0}if(!(Kd[c[(c[e>>2]|0)+12>>2]&31](e,2048,q)|0)){c[d>>2]=c[d>>2]|4;p=0;i=g;return p|0}k=(Kd[c[(c[e>>2]|0)+52>>2]&31](e,q,0)|0)<<24>>24;q=c[a>>2]|0;l=q+12|0;m=c[l>>2]|0;if((m|0)==(c[q+16>>2]|0)){Fd[c[(c[q>>2]|0)+40>>2]&127](q)|0;r=f;s=n;t=n;u=k}else{c[l>>2]=m+4;r=f;s=n;t=n;u=k}while(1){v=u+ -48|0;k=r+ -1|0;n=c[a>>2]|0;do{if((n|0)!=0){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0)){w=Fd[c[(c[n>>2]|0)+36>>2]&127](n)|0}else{w=c[f>>2]|0}if((w|0)==-1){c[a>>2]=0;x=1;break}else{x=(c[a>>2]|0)==0;break}}else{x=1}}while(0);do{if((t|0)!=0){n=c[t+12>>2]|0;if((n|0)==(c[t+16>>2]|0)){y=Fd[c[(c[t>>2]|0)+36>>2]&127](t)|0}else{y=c[n>>2]|0}if((y|0)==-1){c[b>>2]=0;z=0;A=0;B=1;break}else{z=s;A=s;B=(s|0)==0;break}}else{z=s;A=0;B=1}}while(0);C=c[a>>2]|0;if(!((x^B)&(k|0)>0)){break}n=c[C+12>>2]|0;if((n|0)==(c[C+16>>2]|0)){D=Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0}else{D=c[n>>2]|0}if(!(Kd[c[(c[e>>2]|0)+12>>2]&31](e,2048,D)|0)){p=v;o=63;break}n=((Kd[c[(c[e>>2]|0)+52>>2]&31](e,D,0)|0)<<24>>24)+(v*10|0)|0;f=c[a>>2]|0;m=f+12|0;l=c[m>>2]|0;if((l|0)==(c[f+16>>2]|0)){Fd[c[(c[f>>2]|0)+40>>2]&127](f)|0;r=k;s=z;t=A;u=n;continue}else{c[m>>2]=l+4;r=k;s=z;t=A;u=n;continue}}if((o|0)==63){i=g;return p|0}do{if((C|0)!=0){u=c[C+12>>2]|0;if((u|0)==(c[C+16>>2]|0)){E=Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0}else{E=c[u>>2]|0}if((E|0)==-1){c[a>>2]=0;F=1;break}else{F=(c[a>>2]|0)==0;break}}else{F=1}}while(0);do{if((z|0)!=0){a=c[z+12>>2]|0;if((a|0)==(c[z+16>>2]|0)){G=Fd[c[(c[z>>2]|0)+36>>2]&127](z)|0}else{G=c[a>>2]|0}if((G|0)==-1){c[b>>2]=0;o=60;break}if(F){p=v;i=g;return p|0}}else{o=60}}while(0);if((o|0)==60?!F:0){p=v;i=g;return p|0}c[d>>2]=c[d>>2]|2;p=v;i=g;return p|0}function Mn(b){b=b|0;var d=0,e=0,f=0;d=i;e=b+8|0;f=c[e>>2]|0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}if((f|0)==(c[3238]|0)){ys(b);i=d;return}Jb(c[e>>2]|0);ys(b);i=d;return}function Nn(b){b=b|0;var d=0,e=0;d=i;e=b+8|0;b=c[e>>2]|0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}if((b|0)==(c[3238]|0)){i=d;return}Jb(c[e>>2]|0);i=d;return}function On(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+112|0;f=g+100|0;l=g;a[f]=37;m=f+1|0;a[m]=j;n=f+2|0;a[n]=k;a[f+3|0]=0;if(!(k<<24>>24==0)){a[m]=k;a[n]=j}j=Vc(l|0,100,f|0,h|0,c[d+8>>2]|0)|0;d=l+j|0;h=c[e>>2]|0;if((j|0)==0){o=h;c[b>>2]=o;i=g;return}else{p=l;q=h;r=h}while(1){h=a[p]|0;do{if((q|0)!=0){l=q+24|0;j=c[l>>2]|0;if((j|0)==(c[q+28>>2]|0)){e=(Sd[c[(c[q>>2]|0)+52>>2]&31](q,h&255)|0)==-1;s=e?0:r;t=e?0:q;break}else{c[l>>2]=j+1;a[j]=h;s=r;t=q;break}}else{s=r;t=0}}while(0);h=p+1|0;if((h|0)==(d|0)){o=s;break}else{p=h;q=t;r=s}}c[b>>2]=o;i=g;return}function Pn(b){b=b|0;var d=0,e=0,f=0;d=i;e=b+8|0;f=c[e>>2]|0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}if((f|0)==(c[3238]|0)){ys(b);i=d;return}Jb(c[e>>2]|0);ys(b);i=d;return}function Qn(b){b=b|0;var d=0,e=0;d=i;e=b+8|0;b=c[e>>2]|0;if((a[12960]|0)==0?(Na(12960)|0)!=0:0){c[3238]=Ya(2147483647,12968,0)|0;Bb(12960)}if((b|0)==(c[3238]|0)){i=d;return}Jb(c[e>>2]|0);i=d;return}



function Bg(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0;d=i;i=i+304|0;e=d;f=d+124|0;h=d+136|0;j=d+148|0;k=d+172|0;l=d+184|0;m=d+196|0;n=d+208|0;o=d+220|0;p=d+112|0;q=d+100|0;r=d+88|0;s=d+160|0;t=d+52|0;u=d+48|0;v=d+232|0;w=d+36|0;x=d+40|0;y=d+44|0;z=d+72|0;A=d+56|0;B=d+60|0;C=d+64|0;D=d+68|0;E=d+76|0;F=c[b>>2]|0;if((F|0)==0){G=1;i=d;return G|0}if(!(Sh(F)|0)){F=c[5092>>2]|0;H=c[1272]|0;a:do{if((F|0)!=(H|0)){I=F-H>>2;J=0;while(1){K=J+1|0;if((c[H+(J<<2)>>2]|0)==(b|0)){break}if(K>>>0<I>>>0){J=K}else{L=8;break a}}if((b|0)!=0){M=b}else{L=8}}else{L=8}}while(0);if((L|0)==8){if((xi(5312,5160,53,0,e)|0)==0){c[e>>2]=5160;c[e+4>>2]=53;Mb(5208,e|0)|0;H=fc(8)|0;F=ws(48)|0;c[m+8>>2]=F;c[m>>2]=49;c[m+4>>2]=40;N=F+0|0;J=5160|0;O=N+40|0;do{a[N]=a[J]|0;N=N+1|0;J=J+1|0}while((N|0)<(O|0));a[F+40|0]=0;a[n]=2;a[n+1|0]=40;a[n+2|0]=0;ze(l,m,n);yi(o,53);ze(k,l,o);o=ws(32)|0;c[p+8>>2]=o;c[p>>2]=33;c[p+4>>2]=26;N=o+0|0;J=5232|0;O=N+26|0;do{a[N]=a[J]|0;N=N+1|0;J=J+1|0}while((N|0)<(O|0));a[o+26|0]=0;ze(j,k,p);a[q]=10;p=q+1|0;a[p+0|0]=a[5312|0]|0;a[p+1|0]=a[5313|0]|0;a[p+2|0]=a[5314|0]|0;a[p+3|0]=a[5315|0]|0;a[p+4|0]=a[5316|0]|0;a[q+6|0]=0;ze(h,j,q);a[r]=4;q=r+1|0;a[q]=2599;a[q+1|0]=10;a[r+3|0]=0;ze(f,h,r);Fj(H,f);td(H|0,9992,51)}else{M=0}}H=Uh(c[b>>2]|0)|0;f=Th(c[b>>2]|0)|0;c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;b:do{if((f|0)!=0){r=s+1|0;h=M+8|0;q=M+12|0;j=s+8|0;p=E+1|0;k=E+8|0;o=E+4|0;J=s+4|0;l=1;n=0;c:while(1){m=a[H+n|0]|0;if(m<<24>>24==10){if(!l){F=(a[s]&1)==0?r:c[j>>2]|0;c[e>>2]=v;c[e+4>>2]=w;c[e+8>>2]=x;c[e+12>>2]=y;c[e+16>>2]=z;c[e+20>>2]=A;c[e+24>>2]=B;c[e+28>>2]=C;c[e+32>>2]=D;Pa(F|0,5328,e|0)|0;F=ws(40)|0;N=F+0|0;O=N+40|0;do{c[N>>2]=0;N=N+4|0}while((N|0)<(O|0));c[F>>2]=M;P=+(c[w>>2]|0);g[F+4>>2]=P;Q=+(c[x>>2]|0);g[F+8>>2]=Q;R=+(c[y>>2]|0);g[F+12>>2]=R;S=+(c[z>>2]|0);g[F+16>>2]=S;T=+(c[A>>2]|0);g[F+20>>2]=T;U=+(c[B>>2]|0);g[F+24>>2]=U;g[F+28>>2]=+(c[C>>2]|0);g[F+32>>2]=+(c[D>>2]|0);c[F+36>>2]=ah(P,Q,R,S,+g[h>>2],+g[q>>2],T,U,R,S)|0;I=Ws(v|0)|0;if(I>>>0>4294967279){L=16;break}if(I>>>0<11){a[E]=I<<1;V=p}else{K=I+16&-16;W=ws(K)|0;c[k>>2]=W;c[E>>2]=K|1;c[o>>2]=I;V=W}Ss(V|0,v|0,I|0)|0;a[V+I|0]=0;c[(Cg(5104,E)|0)>>2]=F;if(!((a[E]&1)==0)){ys(c[k>>2]|0)}}else{c[t>>2]=0;c[u>>2]=0;I=(a[s]&1)==0?r:c[j>>2]|0;c[e>>2]=t;c[e+4>>2]=u;Pa(I|0,5320,e|0)|0;g[h>>2]=+(c[t>>2]|0);g[q>>2]=+(c[u>>2]|0)}$j(s,5360)|0;X=0}else{I=a[s]|0;W=(I&1)!=0;if(W){K=c[s>>2]|0;Y=K&255;Z=(K&-2)+ -1|0;_=c[J>>2]|0}else{Y=I;Z=10;_=(I&255)>>>1}do{if((_|0)!=(Z|0)){if(W){$=c[j>>2]|0;L=38;break}else{a[s]=(_<<1)+2;aa=r;ba=_+1|0;break}}else{if((Z|0)==-17){L=28;break c}I=(Y&1)==0?r:c[j>>2]|0;if(Z>>>0<2147483623){K=Z+1|0;ca=Z<<1;da=K>>>0<ca>>>0?ca:K;if(da>>>0<11){ea=11}else{ea=da+16&-16}}else{ea=-17}da=ws(ea)|0;Ss(da|0,I|0,Z|0)|0;if((Z|0)!=10){ys(I)}c[j>>2]=da;c[s>>2]=ea|1;$=da;L=38}}while(0);if((L|0)==38){L=0;W=_+1|0;c[J>>2]=W;aa=$;ba=W}a[aa+_|0]=m;a[aa+ba|0]=0;X=l}n=n+1|0;if(!(n>>>0<f>>>0)){break b}else{l=X}}if((L|0)==16){Vj(0)}else if((L|0)==28){Vj(0)}}}while(0);Vh(c[M>>2]|0);c[M>>2]=0;if(!((a[s]&1)==0)){ys(c[s+8>>2]|0)}}G=(c[b>>2]|0)==0;i=d;return G|0}function Cg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+16|0;f=e;g=Kg(b,f,d)|0;h=c[g>>2]|0;if((h|0)!=0){j=h;k=j+28|0;i=e;return k|0}h=ws(32)|0;l=h+16|0;if((a[d]&1)==0){c[l+0>>2]=c[d+0>>2];c[l+4>>2]=c[d+4>>2];c[l+8>>2]=c[d+8>>2]}else{m=c[d+8>>2]|0;n=c[d+4>>2]|0;if(n>>>0>4294967279){Vj(0)}if(n>>>0<11){a[l]=n<<1;o=h+17|0}else{d=n+16&-16;p=ws(d)|0;c[h+24>>2]=p;c[l>>2]=d|1;c[h+20>>2]=n;o=p}Ss(o|0,m|0,n|0)|0;a[o+n|0]=0}c[h+28>>2]=0;n=c[f>>2]|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=n;c[g>>2]=h;n=c[c[b>>2]>>2]|0;if((n|0)==0){q=h}else{c[b>>2]=n;q=c[g>>2]|0}xf(c[b+4>>2]|0,q);q=b+8|0;c[q>>2]=(c[q>>2]|0)+1;j=h;k=j+28|0;i=e;return k|0}function Dg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;d=i;i=i+144|0;e=d;f=d+116|0;g=d+104|0;h=d+92|0;j=d+80|0;k=d+68|0;l=d+128|0;m=d+32|0;n=d+20|0;o=d+8|0;p=d+44|0;q=d+56|0;r=c[5092>>2]|0;s=c[1272]|0;a:do{if((r|0)!=(s|0)){t=r-s>>2;u=0;while(1){v=u+1|0;if((c[s+(u<<2)>>2]|0)==(b|0)){break}if(v>>>0<t>>>0){u=v}else{break a}}t=c[1276]|0;if((t|0)!=(5108|0)){v=t;while(1){t=v+28|0;do{w=c[t>>2]|0}while((c[w>>2]|0)!=(b|0));x=v+4|0;y=c[x>>2]|0;if((y|0)==0){z=v;while(1){A=c[z+8>>2]|0;if((c[A>>2]|0)==(z|0)){B=A;break}else{z=A}}}else{z=y;while(1){A=c[z>>2]|0;if((A|0)==0){B=z;break}else{z=A}}}ch(c[w+36>>2]|0);z=c[t>>2]|0;if((z|0)!=0){ys(z)}z=c[x>>2]|0;if((z|0)==0){y=v;while(1){A=c[y+8>>2]|0;if((c[A>>2]|0)==(y|0)){C=A;break}else{y=A}}}else{y=z;while(1){x=c[y>>2]|0;if((x|0)==0){C=y;break}else{y=x}}}if((c[1276]|0)==(v|0)){c[1276]=C}c[5112>>2]=(c[5112>>2]|0)+ -1;if(!((a[v+16|0]&1)==0)){ys(c[v+24>>2]|0)}vf(c[5108>>2]|0,v);ys(v);if((B|0)==(5108|0)){break}else{v=B}}}v=c[b+4>>2]|0;if((v|0)!=0){Pg(v);ys(v)}if((b|0)!=0){ys(b)}v=c[1272]|0;y=u<<2>>2;z=v+(y+1<<2)|0;x=(c[5092>>2]|0)-z|0;Ts(v+(y<<2)|0,z|0,x|0)|0;z=v+((x>>2)+y<<2)|0;y=c[5092>>2]|0;if((y|0)==(z|0)){i=d;return}c[5092>>2]=y+(~((y+ -4+(0-z)|0)>>>2)<<2);i=d;return}}while(0);if((xi(5368,5160,153,0,e)|0)==0){c[e>>2]=5160;c[e+4>>2]=153;Mb(5208,e|0)|0;e=fc(8)|0;b=ws(48)|0;c[l+8>>2]=b;c[l>>2]=49;c[l+4>>2]=40;B=b+0|0;C=5160|0;w=B+40|0;do{a[B]=a[C]|0;B=B+1|0;C=C+1|0}while((B|0)<(w|0));a[b+40|0]=0;a[m]=2;a[m+1|0]=40;a[m+2|0]=0;ze(k,l,m);yi(n,153);ze(j,k,n);n=ws(32)|0;c[o+8>>2]=n;c[o>>2]=33;c[o+4>>2]=26;B=n+0|0;C=5232|0;w=B+26|0;do{a[B]=a[C]|0;B=B+1|0;C=C+1|0}while((B|0)<(w|0));a[n+26|0]=0;ze(h,j,o);a[p]=10;o=p+1|0;a[o+0|0]=a[5368|0]|0;a[o+1|0]=a[5369|0]|0;a[o+2|0]=a[5370|0]|0;a[o+3|0]=a[5371|0]|0;a[o+4|0]=a[5372|0]|0;a[p+6|0]=0;ze(g,h,p);a[q]=4;p=q+1|0;a[p]=2599;a[p+1|0]=10;a[q+3|0]=0;ze(f,g,q);Fj(e,f);td(e|0,9992,51)}else{i=d;return}}function Eg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;d=i;i=i+144|0;e=d;f=d+128|0;g=d+116|0;h=d+104|0;j=d+92|0;k=d+80|0;l=d+132|0;m=d+44|0;n=d+32|0;o=d+20|0;p=d+8|0;q=d+56|0;r=d+68|0;Jg(f,5104,b);b=c[f>>2]|0;if((b|0)!=(5108|0)){s=b+28|0;t=c[s>>2]|0;i=d;return t|0}if((xi(5376,5160,164,0,e)|0)==0){c[e>>2]=5160;c[e+4>>2]=164;Mb(5208,e|0)|0;e=fc(8)|0;f=ws(48)|0;c[m+8>>2]=f;c[m>>2]=49;c[m+4>>2]=40;u=f+0|0;v=5160|0;w=u+40|0;do{a[u]=a[v]|0;u=u+1|0;v=v+1|0}while((u|0)<(w|0));a[f+40|0]=0;a[n]=2;a[n+1|0]=40;a[n+2|0]=0;ze(l,m,n);yi(o,164);ze(k,l,o);o=ws(32)|0;c[p+8>>2]=o;c[p>>2]=33;c[p+4>>2]=26;u=o+0|0;v=5232|0;w=u+26|0;do{a[u]=a[v]|0;u=u+1|0;v=v+1|0}while((u|0)<(w|0));a[o+26|0]=0;ze(j,k,p);p=ws(32)|0;c[q+8>>2]=p;c[q>>2]=33;c[q+4>>2]=24;u=p+0|0;v=5376|0;w=u+24|0;do{a[u]=a[v]|0;u=u+1|0;v=v+1|0}while((u|0)<(w|0));a[p+24|0]=0;ze(h,j,q);a[r]=4;q=r+1|0;a[q]=2599;a[q+1|0]=10;a[r+3|0]=0;ze(g,h,r);Fj(e,g);td(e|0,9992,51)}else{s=b+28|0;t=c[s>>2]|0;i=d;return t|0}return 0}function Fg(a,b,d,e,f,h){a=a|0;b=+b;d=+d;e=e|0;f=f|0;h=+h;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0,y=0.0,z=0,A=0.0,B=0,C=0.0,D=0,E=0.0,F=0,G=0.0,H=0,I=0.0,J=0,K=0.0,L=0,M=0,N=0,O=0,P=0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0.0,sa=0.0,ta=0.0,ua=0.0,va=0.0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0.0,Ca=0.0,Da=0.0,Ea=0.0,Fa=0.0,Ga=0.0,Ha=0.0;j=i;i=i+144|0;k=j+140|0;l=j;m=j+64|0;n=j+128|0;g[k>>2]=h;o=c[a>>2]|0;p=l+0|0;q=p+52|0;do{c[p>>2]=0;p=p+4|0}while((p|0)<(q|0));r=+g[e>>2];g[l>>2]=r;s=+g[e+4>>2];p=l+4|0;g[p>>2]=s;t=+g[e+8>>2];q=l+8|0;g[q>>2]=t;u=+g[e+12>>2];v=l+12|0;g[v>>2]=u;w=+g[e+16>>2];x=l+16|0;g[x>>2]=w;y=+g[e+20>>2];z=l+20|0;g[z>>2]=y;A=+g[e+24>>2];B=l+24|0;g[B>>2]=A;C=+g[e+28>>2];D=l+28|0;g[D>>2]=C;E=+g[e+32>>2];F=l+32|0;g[F>>2]=E;G=+g[e+36>>2];H=l+36|0;g[H>>2]=G;I=+g[e+40>>2];J=l+40|0;g[J>>2]=I;K=+g[e+44>>2];L=l+44|0;g[L>>2]=K;M=l+48|0;N=l+52|0;O=l+56|0;P=l+60|0;Q=E*0.0;R=G*0.0;S=I*0.0;T=K*0.0;U=r*b+w*d+Q+ +g[e+48>>2];V=s*b+y*d+R+ +g[e+52>>2];W=t*b+A*d+S+ +g[e+56>>2];X=u*b+C*d+T+ +g[e+60>>2];g[M>>2]=U;g[N>>2]=V;g[O>>2]=W;g[P>>2]=X;if(!(h!=0.0|f)){Y=c[1406]|0;Ia(Y|0);Z=c[1408]|0;Ma(Z|0,1,0,l|0);Ac(33984);_=o+4|0;$=c[_>>2]|0;aa=Sg($)|0;mc(3553,aa|0);ba=c[1410]|0;sc(ba|0,0);ca=a+36|0;da=c[ca>>2]|0;bh(da);Za(0);Za(1);Ia(0);i=j;return}e=a+28|0;d=+g[e>>2];b=d*.5;ea=a+32|0;fa=+g[ea>>2];ga=fa*.5;ha=b*r+ga*w+Q+U;U=b*s+ga*y+R+V;V=b*t+ga*A+S+W;W=b*u+ga*C+T+X;g[l>>2]=r;g[p>>2]=s;g[q>>2]=t;g[v>>2]=u;g[x>>2]=w;g[z>>2]=y;g[B>>2]=A;g[D>>2]=C;g[F>>2]=E;g[H>>2]=G;g[J>>2]=I;g[L>>2]=K;g[M>>2]=ha;g[N>>2]=U;g[O>>2]=V;g[P>>2]=W;if(f){X=r*-1.0;T=s*-1.0;ga=t*-1.0;b=u*-1.0;g[l>>2]=X;g[p>>2]=T;g[q>>2]=ga;g[v>>2]=b;g[x>>2]=w;g[z>>2]=y;g[B>>2]=A;g[D>>2]=C;g[F>>2]=E;g[H>>2]=G;g[J>>2]=I;g[L>>2]=K;g[M>>2]=ha;g[N>>2]=U;g[O>>2]=V;g[P>>2]=W;ia=b;ja=ga;ka=T;la=X}else{ia=u;ja=t;ka=s;la=r}if(h!=0.0){g[n>>2]=0.0;g[n+4>>2]=0.0;g[n+8>>2]=1.0;Gg(m,l,k,n);h=+g[m>>2];g[l>>2]=h;r=+g[m+4>>2];g[p>>2]=r;s=+g[m+8>>2];g[q>>2]=s;t=+g[m+12>>2];g[v>>2]=t;u=+g[m+16>>2];g[x>>2]=u;X=+g[m+20>>2];g[z>>2]=X;T=+g[m+24>>2];g[B>>2]=T;ga=+g[m+28>>2];g[D>>2]=ga;b=+g[m+32>>2];g[F>>2]=b;S=+g[m+36>>2];g[H>>2]=S;R=+g[m+40>>2];g[J>>2]=R;Q=+g[m+44>>2];g[L>>2]=Q;ma=+g[m+48>>2];g[M>>2]=ma;na=+g[m+52>>2];g[N>>2]=na;oa=+g[m+56>>2];g[O>>2]=oa;pa=+g[m+60>>2];g[P>>2]=pa;qa=+g[e>>2];ra=+g[ea>>2];sa=h;ta=r;ua=s;va=t;wa=u;xa=X;ya=T;za=ga;Aa=b;Ba=S;Ca=R;Da=Q;Ea=ma;Fa=na;Ga=oa;Ha=pa}else{qa=d;ra=fa;sa=la;ta=ka;ua=ja;va=ia;wa=w;xa=y;ya=A;za=C;Aa=E;Ba=G;Ca=I;Da=K;Ea=ha;Fa=U;Ga=V;Ha=W}W=qa*-.5;qa=ra*-.5;g[l>>2]=sa;g[p>>2]=ta;g[q>>2]=ua;g[v>>2]=va;g[x>>2]=wa;g[z>>2]=xa;g[B>>2]=ya;g[D>>2]=za;g[F>>2]=Aa;g[H>>2]=Ba;g[J>>2]=Ca;g[L>>2]=Da;g[M>>2]=W*sa+qa*wa+Aa*0.0+Ea;g[N>>2]=W*ta+qa*xa+Ba*0.0+Fa;g[O>>2]=W*ua+qa*ya+Ca*0.0+Ga;g[P>>2]=W*va+qa*za+Da*0.0+Ha;Y=c[1406]|0;Ia(Y|0);Z=c[1408]|0;Ma(Z|0,1,0,l|0);Ac(33984);_=o+4|0;$=c[_>>2]|0;aa=Sg($)|0;mc(3553,aa|0);ba=c[1410]|0;sc(ba|0,0);ca=a+36|0;da=c[ca>>2]|0;bh(da);Za(0);Za(1);Ia(0);i=j;return}function Gg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0;f=i;h=+g[d>>2]*.01745329238474369;j=+X(+h);k=+Y(+h);h=+g[e>>2];l=+g[e+4>>2];m=+g[e+8>>2];n=1.0/+V(+(h*h+l*l+m*m));o=h*n;h=l*n;l=m*n;n=1.0-j;m=n*o;p=n*h;q=n*l;n=j+o*m;r=k*l;s=r+(h*m+0.0);t=k*h;u=l*m+0.0-t;m=o*p+0.0-r;r=j+h*p;v=k*o;k=v+(l*p+0.0);p=t+(o*q+0.0);o=h*q+0.0-v;v=j+l*q;e=a+0|0;d=e+64|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(d|0));q=+g[b>>2];l=+g[b+4>>2];j=+g[b+8>>2];h=+g[b+12>>2];t=+g[b+16>>2];w=+g[b+20>>2];x=+g[b+24>>2];y=+g[b+28>>2];z=+g[b+32>>2];A=+g[b+36>>2];B=+g[b+40>>2];C=+g[b+44>>2];g[a>>2]=q*n+s*t+u*z;g[a+4>>2]=l*n+s*w+u*A;g[a+8>>2]=n*j+s*x+u*B;g[a+12>>2]=n*h+s*y+u*C;g[a+16>>2]=m*q+r*t+k*z;g[a+20>>2]=m*l+r*w+k*A;g[a+24>>2]=m*j+r*x+k*B;g[a+28>>2]=m*h+r*y+k*C;g[a+32>>2]=p*q+o*t+v*z;g[a+36>>2]=p*l+o*w+v*A;g[a+40>>2]=p*j+o*x+v*B;g[a+44>>2]=p*h+o*y+v*C;g[a+48>>2]=+g[b+48>>2];g[a+52>>2]=+g[b+52>>2];g[a+56>>2]=+g[b+56>>2];g[a+60>>2]=+g[b+60>>2];i=f;return}function Hg(b,d,e,f,h,j){b=b|0;d=+d;e=+e;f=+f;h=+h;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0,D=0.0,E=0,F=0.0,G=0,H=0.0,I=0,J=0,K=0,L=0;k=i;i=i+144|0;l=k;m=k+116|0;n=k+104|0;o=k+92|0;p=k+80|0;q=k+68|0;r=k+128|0;s=k+32|0;t=k+20|0;u=k+8|0;v=k+44|0;w=k+56|0;if((b|0)!=0){x=c[b>>2]|0;y=x+4|0;z=c[y>>2]|0;A=b+4|0;B=+g[A>>2];C=b+8|0;D=+g[C>>2];E=b+12|0;F=+g[E>>2];G=b+16|0;H=+g[G>>2];$g(z,B,D,F,H,d,e,f,h,j);i=k;return}if((xi(5408,5160,209,0,l)|0)==0){c[l>>2]=5160;c[l+4>>2]=209;Mb(5208,l|0)|0;l=fc(8)|0;I=ws(48)|0;c[r+8>>2]=I;c[r>>2]=49;c[r+4>>2]=40;J=I+0|0;K=5160|0;L=J+40|0;do{a[J]=a[K]|0;J=J+1|0;K=K+1|0}while((J|0)<(L|0));a[I+40|0]=0;a[s]=2;a[s+1|0]=40;a[s+2|0]=0;ze(q,r,s);yi(t,209);ze(p,q,t);t=ws(32)|0;c[u+8>>2]=t;c[u>>2]=33;c[u+4>>2]=26;J=t+0|0;K=5232|0;L=J+26|0;do{a[J]=a[K]|0;J=J+1|0;K=K+1|0}while((J|0)<(L|0));a[t+26|0]=0;ze(o,p,u);a[v]=14;u=v+1|0;a[u+0|0]=a[5408|0]|0;a[u+1|0]=a[5409|0]|0;a[u+2|0]=a[5410|0]|0;a[u+3|0]=a[5411|0]|0;a[u+4|0]=a[5412|0]|0;a[u+5|0]=a[5413|0]|0;a[u+6|0]=a[5414|0]|0;a[v+8|0]=0;ze(n,o,v);a[w]=4;v=w+1|0;a[v]=2599;a[v+1|0]=10;a[w+3|0]=0;ze(m,n,w);Fj(l,m);td(l|0,9992,51)}else{x=c[b>>2]|0;y=x+4|0;z=c[y>>2]|0;A=b+4|0;B=+g[A>>2];C=b+8|0;D=+g[C>>2];E=b+12|0;F=+g[E>>2];G=b+16|0;H=+g[G>>2];$g(z,B,D,F,H,d,e,f,h,j);i=k;return}}function Ig(b,d,e,f,h,j,k){b=b|0;d=+d;e=+e;f=+f;h=+h;j=+j;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0;l=i;i=i+144|0;m=l;n=l+116|0;o=l+104|0;p=l+92|0;q=l+80|0;r=l+68|0;s=l+128|0;t=l+32|0;u=l+20|0;v=l+8|0;w=l+44|0;x=l+56|0;if((b|0)==0?(xi(5408,5160,218,0,m)|0)==0:0){c[m>>2]=5160;c[m+4>>2]=218;Mb(5208,m|0)|0;m=fc(8)|0;y=ws(48)|0;c[s+8>>2]=y;c[s>>2]=49;c[s+4>>2]=40;z=y+0|0;A=5160|0;B=z+40|0;do{a[z]=a[A]|0;z=z+1|0;A=A+1|0}while((z|0)<(B|0));a[y+40|0]=0;a[t]=2;a[t+1|0]=40;a[t+2|0]=0;ze(r,s,t);yi(u,218);ze(q,r,u);u=ws(32)|0;c[v+8>>2]=u;c[v>>2]=33;c[v+4>>2]=26;z=u+0|0;A=5232|0;B=z+26|0;do{a[z]=a[A]|0;z=z+1|0;A=A+1|0}while((z|0)<(B|0));a[u+26|0]=0;ze(p,q,v);a[w]=14;v=w+1|0;a[v+0|0]=a[5408|0]|0;a[v+1|0]=a[5409|0]|0;a[v+2|0]=a[5410|0]|0;a[v+3|0]=a[5411|0]|0;a[v+4|0]=a[5412|0]|0;a[v+5|0]=a[5413|0]|0;a[v+6|0]=a[5414|0]|0;a[w+8|0]=0;ze(o,p,w);a[x]=4;w=x+1|0;a[w]=2599;a[w+1|0]=10;a[x+3|0]=0;ze(n,o,x);Fj(m,n);td(m|0,9992,51)}m=(c[b>>2]|0)+4|0;n=b+4|0;x=b+8|0;$g(c[m>>2]|0,+g[n>>2],+g[x>>2],j,j,d,e,j,j,k);o=b+12|0;C=j*2.0;D=d+j;E=f-C;$g(c[m>>2]|0,+g[n>>2]+j,+g[x>>2],+g[o>>2]-C,j,D,e,E,j,k);F=d+f-j;$g(c[m>>2]|0,+g[n>>2]+ +g[o>>2]-j,+g[x>>2],j,j,F,e,j,j,k);w=b+16|0;f=e+j;G=h-C;$g(c[m>>2]|0,+g[n>>2],+g[x>>2]+j,j,+g[w>>2]-C,d,f,j,G,k);$g(c[m>>2]|0,+g[n>>2]+j,+g[x>>2]+j,+g[o>>2]-C,+g[w>>2]-C,D,f,E,G,k);$g(c[m>>2]|0,+g[n>>2]+ +g[o>>2]-j,+g[x>>2]+j,j,+g[w>>2]-C,F,f,j,G,k);G=e+h-j;$g(c[m>>2]|0,+g[n>>2],+g[x>>2]+ +g[w>>2]-j,j,j,d,G,j,j,k);$g(c[m>>2]|0,+g[n>>2]+j,+g[x>>2]+ +g[w>>2]-j,+g[o>>2]-C,j,D,G,E,j,k);$g(c[m>>2]|0,+g[n>>2]+ +g[o>>2]-j,+g[x>>2]+ +g[w>>2]-j,j,j,F,G,j,j,k);i=l;return}function Jg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;g=c[d+4>>2]|0;h=d+4|0;if((g|0)!=0){d=a[e]|0;j=(d&1)==0;k=(d&255)>>>1;d=e+1|0;l=e+8|0;m=e+4|0;e=h;n=g;a:while(1){g=n;while(1){o=g+16|0;p=a[o]|0;q=(p&1)==0;if(q){r=(p&255)>>>1}else{r=c[g+20>>2]|0}if(j){s=k}else{s=c[m>>2]|0}if(q){t=o+1|0}else{t=c[g+24>>2]|0}if(j){u=d}else{u=c[l>>2]|0}o=s>>>0<r>>>0;q=Ps(t,u,o?s:r)|0;if((q|0)==0){v=r>>>0<s>>>0?-1:o&1}else{v=q}if((v|0)>=0){break}q=c[g+4>>2]|0;if((q|0)==0){w=e;break a}else{g=q}}q=c[g>>2]|0;if((q|0)==0){w=g;break}else{e=g;n=q}}if((w|0)!=(h|0)){n=w+16|0;if(j){x=k}else{x=c[m>>2]|0}m=a[n]|0;k=(m&1)==0;if(k){y=(m&255)>>>1}else{y=c[w+20>>2]|0}if(j){z=d}else{z=c[l>>2]|0}if(k){A=n+1|0}else{A=c[w+24>>2]|0}n=y>>>0<x>>>0;k=Ps(z,A,n?y:x)|0;if((k|0)==0){B=x>>>0<y>>>0?-1:n&1}else{B=k}if((B|0)>=0){c[b>>2]=w;i=f;return}}}c[b>>2]=h;i=f;return}function Kg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;g=c[b+4>>2]|0;if((g|0)==0){h=b+4|0;c[d>>2]=h;j=h;i=f;return j|0}h=a[e]|0;b=(h&255)>>>1;k=e+1|0;l=e+8|0;m=e+4|0;a:do{if((h&1)==0){e=g;while(1){n=e+16|0;o=a[n]|0;p=(o&1)==0;if(p){q=(o&255)>>>1;r=n+1|0}else{q=c[e+20>>2]|0;r=c[e+24>>2]|0}s=q>>>0<b>>>0;t=Ps(k,r,s?q:b)|0;if((t|0)==0){u=b>>>0<q>>>0?-1:s&1}else{u=t}if((u|0)<0){t=c[e>>2]|0;if((t|0)==0){v=e;w=e;x=24;break}else{e=t;continue}}if(p){y=(o&255)>>>1;z=n+1|0}else{y=c[e+20>>2]|0;z=c[e+24>>2]|0}n=b>>>0<y>>>0;o=Ps(z,k,n?b:y)|0;if((o|0)==0){A=y>>>0<b>>>0?-1:n&1}else{A=o}if((A|0)>=0){B=e;x=33;break a}o=e+4|0;n=c[o>>2]|0;if((n|0)==0){C=o;D=e;x=32;break}else{e=n}}}else{e=g;while(1){n=e+16|0;o=c[m>>2]|0;p=a[n]|0;t=(p&1)==0;if(t){E=(p&255)>>>1;F=n+1|0}else{E=c[e+20>>2]|0;F=c[e+24>>2]|0}s=E>>>0<o>>>0;G=Ps(c[l>>2]|0,F,s?E:o)|0;if((G|0)==0){H=o>>>0<E>>>0?-1:s&1}else{H=G}if((H|0)<0){G=c[e>>2]|0;if((G|0)==0){v=e;w=e;x=24;break}else{e=G;continue}}if(t){I=(p&255)>>>1;J=n+1|0}else{I=c[e+20>>2]|0;J=c[e+24>>2]|0}n=c[m>>2]|0;p=n>>>0<I>>>0;t=Ps(J,c[l>>2]|0,p?n:I)|0;if((t|0)==0){K=I>>>0<n>>>0?-1:p&1}else{K=t}if((K|0)>=0){B=e;x=33;break a}t=e+4|0;p=c[t>>2]|0;if((p|0)==0){C=t;D=e;x=32;break}else{e=p}}}}while(0);if((x|0)==24){c[d>>2]=w;j=v;i=f;return j|0}else if((x|0)==32){c[d>>2]=D;j=C;i=f;return j|0}else if((x|0)==33){c[d>>2]=B;j=d;i=f;return j|0}return 0}function Lg(b,d){b=b|0;d=d|0;var e=0;e=i;if((d|0)==0){i=e;return}Lg(b,c[d>>2]|0);Lg(b,c[d+4>>2]|0);if(!((a[d+16|0]&1)==0)){ys(c[d+24>>2]|0)}ys(d);i=e;return}function Mg(){var a=0;a=i;c[1272]=0;c[5092>>2]=0;c[5096>>2]=0;hd(152,5088,q|0)|0;c[5108>>2]=0;c[5112>>2]=0;c[1276]=5108;hd(153,5104,q|0)|0;i=a;return}function Ng(b,d){b=b|0;d=d|0;var e=0;e=i;a[b]=0;c[b+4>>2]=Qh(d)|0;g[b+12>>2]=0.0;c[b+8>>2]=0;i=e;return}function Og(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;j=i;i=i+144|0;k=j;l=j+116|0;m=j+104|0;n=j+92|0;o=j+80|0;p=j+68|0;q=j+128|0;r=j+32|0;s=j+20|0;t=j+8|0;u=j+44|0;v=j+56|0;a[b]=1;c[b+4>>2]=0;g[b+12>>2]=+(e>>>0);w=b+8|0;Nb(1,w|0);b=c[w>>2]|0;if((b|0)!=0){x=b;mc(3553,x|0);Kb(3553,0,h|0,d|0,e|0,0,6408,5121,f|0);_c(3553,10241,9729);_c(3553,10240,9729);i=j;return}if((xi(5416,5440,29,0,k)|0)==0){c[k>>2]=5440;c[k+4>>2]=29;Mb(5480,k|0)|0;k=fc(8)|0;b=ws(48)|0;c[q+8>>2]=b;c[q>>2]=49;c[q+4>>2]=34;y=b+0|0;z=5440|0;A=y+34|0;do{a[y]=a[z]|0;y=y+1|0;z=z+1|0}while((y|0)<(A|0));a[b+34|0]=0;a[r]=2;a[r+1|0]=40;a[r+2|0]=0;ze(p,q,r);yi(s,29);ze(o,p,s);s=ws(32)|0;c[t+8>>2]=s;c[t>>2]=33;c[t+4>>2]=26;y=s+0|0;z=5504|0;A=y+26|0;do{a[y]=a[z]|0;y=y+1|0;z=z+1|0}while((y|0)<(A|0));a[s+26|0]=0;ze(n,o,t);t=ws(32)|0;c[u+8>>2]=t;c[u>>2]=33;c[u+4>>2]=16;y=t+0|0;z=5416|0;A=y+16|0;do{a[y]=a[z]|0;y=y+1|0;z=z+1|0}while((y|0)<(A|0));a[t+16|0]=0;ze(m,n,u);a[v]=4;u=v+1|0;a[u]=2599;a[u+1|0]=10;a[v+3|0]=0;ze(l,m,v);Fj(k,l);td(k|0,9992,51)}x=c[w>>2]|0;mc(3553,x|0);Kb(3553,0,h|0,d|0,e|0,0,6408,5121,f|0);_c(3553,10241,9729);_c(3553,10240,9729);i=j;return}function Pg(b){b=b|0;var d=0,e=0;d=i;e=c[b+4>>2]|0;if((e|0)!=0){Vh(e)}if((a[b]|0)==0){i=d;return}Fb(1,b+8|0);i=d;return}function Qg(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;e=i;i=i+144|0;f=e;h=e+116|0;j=e+104|0;k=e+92|0;l=e+80|0;m=e+68|0;n=e+128|0;o=e+32|0;p=e+20|0;q=e+8|0;r=e+44|0;s=e+56|0;t=gb(d|0)|0;if((t|0)==0){ss(d);fb(5568)|0;i=e;return}u=b+8|0;Nb(1,u|0);v=c[u>>2]|0;do{if((v|0)==0){if((xi(5544,5440,114,0,f)|0)==0){c[f>>2]=5440;c[f+4>>2]=114;Mb(5480,f|0)|0;w=fc(8)|0;x=ws(48)|0;c[n+8>>2]=x;c[n>>2]=49;c[n+4>>2]=34;y=x+0|0;z=5440|0;A=y+34|0;do{a[y]=a[z]|0;y=y+1|0;z=z+1|0}while((y|0)<(A|0));a[x+34|0]=0;a[o]=2;a[o+1|0]=40;a[o+2|0]=0;ze(m,n,o);yi(p,114);ze(l,m,p);B=ws(32)|0;c[q+8>>2]=B;c[q>>2]=33;c[q+4>>2]=26;y=B+0|0;z=5504|0;A=y+26|0;do{a[y]=a[z]|0;y=y+1|0;z=z+1|0}while((y|0)<(A|0));a[B+26|0]=0;ze(k,l,q);x=ws(32)|0;c[r+8>>2]=x;c[r>>2]=33;c[r+4>>2]=23;y=x+0|0;z=5544|0;A=y+23|0;do{a[y]=a[z]|0;y=y+1|0;z=z+1|0}while((y|0)<(A|0));a[x+23|0]=0;ze(j,k,r);a[s]=4;z=s+1|0;a[z]=2599;a[z+1|0]=10;a[s+3|0]=0;ze(h,j,s);Fj(w,h);td(w|0,9992,51)}else{C=c[u>>2]|0;break}}else{C=v}}while(0);mc(3553,C|0);C=t+8|0;v=t+12|0;Kb(3553,0,6408,c[C>>2]|0,c[v>>2]|0,0,6408,5121,c[t+20>>2]|0);_c(3553,10241,9729);_c(3553,10240,9729);a[b]=1;g[b+12>>2]=+(c[C>>2]|0);g[b+16>>2]=+(c[v>>2]|0);rc(t|0);ss(d);i=e;return}function Rg(a){a=a|0;a=i;fb(5592)|0;i=a;return}function Sg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;a:do{if((a[b]|0)==0){e=b;f=b;while(1){g=f+4|0;h=c[g>>2]|0;if((h|0)!=0?!(Sh(h)|0):0){h=Uh(c[g>>2]|0)|0;ed(h|0,Th(c[g>>2]|0)|0,5536,e|0,52,154);Vh(c[g>>2]|0);c[g>>2]=0}if((a[e]|0)!=0){j=f;break a}g=dh()|0;if((a[g]|0)==0){e=g;f=g}else{j=g;break}}}else{j=b}}while(0);i=d;return c[j+8>>2]|0}function Tg(a){a=a|0;return+(+g[a+12>>2])}function Ug(a){a=a|0;return+(+g[a+16>>2])}function Vg(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~((a+ -4+(0-d)|0)>>>2)<<2)}ys(d);i=b;return}function Wg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;c[b>>2]=d;d=Sb()|0;b=Yg(0,5720,35633)|0;f=Yg(0,5952,35632)|0;Qb(d|0,b|0);Qb(d|0,f|0);Oc(b|0);Oc(f|0);Tc(d|0);Ia(d|0);c[1406]=d;c[1408]=Zc(d|0,6432)|0;c[1410]=Zc(c[1406]|0,6440)|0;d=Sb()|0;f=Yg(0,5720,35633)|0;b=Yg(0,6112,35632)|0;Qb(d|0,f|0);Qb(d|0,b|0);Oc(f|0);Oc(b|0);Tc(d|0);Ia(d|0);c[1412]=d;c[1414]=Zc(d|0,6432)|0;c[1416]=Zc(c[1412]|0,6464)|0;d=Sb()|0;b=Yg(0,5720,35633)|0;f=Yg(0,6216,35632)|0;Qb(d|0,b|0);Qb(d|0,f|0);Oc(b|0);Oc(f|0);Tc(d|0);Ia(d|0);c[1418]=d;c[1420]=Zc(d|0,6432)|0;c[1422]=Zc(c[1418]|0,6440)|0;c[1424]=Zc(c[1418]|0,6464)|0;d=xs(4096)|0;f=0;do{b=f>>>3;g=f<<5;h=0;do{j=h+g<<2;a[d+j|0]=-1;a[d+(j|1)|0]=0;a[d+(j|2)|0]=-1;a[d+(j|3)|0]=(h>>>3)+b<<7;h=h+1|0}while((h|0)!=32);f=f+1|0}while((f|0)!=32);f=ws(20)|0;Og(f,32,32,d,6408);c[1404]=f;if((d|0)==0){i=e;return}zs(d);i=e;return}function Xg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;b=i;i=i+144|0;d=b;e=b+116|0;f=b+104|0;g=b+92|0;h=b+80|0;j=b+68|0;k=b+128|0;l=b+32|0;m=b+20|0;n=b+8|0;o=b+44|0;p=b+56|0;q=c[1404]|0;if((q|0)!=0){Pg(q);ys(q)}if((c[5708>>2]|0)==(c[1426]|0)){i=b;return}if((xi(6472,6504,150,0,d)|0)==0){c[d>>2]=6504;c[d+4>>2]=150;Mb(6544,d|0)|0;d=fc(8)|0;q=ws(48)|0;c[k+8>>2]=q;c[k>>2]=49;c[k+4>>2]=32;r=q+0|0;s=6504|0;t=r+32|0;do{a[r]=a[s]|0;r=r+1|0;s=s+1|0}while((r|0)<(t|0));a[q+32|0]=0;a[l]=2;a[l+1|0]=40;a[l+2|0]=0;ze(j,k,l);yi(m,150);ze(h,j,m);m=ws(32)|0;c[n+8>>2]=m;c[n>>2]=33;c[n+4>>2]=26;r=m+0|0;s=6568|0;t=r+26|0;do{a[r]=a[s]|0;r=r+1|0;s=s+1|0}while((r|0)<(t|0));a[m+26|0]=0;ze(g,h,n);n=ws(32)|0;c[o+8>>2]=n;c[o>>2]=33;c[o+4>>2]=25;r=n+0|0;s=6472|0;t=r+25|0;do{a[r]=a[s]|0;r=r+1|0;s=s+1|0}while((r|0)<(t|0));a[n+25|0]=0;ze(f,g,o);a[p]=4;o=p+1|0;a[o]=2599;a[o+1|0]=10;a[p+3|0]=0;ze(e,f,p);Fj(d,e);td(d|0,9992,51)}else{i=b;return}}function Yg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;b=i;i=i+160|0;f=b;g=b+132|0;h=b+128|0;j=b+116|0;k=b+104|0;l=b+92|0;m=b+80|0;n=b+136|0;o=b+44|0;p=b+32|0;q=b+20|0;r=b+8|0;s=b+56|0;t=b+68|0;c[g>>2]=d;d=$a(e|0)|0;mb(d|0,1,g|0,0);Ec(d|0);fd(d|0,35713,h|0);if((c[h>>2]|0)!=0){i=b;return d|0}h=Zg(8424,6600)|0;sk(f,h+(c[(c[h>>2]|0)+ -12>>2]|0)|0);g=Fp(f,13064)|0;e=Sd[c[(c[g>>2]|0)+28>>2]&31](g,10)|0;Ep(f);nl(h,e)|0;$k(h)|0;h=ws(512)|0;e=512;g=h;do{if((g|0)==0){u=0}else{a[g]=0;u=g}g=u+1|0;e=e+ -1|0}while((e|0)!=0);Ta(d|0,g-h|0,0,h|0);g=Zg(8424,h)|0;sk(f,g+(c[(c[g>>2]|0)+ -12>>2]|0)|0);e=Fp(f,13064)|0;u=Sd[c[(c[e>>2]|0)+28>>2]&31](e,10)|0;Ep(f);nl(g,u)|0;$k(g)|0;if((xi(6648,6504,168,0,f)|0)==0){c[f>>2]=6504;c[f+4>>2]=168;Mb(6544,f|0)|0;f=fc(8)|0;g=ws(48)|0;c[o+8>>2]=g;c[o>>2]=49;c[o+4>>2]=32;u=g+0|0;e=6504|0;v=u+32|0;do{a[u]=a[e]|0;u=u+1|0;e=e+1|0}while((u|0)<(v|0));a[g+32|0]=0;a[p]=2;a[p+1|0]=40;a[p+2|0]=0;ze(n,o,p);yi(q,168);ze(m,n,q);q=ws(32)|0;c[r+8>>2]=q;c[r>>2]=33;c[r+4>>2]=26;u=q+0|0;e=6568|0;v=u+26|0;do{a[u]=a[e]|0;u=u+1|0;e=e+1|0}while((u|0)<(v|0));a[q+26|0]=0;ze(l,m,r);a[s]=10;r=s+1|0;a[r+0|0]=a[6648|0]|0;a[r+1|0]=a[6649|0]|0;a[r+2|0]=a[6650|0]|0;a[r+3|0]=a[6651|0]|0;a[r+4|0]=a[6652|0]|0;a[s+6|0]=0;ze(k,l,s);a[t]=4;s=t+1|0;a[s]=2599;a[s+1|0]=10;a[t+3|0]=0;ze(j,k,t);Fj(f,j);td(f|0,9992,51)}if((h|0)==0){i=b;return d|0}ys(h);i=b;return d|0}function Zg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+8|0;j=e+12|0;a[g]=0;c[g+4>>2]=b;k=c[(c[b>>2]|0)+ -12>>2]|0;if((c[b+(k+16)>>2]|0)!=0){ll(g);i=e;return b|0}l=c[b+(k+72)>>2]|0;if((l|0)==0){m=k}else{$k(l)|0;m=c[(c[b>>2]|0)+ -12>>2]|0}a[g]=1;l=Ws(d|0)|0;c[h>>2]=c[b+(m+24)>>2];if((c[b+(m+4)>>2]&176|0)==32){n=d+l|0}else{n=d}k=b+m|0;o=b+(m+76)|0;m=c[o>>2]|0;if((m|0)==-1){sk(f,k);p=Fp(f,13064)|0;q=Sd[c[(c[p>>2]|0)+28>>2]&31](p,32)|0;Ep(f);p=q<<24>>24;c[o>>2]=p;r=k;s=p}else{r=k;s=m}m=s&255;s=d+l|0;c[f+0>>2]=c[h+0>>2];eh(j,f,d,n,s,r,m);if((c[j>>2]|0)!=0){ll(g);i=e;return b|0}j=c[(c[b>>2]|0)+ -12>>2]|0;qk(b+j|0,c[b+(j+16)>>2]|5);ll(g);i=e;return b|0}function _g(a,d,e,f,h,j){a=+a;d=+d;e=+e;f=+f;h=h|0;j=j|0;var k=0,l=0,m=0,n=0;h=i;i=i+48|0;k=h+32|0;l=h;m=h+8|0;n=h+36|0;g[m>>2]=a;g[m+4>>2]=d;g[m+8>>2]=0.0;g[m+12>>2]=e;g[m+16>>2]=f;g[m+20>>2]=0.0;lb(1,k|0);Sa(34962,c[k>>2]|0);Jc(34962,24,m|0,35044);b[n>>1]=0;b[n+2>>1]=1;lb(1,l|0);Sa(34963,c[l>>2]|0);Jc(34963,4,n|0,35044);qd(0);Lb(3042);Xa(770,771);Ia(c[1412]|0);Ma(c[1414]|0,1,0,j|0);Yc(c[1416]|0,.250980406999588,.250980406999588,.250980406999588,9.0);sb(0);Sa(34962,c[k>>2]|0);tb(0,3,5126,0,0,0);Sa(34963,c[l>>2]|0);Ab(1,2,5123,0);Za(0);Ia(0);i=h;return}function $g(a,b,d,e,f,h,j,k,l,m){a=a|0;b=+b;d=+d;e=+e;f=+f;h=+h;j=+j;k=+k;l=+l;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0.0;n=i;i=i+144|0;o=n+128|0;p=n;q=n+8|0;r=n+80|0;g[q>>2]=h;g[q+4>>2]=j;g[q+8>>2]=0.0;s=h+k;g[q+12>>2]=s;g[q+16>>2]=j;g[q+20>>2]=0.0;g[q+24>>2]=h;k=j+l;g[q+28>>2]=k;g[q+32>>2]=0.0;g[q+36>>2]=h;g[q+40>>2]=k;g[q+44>>2]=0.0;g[q+48>>2]=s;g[q+52>>2]=j;g[q+56>>2]=0.0;g[q+60>>2]=s;g[q+64>>2]=k;g[q+68>>2]=0.0;lb(1,o|0);Sa(34962,c[o>>2]|0);Jc(34962,72,q|0,35044);k=+Tg(a);s=+Ug(a);j=b/k;b=d/s;g[r>>2]=j;g[r+4>>2]=b;d=j+e/k;g[r+8>>2]=d;g[r+12>>2]=b;g[r+16>>2]=j;k=b+f/s;g[r+20>>2]=k;g[r+24>>2]=j;g[r+28>>2]=k;g[r+32>>2]=d;g[r+36>>2]=b;g[r+40>>2]=d;g[r+44>>2]=k;lb(1,p|0);Sa(34962,c[p>>2]|0);Jc(34962,48,r|0,35044);Ia(c[1406]|0);Ma(c[1408]|0,1,0,m|0);Ac(33984);mc(3553,Sg(a)|0);sc(c[1410]|0,0);sb(0);Sa(34962,c[o>>2]|0);tb(0,3,5126,0,0,0);sb(1);Sa(34962,c[p>>2]|0);tb(1,2,5126,0,0,0);vc(4,0,6);Za(0);Za(1);Ia(0);Ic(1,p|0);Ic(1,o|0);i=n;return}function ah(a,d,e,f,h,j,k,l,m,n){a=+a;d=+d;e=+e;f=+f;h=+h;j=+j;k=+k;l=+l;m=+m;n=+n;var o=0,p=0,q=0,r=0,s=0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;o=i;i=i+96|0;p=o+32|0;q=o;r=o+80|0;s=ws(16)|0;c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;c[s+12>>2]=0;g[p>>2]=k;g[p+4>>2]=l;g[p+8>>2]=0.0;t=k+m;g[p+12>>2]=t;g[p+16>>2]=l;g[p+20>>2]=0.0;g[p+24>>2]=k;k=l+n;g[p+28>>2]=k;g[p+32>>2]=0.0;g[p+36>>2]=t;g[p+40>>2]=k;g[p+44>>2]=0.0;lb(1,s|0);Sa(34962,c[s>>2]|0);Jc(34962,48,p|0,35044);k=a/h;a=d/j;g[q>>2]=k;g[q+4>>2]=a;d=k+e/h;g[q+8>>2]=d;g[q+12>>2]=a;g[q+16>>2]=k;k=a+f/j;g[q+20>>2]=k;g[q+24>>2]=d;g[q+28>>2]=k;p=s+4|0;lb(1,p|0);Sa(34962,c[p>>2]|0);Jc(34962,32,q|0,35044);b[r+0>>1]=b[6656>>1]|0;b[r+2>>1]=b[6658>>1]|0;b[r+4>>1]=b[6660>>1]|0;b[r+6>>1]=b[6662>>1]|0;b[r+8>>1]=b[6664>>1]|0;b[r+10>>1]=b[6666>>1]|0;q=s+8|0;lb(1,q|0);Sa(34963,c[q>>2]|0);Jc(34963,12,r|0,35044);c[s+12>>2]=2;r=c[5708>>2]|0;if((r|0)!=(c[5712>>2]|0)){if((r|0)==0){u=0}else{c[r>>2]=s;u=c[5708>>2]|0}c[5708>>2]=u+4;i=o;return s|0}u=c[1426]|0;q=r-u|0;r=q>>2;p=r+1|0;if(p>>>0>1073741823){wp(0)}if(r>>>0<536870911){v=q>>1;w=v>>>0<p>>>0?p:v;if((w|0)==0){x=0;y=0}else{z=w;A=9}}else{z=1073741823;A=9}if((A|0)==9){x=z;y=ws(z<<2)|0}z=y+(r<<2)|0;if((z|0)!=0){c[z>>2]=s}Ss(y|0,u|0,q|0)|0;c[1426]=y;c[5708>>2]=y+(p<<2);c[5712>>2]=y+(x<<2);if((u|0)==0){i=o;return s|0}ys(u);i=o;return s|0}function bh(a){a=a|0;var b=0;b=i;sb(0);Sa(34962,c[a>>2]|0);tb(0,3,5126,0,0,0);sb(1);Sa(34962,c[a+4>>2]|0);tb(1,2,5126,0,0,0);Sa(34963,c[a+8>>2]|0);Ab(4,(c[a+12>>2]|0)*3|0,5123,0);i=b;return}function ch(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=c[5708>>2]|0;e=c[1426]|0;if((d|0)==(e|0)){i=b;return}f=d-e>>2;d=0;while(1){g=d+1|0;if((c[e+(d<<2)>>2]|0)==(a|0)){break}if(g>>>0<f>>>0){d=g}else{h=7;break}}if((h|0)==7){i=b;return}Ic(1,a|0);Ic(1,a+4|0);Ic(1,a+8|0);a=c[1426]|0;h=d<<2>>2;d=a+(h+1<<2)|0;f=(c[5708>>2]|0)-d|0;Ts(a+(h<<2)|0,d|0,f|0)|0;d=a+((f>>2)+h<<2)|0;h=c[5708>>2]|0;if((h|0)==(d|0)){i=b;return}c[5708>>2]=h+(~((h+ -4+(0-d)|0)>>>2)<<2);i=b;return}function dh(){return c[1404]|0}function eh(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;k=i;i=i+16|0;l=k;m=c[d>>2]|0;if((m|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g|0;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;if((h|0)>0?(Kd[c[(c[m>>2]|0)+48>>2]&31](m,e,h)|0)!=(h|0):0){c[d>>2]=0;c[b>>2]=0;i=k;return}do{if((q|0)>0){if(q>>>0<11){h=q<<1&255;a[l]=h;r=l;s=h;t=l+1|0}else{h=q+16&-16;e=ws(h)|0;c[l+8>>2]=e;g=h|1;c[l>>2]=g;c[l+4>>2]=q;r=l;s=g&255;t=e}Us(t|0,j|0,q|0)|0;a[t+q|0]=0;if((s&1)==0){u=l+1|0}else{u=c[l+8>>2]|0}if((Kd[c[(c[m>>2]|0)+48>>2]&31](m,u,q)|0)==(q|0)){if((a[r]&1)==0){break}ys(c[l+8>>2]|0);break}c[d>>2]=0;c[b>>2]=0;if((a[r]&1)==0){i=k;return}ys(c[l+8>>2]|0);i=k;return}}while(0);l=n-o|0;if((l|0)>0?(Kd[c[(c[m>>2]|0)+48>>2]&31](m,f,l)|0)!=(l|0):0){c[d>>2]=0;c[b>>2]=0;i=k;return}c[p>>2]=0;c[b>>2]=m;i=k;return}function fh(){var a=0;a=i;c[1426]=0;c[5708>>2]=0;c[5712>>2]=0;hd(155,5704,q|0)|0;i=a;return}function gh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=+e;f=+f;g=+g;h=+h;var j=0;j=i;ph(a,b,e,f,g,h);c[a>>2]=6680;b=a+36|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;_j(b,d)|0;i=j;return}function hh(b){b=b|0;var d=0;d=i;c[b>>2]=6680;if(!((a[b+36|0]&1)==0)){ys(c[b+44>>2]|0)}rh(b);ys(b);i=d;return}function ih(b){b=b|0;var d=0;d=i;c[b>>2]=6680;if(!((a[b+36|0]&1)==0)){ys(c[b+44>>2]|0)}rh(b);i=d;return}function jh(b,d,e,f){b=b|0;d=+d;e=+e;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0,D=0.0,E=0,F=0.0,G=0,H=0,I=0,J=0;h=i;i=i+144|0;j=h;k=h+116|0;l=h+104|0;m=h+92|0;n=h+80|0;o=h+68|0;p=h+128|0;q=h+32|0;r=h+20|0;s=h+8|0;t=h+44|0;u=h+56|0;v=Eg(b+36|0)|0;if((v|0)!=0){w=b+20|0;x=+g[w>>2];y=x+d;z=b+24|0;A=+g[z>>2];B=A+e;C=b+28|0;D=+g[C>>2];E=b+32|0;F=+g[E>>2];Hg(v,y,B,D,F,f);th(b,d,e,f);i=h;return}if((xi(6752,6760,19,0,j)|0)==0){c[j>>2]=6760;c[j+4>>2]=19;Mb(6800,j|0)|0;j=fc(8)|0;G=ws(48)|0;c[p+8>>2]=G;c[p>>2]=49;c[p+4>>2]=39;H=G+0|0;I=6760|0;J=H+39|0;do{a[H]=a[I]|0;H=H+1|0;I=I+1|0}while((H|0)<(J|0));a[G+39|0]=0;a[q]=2;a[q+1|0]=40;a[q+2|0]=0;ze(o,p,q);yi(r,19);ze(n,o,r);r=ws(32)|0;c[s+8>>2]=r;c[s>>2]=33;c[s+4>>2]=26;H=r+0|0;I=6824|0;J=H+26|0;do{a[H]=a[I]|0;H=H+1|0;I=I+1|0}while((H|0)<(J|0));a[r+26|0]=0;ze(m,n,s);a[t]=14;s=t+1|0;a[s+0|0]=a[6752|0]|0;a[s+1|0]=a[6753|0]|0;a[s+2|0]=a[6754|0]|0;a[s+3|0]=a[6755|0]|0;a[s+4|0]=a[6756|0]|0;a[s+5|0]=a[6757|0]|0;a[s+6|0]=a[6758|0]|0;a[t+8|0]=0;ze(l,m,t);a[u]=4;t=u+1|0;a[t]=2599;a[t+1|0]=10;a[u+3|0]=0;ze(k,l,u);Fj(j,k);td(j|0,9992,51)}else{w=b+20|0;x=+g[w>>2];y=x+d;z=b+24|0;A=+g[z>>2];B=A+e;C=b+28|0;D=+g[C>>2];E=b+32|0;F=+g[E>>2];Hg(v,y,B,D,F,f);th(b,d,e,f);i=h;return}}function kh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=d+36|0;if((a[f]&1)==0){c[b+0>>2]=c[f+0>>2];c[b+4>>2]=c[f+4>>2];c[b+8>>2]=c[f+8>>2];i=e;return}f=c[d+44>>2]|0;g=c[d+40>>2]|0;if(g>>>0>4294967279){Vj(0)}if(g>>>0<11){a[b]=g<<1;h=b+1|0}else{d=g+16&-16;j=ws(d)|0;c[b+8>>2]=j;c[b>>2]=d|1;c[b+4>>2]=g;h=j}Ss(h|0,f|0,g|0)|0;a[h+g|0]=0;i=e;return}function lh(b,d,e,f,h,j,k,l,m,n,o,p){b=b|0;d=d|0;e=e|0;f=f|0;h=+h;j=+j;k=+k;l=+l;m=+m;n=+n;o=+o;p=+p;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;q=i;i=i+272|0;r=q;s=q+248|0;t=q+236|0;u=q+224|0;v=q+212|0;w=q+200|0;x=q+188|0;y=q+176|0;z=q+164|0;A=q+152|0;B=q+140|0;C=q+260|0;D=q+56|0;E=q+44|0;F=q+8|0;G=q+20|0;H=q+32|0;I=q+116|0;J=q+68|0;K=q+80|0;L=q+92|0;M=q+104|0;N=q+128|0;ph(b,d,h,j,0.0,0.0);c[b>>2]=6896;d=b+40|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;if((e|0)==0?(xi(6968,6976,9,0,r)|0)==0:0){c[r>>2]=6976;c[r+4>>2]=9;Mb(7016,r|0)|0;O=fc(8)|0;P=ws(48)|0;c[x+8>>2]=P;c[x>>2]=49;c[x+4>>2]=39;Q=P+0|0;R=6976|0;S=Q+39|0;do{a[Q]=a[R]|0;Q=Q+1|0;R=R+1|0}while((Q|0)<(S|0));a[P+39|0]=0;a[y]=2;a[y+1|0]=40;a[y+2|0]=0;ze(w,x,y);yi(z,9);ze(v,w,z);z=ws(32)|0;c[A+8>>2]=z;c[A>>2]=33;c[A+4>>2]=26;Q=z+0|0;R=7040|0;S=Q+26|0;do{a[Q]=a[R]|0;Q=Q+1|0;R=R+1|0}while((Q|0)<(S|0));a[z+26|0]=0;ze(u,v,A);a[B]=10;A=B+1|0;a[A+0|0]=a[6968|0]|0;a[A+1|0]=a[6969|0]|0;a[A+2|0]=a[6970|0]|0;a[A+3|0]=a[6971|0]|0;a[A+4|0]=a[6972|0]|0;a[B+6|0]=0;ze(t,u,B);a[C]=4;B=C+1|0;a[B]=2599;a[B+1|0]=10;a[C+3|0]=0;ze(s,t,C);Fj(O,s);td(O|0,9992,51)}if(!(rg(e)|0)?(xi(7072,6976,10,0,r)|0)==0:0){c[r>>2]=6976;c[r+4>>2]=10;Mb(7016,r|0)|0;r=fc(8)|0;O=ws(48)|0;c[I+8>>2]=O;c[I>>2]=49;c[I+4>>2]=39;Q=O+0|0;R=6976|0;S=Q+39|0;do{a[Q]=a[R]|0;Q=Q+1|0;R=R+1|0}while((Q|0)<(S|0));a[O+39|0]=0;a[J]=2;a[J+1|0]=40;a[J+2|0]=0;ze(H,I,J);yi(K,10);ze(G,H,K);K=ws(32)|0;c[L+8>>2]=K;c[L>>2]=33;c[L+4>>2]=26;Q=K+0|0;R=7040|0;S=Q+26|0;do{a[Q]=a[R]|0;Q=Q+1|0;R=R+1|0}while((Q|0)<(S|0));a[K+26|0]=0;ze(F,G,L);L=ws(32)|0;c[M+8>>2]=L;c[M>>2]=33;c[M+4>>2]=30;Q=L+0|0;R=7072|0;S=Q+30|0;do{a[Q]=a[R]|0;Q=Q+1|0;R=R+1|0}while((Q|0)<(S|0));a[L+30|0]=0;ze(E,F,M);a[N]=4;M=N+1|0;a[M]=2599;a[M+1|0]=10;a[N+3|0]=0;ze(D,E,N);Fj(r,D);td(r|0,9992,51)}r=b+36|0;c[r>>2]=e;_j(d,f)|0;g[b+52>>2]=k;g[b+56>>2]=l;g[b+60>>2]=m;g[b+64>>2]=n;g[b+68>>2]=o;g[b+72>>2]=p;f=tg(c[r>>2]|0,d,n,o,p)|0;if((f|0)==0){i=q;return}g[b+28>>2]=+g[f+36>>2];g[b+32>>2]=+g[f+40>>2];i=q;return}function mh(b){b=b|0;var d=0;d=i;c[b>>2]=6896;if(!((a[b+40|0]&1)==0)){ys(c[b+48>>2]|0)}rh(b);ys(b);i=d;return}function nh(b){b=b|0;var d=0;d=i;c[b>>2]=6896;if(!((a[b+40|0]&1)==0)){ys(c[b+48>>2]|0)}rh(b);i=d;return}function oh(a,b,d,e){a=a|0;b=+b;d=+d;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0;f=i;i=i+64|0;h=f;j=a+36|0;if(!(rg(c[j>>2]|0)|0)){k=a;th(k,b,d,e);i=f;return}l=tg(c[j>>2]|0,a+40|0,+g[a+64>>2],+g[a+68>>2],+g[a+72>>2])|0;if((l|0)==0){Cd[c[(c[a>>2]|0)+60>>2]&7](a,0.0);Cd[c[(c[a>>2]|0)+64>>2]&7](a,0.0);k=a;th(k,b,d,e);i=f;return}else{m=+g[a+20>>2]+b;n=+g[a+24>>2]+d;o=+g[a+52>>2];p=+g[a+56>>2];q=+g[a+60>>2];j=h+0|0;r=j+60|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(r|0));g[h>>2]=+g[e>>2];g[h+4>>2]=+g[e+4>>2];g[h+8>>2]=+g[e+8>>2];g[h+12>>2]=+g[e+12>>2];g[h+16>>2]=+g[e+16>>2];g[h+20>>2]=+g[e+20>>2];g[h+24>>2]=+g[e+24>>2];g[h+28>>2]=+g[e+28>>2];g[h+32>>2]=+g[e+32>>2];g[h+36>>2]=+g[e+36>>2];g[h+40>>2]=+g[e+40>>2];g[h+44>>2]=+g[e+44>>2];g[h+48>>2]=+g[e+48>>2];g[h+52>>2]=+g[e+52>>2];g[h+56>>2]=+g[e+56>>2];g[h+60>>2]=+g[e+60>>2];ug(l,m,n,o,p,q,h);Cd[c[(c[a>>2]|0)+60>>2]&7](a,+g[l+36>>2]);Cd[c[(c[a>>2]|0)+64>>2]&7](a,+g[l+40>>2]);k=a;th(k,b,d,e);i=f;return}}function ph(a,b,d,e,f,h){a=a|0;b=b|0;d=+d;e=+e;f=+f;h=+h;var j=0;j=i;c[a>>2]=7144;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+4>>2]=b;if((b|0)!=0){Ed[c[(c[b>>2]|0)+20>>2]&63](b,a)}g[a+20>>2]=d;g[a+24>>2]=e;g[a+28>>2]=f;g[a+32>>2]=h;i=j;return}function qh(a){a=a|0;var b=0;b=i;rh(a);ys(a);i=b;return}function rh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;c[a>>2]=7144;d=c[a+4>>2]|0;if((d|0)!=0){Ed[c[(c[d>>2]|0)+24>>2]&63](d,a)}d=a+12|0;e=c[d>>2]|0;f=a+8|0;a=c[f>>2]|0;g=e-a|0;h=g>>2;if((h|0)!=0){if(h>>>0>1073741823){wp(0)}h=ws(g)|0;if((a|0)==(e|0)){j=h;k=h}else{g=a;a=h;while(1){if((a|0)==0){l=0}else{c[a>>2]=c[g>>2];l=a}m=l+4|0;n=g+4|0;if((n|0)==(e|0)){j=h;k=m;break}else{g=n;a=m}}}}else{j=0;k=0}a=k-j>>2;if((a|0)!=0){k=0;do{g=c[j+(k<<2)>>2]|0;if((g|0)!=0){Dd[c[(c[g>>2]|0)+4>>2]&255](g)}k=k+1|0}while(k>>>0<a>>>0)}if((j|0)!=0){ys(j)}j=c[f>>2]|0;if((j|0)==0){i=b;return}f=c[d>>2]|0;if((f|0)!=(j|0)){c[d>>2]=f+(~((f+ -4+(0-j)|0)>>>2)<<2)}ys(j);i=b;return}function sh(a,b,d){a=a|0;b=+b;d=+d;var e=0,f=0,h=0,j=0,k=0,l=0,m=0;e=i;f=a+12|0;h=a+8|0;j=c[h>>2]|0;if((c[f>>2]|0)==(j|0)){i=e;return}k=a+20|0;l=a+24|0;a=j;j=0;do{m=c[a+(j<<2)>>2]|0;Jd[c[(c[m>>2]|0)+8>>2]&15](m,+g[k>>2]+b,+g[l>>2]+d);j=j+1|0;a=c[h>>2]|0}while(j>>>0<(c[f>>2]|0)-a>>2>>>0);i=e;return}function th(a,b,d,e){a=a|0;b=+b;d=+d;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;h=a+12|0;j=a+8|0;k=c[j>>2]|0;if((c[h>>2]|0)==(k|0)){i=f;return}l=a+20|0;m=a+24|0;a=k;k=0;do{n=c[a+(k<<2)>>2]|0;Id[c[(c[n>>2]|0)+12>>2]&15](n,+g[l>>2]+b,+g[m>>2]+d,e);k=k+1|0;a=c[j>>2]|0}while(k>>>0<(c[h>>2]|0)-a>>2>>>0);i=f;return}function uh(a){a=a|0;return(c[a+12>>2]|0)-(c[a+8>>2]|0)>>2|0}function vh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=i;i=i+144|0;f=e;g=e+116|0;h=e+104|0;j=e+92|0;k=e+80|0;l=e+68|0;m=e+128|0;n=e+32|0;o=e+20|0;p=e+8|0;q=e+44|0;r=e+56|0;s=b+12|0;t=c[s>>2]|0;u=b+8|0;v=c[u>>2]|0;a:do{if((t|0)==(v|0)){w=t;x=v;y=t-v|0;z=0}else{A=v;B=t;C=0;while(1){if((c[A+(C<<2)>>2]|0)==(d|0)){if((xi(7216,7224,49,0,f)|0)==0){break}D=c[s>>2]|0;E=c[u>>2]|0}else{D=B;E=A}F=C+1|0;G=D-E|0;H=G>>2;if(F>>>0<H>>>0){A=E;B=D;C=F}else{w=D;x=E;y=G;z=H;break a}}c[f>>2]=7224;c[f+4>>2]=49;Mb(7272,f|0)|0;C=fc(8)|0;B=ws(48)|0;c[m+8>>2]=B;c[m>>2]=49;c[m+4>>2]=40;A=B+0|0;H=7224|0;G=A+40|0;do{a[A]=a[H]|0;A=A+1|0;H=H+1|0}while((A|0)<(G|0));a[B+40|0]=0;a[n]=2;a[n+1|0]=40;a[n+2|0]=0;ze(l,m,n);yi(o,49);ze(k,l,o);F=ws(32)|0;c[p+8>>2]=F;c[p>>2]=33;c[p+4>>2]=26;A=F+0|0;H=7296|0;G=A+26|0;do{a[A]=a[H]|0;A=A+1|0;H=H+1|0}while((A|0)<(G|0));a[F+26|0]=0;ze(j,k,p);a[q]=10;H=q+1|0;a[H+0|0]=a[7216|0]|0;a[H+1|0]=a[7217|0]|0;a[H+2|0]=a[7218|0]|0;a[H+3|0]=a[7219|0]|0;a[H+4|0]=a[7220|0]|0;a[q+6|0]=0;ze(h,j,q);a[r]=4;H=r+1|0;a[H]=2599;a[H+1|0]=10;a[r+3|0]=0;ze(g,h,r);Fj(C,g);td(C|0,9992,51)}}while(0);g=b+16|0;if((w|0)!=(c[g>>2]|0)){if((w|0)==0){I=0}else{c[w>>2]=d;I=c[s>>2]|0}c[s>>2]=I+4;i=e;return}I=z+1|0;if(I>>>0>1073741823){wp(0)}if(z>>>0<536870911){w=y>>1;b=w>>>0<I>>>0?I:w;if((b|0)==0){J=0;K=0}else{L=b;M=15}}else{L=1073741823;M=15}if((M|0)==15){J=L;K=ws(L<<2)|0}L=K+(z<<2)|0;if((L|0)!=0){c[L>>2]=d}Ss(K|0,x|0,y|0)|0;c[u>>2]=K;c[s>>2]=K+(I<<2);c[g>>2]=K+(J<<2);if((x|0)==0){i=e;return}ys(x);i=e;return}function wh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+144|0;f=e;g=e+116|0;h=e+104|0;j=e+92|0;k=e+80|0;l=e+68|0;m=e+128|0;n=e+32|0;o=e+20|0;p=e+8|0;q=e+44|0;r=e+56|0;s=b+12|0;t=c[s>>2]|0;u=c[b+8>>2]|0;a:do{if((t|0)!=(u|0)){b=t;v=0;while(1){w=v+1|0;if((c[u+(v<<2)>>2]|0)==(d|0)){break}if(w>>>0<b-u>>2>>>0){v=w}else{break a}}w=v<<2>>2;x=u+(w+1<<2)|0;y=b-x|0;Ts(u+(w<<2)|0,x|0,y|0)|0;x=u+((y>>2)+w<<2)|0;w=c[s>>2]|0;if((w|0)==(x|0)){i=e;return}c[s>>2]=w+(~((w+ -4+(0-x)|0)>>>2)<<2);i=e;return}}while(0);if((xi(7216,7224,63,0,f)|0)==0){c[f>>2]=7224;c[f+4>>2]=63;Mb(7272,f|0)|0;f=fc(8)|0;s=ws(48)|0;c[m+8>>2]=s;c[m>>2]=49;c[m+4>>2]=40;u=s+0|0;d=7224|0;t=u+40|0;do{a[u]=a[d]|0;u=u+1|0;d=d+1|0}while((u|0)<(t|0));a[s+40|0]=0;a[n]=2;a[n+1|0]=40;a[n+2|0]=0;ze(l,m,n);yi(o,63);ze(k,l,o);o=ws(32)|0;c[p+8>>2]=o;c[p>>2]=33;c[p+4>>2]=26;u=o+0|0;d=7296|0;t=u+26|0;do{a[u]=a[d]|0;u=u+1|0;d=d+1|0}while((u|0)<(t|0));a[o+26|0]=0;ze(j,k,p);a[q]=10;p=q+1|0;a[p+0|0]=a[7216|0]|0;a[p+1|0]=a[7217|0]|0;a[p+2|0]=a[7218|0]|0;a[p+3|0]=a[7219|0]|0;a[p+4|0]=a[7220|0]|0;a[q+6|0]=0;ze(h,j,q);a[r]=4;q=r+1|0;a[q]=2599;a[q+1|0]=10;a[r+3|0]=0;ze(g,h,r);Fj(f,g);td(f|0,9992,51)}else{i=e;return}}function xh(a,b){a=a|0;b=b|0;var d=0;d=i;Ed[c[(c[a>>2]|0)+24>>2]&63](a,b);Ed[c[(c[a>>2]|0)+20>>2]&63](a,b);i=d;return}function yh(a,b,c){a=a|0;b=+b;c=+c;var d=0,e=0.0,f=0.0,h=0.0,j=0;d=i;e=+_f();f=+$f();h=+g[a+20>>2]+b;if(((e>=h?e<h+ +g[a+28>>2]:0)?(h=+g[a+24>>2]+c,f>=h):0)?f<h+ +g[a+32>>2]:0){j=1;i=d;return j|0}j=0;i=d;return j|0}function zh(a){a=a|0;return+(+g[a+20>>2])}function Ah(a){a=a|0;return+(+g[a+24>>2])}function Bh(a,b){a=a|0;b=+b;g[a+20>>2]=b;return}function Ch(a,b){a=a|0;b=+b;g[a+24>>2]=b;return}function Dh(a){a=a|0;return+(+g[a+28>>2])}function Eh(a){a=a|0;return+(+g[a+32>>2])}function Fh(a,b){a=a|0;b=+b;g[a+28>>2]=b;return}function Gh(a,b){a=a|0;b=+b;g[a+32>>2]=b;return}function Hh(a){a=a|0;var b=0;b=i;c[a>>2]=7360;c[a+8>>2]=4096;c[a+4>>2]=xs(4096)|0;c[a+12>>2]=0;c[a+16>>2]=0;i=b;return}function Ih(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=7360;d=c[a+4>>2]|0;if((d|0)!=0){zs(d)}ys(a);i=b;return}function Jh(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=7360;d=c[a+4>>2]|0;if((d|0)==0){i=b;return}zs(d);i=b;return}function Kh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;f=a+16|0;g=c[f>>2]|0;h=a+8|0;j=c[h>>2]|0;k=a+4|0;if((g+d|0)>>>0>j>>>0){l=a+12|0;m=c[k>>2]|0;n=g;o=j;while(1){j=o<<1;c[h>>2]=j;p=xs(j)|0;Ss(p|0,m|0,c[l>>2]|0)|0;if((m|0)==0){q=n;r=j}else{zs(m);q=c[f>>2]|0;r=c[h>>2]|0}c[k>>2]=p;if((q+d|0)>>>0>r>>>0){m=p;n=q;o=r}else{s=q;t=l;u=p;break}}}else{s=g;t=a+12|0;u=c[k>>2]|0}Ss(u+s|0,b|0,d|0)|0;c[t>>2]=(c[t>>2]|0)+d;c[f>>2]=(c[f>>2]|0)+d;i=e;return}function Lh(a){a=a|0;return c[a+12>>2]|0}function Mh(a){a=a|0;return c[a+4>>2]|0}function Nh(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~((a+ -4+(0-d)|0)>>>2)<<2)}ys(d);i=b;return}function Oh(a){a=a|0;c[1846]=0;c[1852]=0;return}function Ph(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;b=i;i=i+144|0;d=b;e=b+116|0;f=b+104|0;g=b+92|0;h=b+80|0;j=b+68|0;k=b+128|0;l=b+32|0;m=b+20|0;n=b+8|0;o=b+44|0;p=b+56|0;if((c[7396>>2]|0)==(c[1848]|0)){i=b;return}if((xi(7416,7448,23,0,d)|0)==0){c[d>>2]=7448;c[d+4>>2]=23;Mb(7480,d|0)|0;d=fc(8)|0;q=ws(32)|0;c[k+8>>2]=q;c[k>>2]=33;c[k+4>>2]=25;r=q+0|0;s=7448|0;t=r+25|0;do{a[r]=a[s]|0;r=r+1|0;s=s+1|0}while((r|0)<(t|0));a[q+25|0]=0;a[l]=2;a[l+1|0]=40;a[l+2|0]=0;ze(j,k,l);yi(m,23);ze(h,j,m);m=ws(32)|0;c[n+8>>2]=m;c[n>>2]=33;c[n+4>>2]=26;r=m+0|0;s=7504|0;t=r+26|0;do{a[r]=a[s]|0;r=r+1|0;s=s+1|0}while((r|0)<(t|0));a[m+26|0]=0;ze(g,h,n);n=ws(32)|0;c[o+8>>2]=n;c[o>>2]=33;c[o+4>>2]=24;r=n+0|0;s=7416|0;t=r+24|0;do{a[r]=a[s]|0;r=r+1|0;s=s+1|0}while((r|0)<(t|0));a[n+24|0]=0;ze(f,g,o);a[p]=4;o=p+1|0;a[o]=2599;a[o+1|0]=10;a[p+3|0]=0;ze(e,f,p);Fj(d,e);td(d|0,9992,51)}else{i=b;return}}function Qh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;e=ws(40)|0;f=(c[1852]|0)+1|0;c[1852]=f;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;Hh(e+20|0);c[e+12>>2]=f;_j(e,b)|0;a[e+16|0]=1;b=c[7396>>2]|0;if((b|0)!=(c[7400>>2]|0)){if((b|0)==0){g=0}else{c[b>>2]=e;g=c[7396>>2]|0}c[7396>>2]=g+4;Rh();h=c[1852]|0;i=d;return h|0}g=c[1848]|0;f=b-g|0;b=f>>2;j=b+1|0;if(j>>>0>1073741823){wp(0)}if(b>>>0<536870911){k=f>>1;l=k>>>0<j>>>0?j:k;if((l|0)==0){m=0;n=0}else{o=l;p=9}}else{o=1073741823;p=9}if((p|0)==9){m=o;n=ws(o<<2)|0}o=n+(b<<2)|0;if((o|0)!=0){c[o>>2]=e}Ss(n|0,g|0,f|0)|0;c[1848]=n;c[7396>>2]=n+(j<<2);c[7400>>2]=n+(m<<2);if((g|0)==0){Rh();h=c[1852]|0;i=d;return h|0}ys(g);Rh();h=c[1852]|0;i=d;return h|0}function Rh(){var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;b=i;i=i+32|0;d=b;e=b+16|0;f=b+4|0;if((c[1846]|0)!=0){i=b;return}g=c[7396>>2]|0;h=c[1848]|0;if((g|0)==(h|0)){i=b;return}j=g-h>>2;g=0;while(1){k=c[h+(g<<2)>>2]|0;l=g+1|0;if((a[k+16|0]|0)!=0){break}if(l>>>0<j>>>0){g=l}else{m=16;break}}if((m|0)==16){i=b;return}c[1846]=k;if((a[k]&1)==0){n=k+1|0}else{n=c[k+8>>2]|0}c[d>>2]=n;Mb(7544,d|0)|0;_h(f,7568);ze(e,f,c[1846]|0);if(!((a[f]&1)==0)){ys(c[f+8>>2]|0)}if((a[e]&1)==0){o=e+1|0}else{o=c[e+8>>2]|0}Kc(o|0,c[1846]|0,3,156);if((a[e]&1)==0){i=b;return}ys(c[e+8>>2]|0);i=b;return}function Sh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;i=i+144|0;e=d;f=d+116|0;g=d+104|0;h=d+92|0;j=d+80|0;k=d+68|0;l=d+128|0;m=d+32|0;n=d+20|0;o=d+8|0;p=d+44|0;q=d+56|0;r=c[7396>>2]|0;s=c[1848]|0;a:do{if((r|0)!=(s|0)){t=r-s>>2;u=0;while(1){v=c[s+(u<<2)>>2]|0;u=u+1|0;if((c[v+12>>2]|0)==(b|0)){break}if(!(u>>>0<t>>>0)){break a}}if((v|0)!=0){i=d;return(a[v+16|0]|0)!=0|0}}}while(0);xi(7536,7448,39,0,e)|0;c[e>>2]=7448;c[e+4>>2]=39;Mb(7480,e|0)|0;e=fc(8)|0;v=ws(32)|0;c[l+8>>2]=v;c[l>>2]=33;c[l+4>>2]=25;d=v+0|0;b=7448|0;s=d+25|0;do{a[d]=a[b]|0;d=d+1|0;b=b+1|0}while((d|0)<(s|0));a[v+25|0]=0;a[m]=2;a[m+1|0]=40;a[m+2|0]=0;ze(k,l,m);yi(n,39);ze(j,k,n);n=ws(32)|0;c[o+8>>2]=n;c[o>>2]=33;c[o+4>>2]=26;d=n+0|0;b=7504|0;s=d+26|0;do{a[d]=a[b]|0;d=d+1|0;b=b+1|0}while((d|0)<(s|0));a[n+26|0]=0;ze(h,j,o);a[p]=10;o=p+1|0;a[o+0|0]=a[7536|0]|0;a[o+1|0]=a[7537|0]|0;a[o+2|0]=a[7538|0]|0;a[o+3|0]=a[7539|0]|0;a[o+4|0]=a[7540|0]|0;a[p+6|0]=0;ze(g,h,p);a[q]=4;p=q+1|0;a[p]=2599;a[p+1|0]=10;a[q+3|0]=0;ze(f,g,q);Fj(e,f);td(e|0,9992,51);return 0}function Th(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+144|0;e=d;f=d+116|0;g=d+104|0;h=d+92|0;j=d+80|0;k=d+68|0;l=d+128|0;m=d+32|0;n=d+20|0;o=d+8|0;p=d+44|0;q=d+56|0;r=c[7396>>2]|0;s=c[1848]|0;a:do{if((r|0)!=(s|0)){t=r-s>>2;u=0;while(1){v=c[s+(u<<2)>>2]|0;u=u+1|0;if((c[v+12>>2]|0)==(b|0)){break}if(!(u>>>0<t>>>0)){break a}}if((v|0)!=0){w=v;x=w+20|0;y=Lh(x)|0;i=d;return y|0}}}while(0);if((xi(7536,7448,58,0,e)|0)==0){c[e>>2]=7448;c[e+4>>2]=58;Mb(7480,e|0)|0;e=fc(8)|0;v=ws(32)|0;c[l+8>>2]=v;c[l>>2]=33;c[l+4>>2]=25;b=v+0|0;s=7448|0;r=b+25|0;do{a[b]=a[s]|0;b=b+1|0;s=s+1|0}while((b|0)<(r|0));a[v+25|0]=0;a[m]=2;a[m+1|0]=40;a[m+2|0]=0;ze(k,l,m);yi(n,58);ze(j,k,n);n=ws(32)|0;c[o+8>>2]=n;c[o>>2]=33;c[o+4>>2]=26;b=n+0|0;s=7504|0;r=b+26|0;do{a[b]=a[s]|0;b=b+1|0;s=s+1|0}while((b|0)<(r|0));a[n+26|0]=0;ze(h,j,o);a[p]=10;o=p+1|0;a[o+0|0]=a[7536|0]|0;a[o+1|0]=a[7537|0]|0;a[o+2|0]=a[7538|0]|0;a[o+3|0]=a[7539|0]|0;a[o+4|0]=a[7540|0]|0;a[p+6|0]=0;ze(g,h,p);a[q]=4;p=q+1|0;a[p]=2599;a[p+1|0]=10;a[q+3|0]=0;ze(f,g,q);Fj(e,f);td(e|0,9992,51)}else{w=0;x=w+20|0;y=Lh(x)|0;i=d;return y|0}return 0}function Uh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+144|0;e=d;f=d+116|0;g=d+104|0;h=d+92|0;j=d+80|0;k=d+68|0;l=d+128|0;m=d+32|0;n=d+20|0;o=d+8|0;p=d+44|0;q=d+56|0;r=c[7396>>2]|0;s=c[1848]|0;a:do{if((r|0)!=(s|0)){t=r-s>>2;u=0;while(1){v=c[s+(u<<2)>>2]|0;u=u+1|0;if((c[v+12>>2]|0)==(b|0)){break}if(!(u>>>0<t>>>0)){break a}}if((v|0)!=0){w=v;x=w+20|0;y=Mh(x)|0;i=d;return y|0}}}while(0);if((xi(7536,7448,65,0,e)|0)==0){c[e>>2]=7448;c[e+4>>2]=65;Mb(7480,e|0)|0;e=fc(8)|0;v=ws(32)|0;c[l+8>>2]=v;c[l>>2]=33;c[l+4>>2]=25;b=v+0|0;s=7448|0;r=b+25|0;do{a[b]=a[s]|0;b=b+1|0;s=s+1|0}while((b|0)<(r|0));a[v+25|0]=0;a[m]=2;a[m+1|0]=40;a[m+2|0]=0;ze(k,l,m);yi(n,65);ze(j,k,n);n=ws(32)|0;c[o+8>>2]=n;c[o>>2]=33;c[o+4>>2]=26;b=n+0|0;s=7504|0;r=b+26|0;do{a[b]=a[s]|0;b=b+1|0;s=s+1|0}while((b|0)<(r|0));a[n+26|0]=0;ze(h,j,o);a[p]=10;o=p+1|0;a[o+0|0]=a[7536|0]|0;a[o+1|0]=a[7537|0]|0;a[o+2|0]=a[7538|0]|0;a[o+3|0]=a[7539|0]|0;a[o+4|0]=a[7540|0]|0;a[p+6|0]=0;ze(g,h,p);a[q]=4;p=q+1|0;a[p]=2599;a[p+1|0]=10;a[q+3|0]=0;ze(f,g,q);Fj(e,f);td(e|0,9992,51)}else{w=0;x=w+20|0;y=Mh(x)|0;i=d;return y|0}return 0}function Vh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;d=i;i=i+144|0;e=d;f=d+116|0;g=d+104|0;h=d+92|0;j=d+80|0;k=d+68|0;l=d+128|0;m=d+32|0;n=d+20|0;o=d+8|0;p=d+44|0;q=d+56|0;r=c[7396>>2]|0;s=c[1848]|0;a:do{if((r|0)!=(s|0)){t=r-s>>2;u=0;while(1){v=c[s+(u<<2)>>2]|0;w=u+1|0;if((c[v+12>>2]|0)==(b|0)){break}if(w>>>0<t>>>0){u=w}else{x=6;break a}}if((v|0)!=0){y=v;z=0;A=r;B=s}else{x=6}}else{x=6}}while(0);do{if((x|0)==6){if((xi(7536,7448,72,0,e)|0)==0){c[e>>2]=7448;c[e+4>>2]=72;Mb(7480,e|0)|0;s=fc(8)|0;r=ws(32)|0;c[l+8>>2]=r;c[l>>2]=33;c[l+4>>2]=25;v=r+0|0;u=7448|0;t=v+25|0;do{a[v]=a[u]|0;v=v+1|0;u=u+1|0}while((v|0)<(t|0));a[r+25|0]=0;a[m]=2;a[m+1|0]=40;a[m+2|0]=0;ze(k,l,m);yi(n,72);ze(j,k,n);w=ws(32)|0;c[o+8>>2]=w;c[o>>2]=33;c[o+4>>2]=26;v=w+0|0;u=7504|0;t=v+26|0;do{a[v]=a[u]|0;v=v+1|0;u=u+1|0}while((v|0)<(t|0));a[w+26|0]=0;ze(h,j,o);a[p]=10;u=p+1|0;a[u+0|0]=a[7536|0]|0;a[u+1|0]=a[7537|0]|0;a[u+2|0]=a[7538|0]|0;a[u+3|0]=a[7539|0]|0;a[u+4|0]=a[7540|0]|0;a[p+6|0]=0;ze(g,h,p);a[q]=4;u=q+1|0;a[u]=2599;a[u+1|0]=10;a[q+3|0]=0;ze(f,g,q);Fj(s,f);td(s|0,9992,51)}else{y=0;z=1;A=c[7396>>2]|0;B=c[1848]|0;break}}}while(0);if((A|0)!=(B|0)){f=B;B=A;q=A;A=0;while(1){if((c[(c[f+(A<<2)>>2]|0)+12>>2]|0)==(b|0)){g=A<<2>>2;p=f+(g+1<<2)|0;h=B-p|0;Ts(f+(g<<2)|0,p|0,h|0)|0;p=f+((h>>2)+g<<2)|0;g=c[7396>>2]|0;if((g|0)==(p|0)){C=p}else{h=g+(~((g+ -4+(0-p)|0)>>>2)<<2)|0;c[7396>>2]=h;C=h}}else{C=q}A=A+1|0;f=c[1848]|0;B=C;if(!(A>>>0<B-f>>2>>>0)){break}else{q=C}}}if((y|0)==(c[1846]|0)){c[1846]=0}if(z){i=d;return}Jh(y+20|0);if(!((a[y]&1)==0)){ys(c[y+8>>2]|0)}ys(y);i=d;return}function Wh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=i;if((c[1846]|0)!=(b|0)){i=f;return}Kh(b+20|0,d,e);a[(c[1846]|0)+16|0]=0;c[1846]=0;Rh();i=f;return}function Xh(b){b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;if((c[1846]|0)!=(b|0)){i=d;return}if((a[b]&1)==0){f=b+1|0}else{f=c[b+8>>2]|0}c[e>>2]=f;Mb(7592,e|0)|0;i=d;return}function Yh(){var a=0;a=i;c[1848]=0;c[7396>>2]=0;c[7400>>2]=0;hd(157,7392,q|0)|0;i=a;return}function Zh(a){a=a|0;var b=0,c=0,d=0;b=i;if((a+ -1&a|0)==0){c=a;i=b;return c|0}d=a>>16|a;a=d>>8|d;d=a>>4|a;a=d>>2|d;c=(a>>1|a)+1|0;i=b;return c|0}function _h(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=Ws(d|0)|0;if(f>>>0>4294967279){Vj(0)}if(f>>>0<11){a[b]=f<<1;g=b+1|0}else{h=f+16&-16;j=ws(h)|0;c[b+8>>2]=j;c[b>>2]=h|1;c[b+4>>2]=f;g=j}Ss(g|0,d|0,f|0)|0;a[g+f|0]=0;i=e;return}function $h(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+1040|0;g=f;h=f+8|0;c[g>>2]=d;Ob(h|0,e|0,g|0)|0;g=Ws(h|0)|0;if(g>>>0>4294967279){Vj(0)}if(g>>>0<11){a[b]=g<<1;j=b+1|0;Ss(j|0,h|0,g|0)|0;k=j+g|0;a[k]=0;i=f;return}else{e=g+16&-16;d=ws(e)|0;c[b+8>>2]=d;c[b>>2]=e|1;c[b+4>>2]=g;j=d;Ss(j|0,h|0,g|0)|0;k=j+g|0;a[k]=0;i=f;return}}function ai(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+1040|0;g=f;h=f+8|0;c[g>>2]=d;Ob(h|0,e|0,g|0)|0;g=Ws(h|0)|0;if(g>>>0>4294967279){Vj(0)}if(g>>>0<11){a[b]=g<<1;j=b+1|0;Ss(j|0,h|0,g|0)|0;k=j+g|0;a[k]=0;i=f;return}else{e=g+16&-16;d=ws(e)|0;c[b+8>>2]=d;c[b>>2]=e|1;c[b+4>>2]=g;j=d;Ss(j|0,h|0,g|0)|0;k=j+g|0;a[k]=0;i=f;return}}function bi(b){b=b|0;var d=0,e=0,f=0.0;d=i;if((a[b]&1)==0){e=b+1|0}else{e=c[b+8>>2]|0}f=+Ms(e);i=d;return+f}function ci(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+160|0;e=d+16|0;f=d;g=d+12|0;if((a[b]&1)==0){h=b+1|0}else{h=c[b+8>>2]|0}b=Ws(h|0)|0;if(b>>>0>4294967279){Vj(0)}if(b>>>0<11){a[f]=b<<1;j=f+1|0}else{k=b+16&-16;l=ws(k)|0;c[f+8>>2]=l;c[f>>2]=k|1;c[f+4>>2]=b;j=l}Ss(j|0,h|0,b|0)|0;a[j+b|0]=0;b=e+8|0;c[e>>2]=7756;j=e+60|0;c[j>>2]=7776;c[e+4>>2]=0;h=e+60|0;tk(h,b);c[e+132>>2]=0;c[e+136>>2]=-1;c[e>>2]=7628;c[e+60>>2]=7648;c[b>>2]=10256;l=e+12|0;Cp(l);k=e+16|0;c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[k+20>>2]=0;c[b>>2]=7792;k=e+40|0;m=e+56|0;c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[m>>2]=8;oi(b,f);if(!((a[f]&1)==0)){ys(c[f+8>>2]|0)}bl(e,g)|0;f=c[g>>2]|0;c[e>>2]=7628;c[j>>2]=7648;j=e+8|0;c[j>>2]=7792;if((a[k]&1)==0){c[j>>2]=10256;Ep(l);rk(h);i=d;return f|0}ys(c[e+48>>2]|0);c[j>>2]=10256;Ep(l);rk(h);i=d;return f|0}function di(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=7628;c[b+60>>2]=7648;e=b+8|0;c[e>>2]=7792;if(!((a[b+40|0]&1)==0)){ys(c[b+48>>2]|0)}c[e>>2]=10256;Ep(b+12|0);rk(b+60|0);i=d;return}function ei(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=7628;c[b+60>>2]=7648;e=b+8|0;c[e>>2]=7792;if(!((a[b+40|0]&1)==0)){ys(c[b+48>>2]|0)}c[e>>2]=10256;Ep(b+12|0);rk(b+60|0);ys(b);i=d;return}function fi(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;e=c[(c[b>>2]|0)+ -12>>2]|0;c[b+e>>2]=7628;f=b+(e+60)|0;c[f>>2]=7648;g=b+(e+8)|0;c[g>>2]=7792;if(!((a[b+(e+40)|0]&1)==0)){ys(c[b+(e+48)>>2]|0)}c[g>>2]=10256;Ep(b+(e+12)|0);rk(f);i=d;return}function gi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=c[(c[b>>2]|0)+ -12>>2]|0;f=b+e|0;c[f>>2]=7628;g=b+(e+60)|0;c[g>>2]=7648;h=b+(e+8)|0;c[h>>2]=7792;if(!((a[b+(e+40)|0]&1)==0)){ys(c[b+(e+48)>>2]|0)}c[h>>2]=10256;Ep(b+(e+12)|0);rk(g);ys(f);i=d;return}function hi(b){b=b|0;var d=0;d=i;c[b>>2]=7792;if(!((a[b+32|0]&1)==0)){ys(c[b+40>>2]|0)}c[b>>2]=10256;Ep(b+4|0);i=d;return}function ii(b){b=b|0;var d=0;d=i;c[b>>2]=7792;if(!((a[b+32|0]&1)==0)){ys(c[b+40>>2]|0)}c[b>>2]=10256;Ep(b+4|0);ys(b);i=d;return}function ji(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;j=i;k=d+44|0;l=c[k>>2]|0;m=d+24|0;n=c[m>>2]|0;if(l>>>0<n>>>0){c[k>>2]=n;o=n}else{o=l}l=h&24;do{if((l|0)==0){k=b;c[k>>2]=0;c[k+4>>2]=0;k=b+8|0;c[k>>2]=-1;c[k+4>>2]=-1;i=j;return}else if((l|0)!=24){if((g|0)==2){p=11;break}else if((g|0)==0){q=0;r=0;break}else if((g|0)!=1){p=15;break}if((h&8|0)==0){k=n-(c[d+20>>2]|0)|0;q=k;r=((k|0)<0)<<31>>31;break}else{k=(c[d+12>>2]|0)-(c[d+8>>2]|0)|0;q=k;r=((k|0)<0)<<31>>31;break}}else{if((g|0)==2){p=11;break}else if((g|0)==0){q=0;r=0;break}else if((g|0)!=1){p=15;break}k=b;c[k>>2]=0;c[k+4>>2]=0;k=b+8|0;c[k>>2]=-1;c[k+4>>2]=-1;i=j;return}}while(0);if((p|0)==15){g=b;c[g>>2]=0;c[g+4>>2]=0;g=b+8|0;c[g>>2]=-1;c[g+4>>2]=-1;i=j;return}if((p|0)==11){p=d+32|0;if((a[p]&1)==0){s=p+1|0}else{s=c[d+40>>2]|0}p=o-s|0;q=p;r=((p|0)<0)<<31>>31}p=_s(q|0,r|0,e|0,f|0)|0;f=J;if((f|0)>=0){e=d+32|0;if((a[e]&1)==0){t=e+1|0}else{t=c[d+40>>2]|0}e=o-t|0;t=((e|0)<0)<<31>>31;if(!((t|0)<(f|0)|(t|0)==(f|0)&e>>>0<p>>>0)){e=h&8;if(!((p|0)==0&(f|0)==0)){if((e|0)!=0?(c[d+12>>2]|0)==0:0){t=b;c[t>>2]=0;c[t+4>>2]=0;t=b+8|0;c[t>>2]=-1;c[t+4>>2]=-1;i=j;return}if((h&16|0)!=0&(n|0)==0){n=b;c[n>>2]=0;c[n+4>>2]=0;n=b+8|0;c[n>>2]=-1;c[n+4>>2]=-1;i=j;return}}if((e|0)!=0){c[d+12>>2]=(c[d+8>>2]|0)+p;c[d+16>>2]=o}if((h&16|0)!=0){c[m>>2]=(c[d+20>>2]|0)+p}d=b;c[d>>2]=0;c[d+4>>2]=0;d=b+8|0;c[d>>2]=p;c[d+4>>2]=f;i=j;return}}f=b;c[f>>2]=0;c[f+4>>2]=0;f=b+8|0;c[f>>2]=-1;c[f+4>>2]=-1;i=j;return}function ki(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=d+8|0;Nd[c[(c[b>>2]|0)+16>>2]&31](a,b,c[g>>2]|0,c[g+4>>2]|0,0,e);i=f;return}function li(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;e=a+44|0;f=c[e>>2]|0;g=c[a+24>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;h=g}else{h=f}if((c[a+48>>2]&8|0)==0){j=-1;i=b;return j|0}f=a+16|0;g=c[f>>2]|0;e=c[a+12>>2]|0;if(g>>>0<h>>>0){c[f>>2]=h;k=h}else{k=g}if(!(e>>>0<k>>>0)){j=-1;i=b;return j|0}j=d[e]|0;i=b;return j|0}function mi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;f=b+44|0;g=c[f>>2]|0;h=c[b+24>>2]|0;if(g>>>0<h>>>0){c[f>>2]=h;j=h}else{j=g}g=b+8|0;h=c[g>>2]|0;f=b+12|0;k=c[f>>2]|0;if(!(h>>>0<k>>>0)){l=-1;i=e;return l|0}if((d|0)==-1){c[g>>2]=h;c[f>>2]=k+ -1;c[b+16>>2]=j;l=0;i=e;return l|0}if((c[b+48>>2]&16|0)==0){m=d&255;n=k+ -1|0;if(m<<24>>24==(a[n]|0)){o=m;p=n}else{l=-1;i=e;return l|0}}else{o=d&255;p=k+ -1|0}c[g>>2]=h;c[f>>2]=p;c[b+16>>2]=j;a[p]=o;l=d;i=e;return l|0}function ni(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;e=i;if((d|0)==-1){f=0;i=e;return f|0}g=b+12|0;h=b+8|0;j=(c[g>>2]|0)-(c[h>>2]|0)|0;k=b+24|0;l=c[k>>2]|0;m=b+28|0;n=c[m>>2]|0;if((l|0)==(n|0)){o=b+48|0;if((c[o>>2]&16|0)==0){f=-1;i=e;return f|0}p=b+20|0;q=c[p>>2]|0;r=l-q|0;s=b+44|0;t=(c[s>>2]|0)-q|0;q=b+32|0;u=a[q]|0;v=(u&1)!=0;if(v){w=(c[q>>2]&-2)+ -1|0;x=c[b+36>>2]|0}else{w=10;x=(u&255)>>>1}if((x|0)==(w|0)){gk(q,w,1,w,w,0,0);if((a[q]&1)==0){y=11}else{y=12}}else{if(v){y=12}else{y=11}}if((y|0)==11){a[q]=(x<<1)+2;z=q+1|0;A=x+1|0}else if((y|0)==12){y=c[b+40>>2]|0;v=x+1|0;c[b+36>>2]=v;z=y;A=v}a[z+x|0]=0;a[z+A|0]=0;A=a[q]|0;if((A&1)==0){B=A;C=10}else{A=c[q>>2]|0;B=A&255;C=(A&-2)+ -1|0}A=(B&1)==0;if(A){D=(B&255)>>>1}else{D=c[b+36>>2]|0}do{if(!(D>>>0<C>>>0)){if(A){a[q+C+1|0]=0;a[q]=C<<1;break}else{a[(c[b+40>>2]|0)+C|0]=0;c[b+36>>2]=C;break}}else{bk(q,C-D|0,0)|0}}while(0);D=a[q]|0;if((D&1)==0){E=q+1|0;F=(D&255)>>>1}else{E=c[b+40>>2]|0;F=c[b+36>>2]|0}D=E+F|0;c[p>>2]=E;c[m>>2]=D;m=E+r|0;c[k>>2]=m;r=E+t|0;c[s>>2]=r;G=o;H=D;I=m;J=r}else{G=b+48|0;H=n;I=l;J=c[b+44>>2]|0}l=I+1|0;n=l>>>0<J>>>0?J:l;c[b+44>>2]=n;if((c[G>>2]&8|0)!=0){G=b+32|0;if((a[G]&1)==0){K=G+1|0}else{K=c[b+40>>2]|0}c[h>>2]=K;c[g>>2]=K+j;c[b+16>>2]=n}if((I|0)==(H|0)){f=Sd[c[(c[b>>2]|0)+52>>2]&31](b,d&255)|0;i=e;return f|0}else{c[k>>2]=l;a[I]=d;f=d&255;i=e;return f|0}return 0}function oi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;f=b+32|0;_j(f,d)|0;d=b+44|0;c[d>>2]=0;g=b+48|0;h=c[g>>2]|0;if((h&8|0)!=0){j=a[f]|0;if((j&1)==0){k=f+((j&255)>>>1)+1|0;c[d>>2]=k;l=f+1|0;m=f+1|0;n=k}else{k=(c[b+40>>2]|0)+(c[b+36>>2]|0)|0;c[d>>2]=k;j=c[b+40>>2]|0;l=j;m=j;n=k}c[b+8>>2]=l;c[b+12>>2]=m;c[b+16>>2]=n}if((h&16|0)==0){i=e;return}h=a[f]|0;if((h&1)==0){n=(h&255)>>>1;c[d>>2]=f+n+1;o=h;p=10;q=n}else{n=c[b+36>>2]|0;c[d>>2]=(c[b+40>>2]|0)+n;d=c[f>>2]|0;o=d&255;p=(d&-2)+ -1|0;q=n}n=(o&1)==0;if(n){r=(o&255)>>>1}else{r=c[b+36>>2]|0}do{if(!(r>>>0<p>>>0)){if(n){a[f+p+1|0]=0;a[f]=p<<1;break}else{a[(c[b+40>>2]|0)+p|0]=0;c[b+36>>2]=p;break}}else{bk(f,p-r|0,0)|0}}while(0);r=a[f]|0;if((r&1)==0){s=f+1|0;t=(r&255)>>>1;u=f+1|0}else{f=c[b+40>>2]|0;s=f;t=c[b+36>>2]|0;u=f}f=b+24|0;c[f>>2]=u;c[b+20>>2]=u;c[b+28>>2]=s+t;if((c[g>>2]&3|0)==0){i=e;return}c[f>>2]=u+q;i=e;return}function pi(a){a=a|0;var b=0,d=0;a=i;b=(c[1990]|0)+ -1|0;c[1990]=b;if((b|0)!=0){i=a;return}b=c[1988]|0;if((b|0)==0){i=a;return}d=c[1986]|0;if((d|0)!=0){qi(d);ys(d)}ys(b);i=a;return}function qi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=c[b>>2]|0;if((e|0)==0){i=d;return}f=b+4|0;g=c[f>>2]|0;if((g|0)==(e|0)){h=e}else{j=g;do{c[f>>2]=j+ -44;if(!((a[j+ -16|0]&1)==0)){ys(c[j+ -8>>2]|0)}if(!((a[j+ -28|0]&1)==0)){ys(c[j+ -20>>2]|0)}if(!((a[j+ -40|0]&1)==0)){ys(c[j+ -32>>2]|0)}j=c[f>>2]|0}while((j|0)!=(e|0));h=c[b>>2]|0}ys(h);i=d;return}function ri(){var a=0,b=0,d=0;a=i;b=c[1990]|0;c[1990]=b+1;if((b|0)==0){b=ws(1)|0;d=ws(12)|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[1986]=d;c[1988]=b}hd(158,7936,q|0)|0;i=a;return}function si(a){a=a|0;var d=0,e=0,f=0,g=0;d=i;e=b[a+8>>1]|0;f=e&255;if((f|0)==4){if(!((e&256)==0)?(e=c[a>>2]|0,(e|0)!=0):0){ss(e)}}else if((f|0)==6|(f|0)==7?(f=c[a>>2]|0,(f|0)!=0):0){ti(f,c[f+4>>2]|0);ys(f)}f=c[a+12>>2]|0;if((f|0)==0){i=d;return}a=f+ -4|0;e=c[a>>2]|0;if((e|0)!=0){g=f+(e<<2)|0;do{g=g+ -4|0;e=c[g>>2]|0;if((e|0)!=0){ss(e)}}while((g|0)!=(f|0))}zs(a);i=d;return}function ti(a,b){a=a|0;b=b|0;var d=0;d=i;if((b|0)==0){i=d;return}ti(a,c[b>>2]|0);ti(a,c[b+4>>2]|0);si(b+24|0);a=c[b+16>>2]|0;if((a|0)!=0?(c[b+20>>2]|0)==1:0){ss(a)}ys(b);i=d;return}function ui(){var a=0;a=i;b[7976>>1]=b[7976>>1]&-512;c[7980>>2]=0;hd(159,7968,q|0)|0;i=a;return}function vi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;f=c[d+48>>2]|0;if((f&16|0)!=0){g=d+44|0;h=c[g>>2]|0;j=c[d+24>>2]|0;if(h>>>0<j>>>0){c[g>>2]=j;k=j}else{k=h}h=c[d+20>>2]|0;j=h;g=k-j|0;if(g>>>0>4294967279){Vj(0)}if(g>>>0<11){a[b]=g<<1;l=b+1|0}else{m=g+16&-16;n=ws(m)|0;c[b+8>>2]=n;c[b>>2]=m|1;c[b+4>>2]=g;l=n}if((h|0)==(k|0)){o=l}else{n=h;h=l;while(1){a[h]=a[n]|0;n=n+1|0;if((n|0)==(k|0)){break}else{h=h+1|0}}o=l+(k+(0-j))|0}a[o]=0;i=e;return}if((f&8|0)==0){c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;i=e;return}f=c[d+8>>2]|0;o=c[d+16>>2]|0;d=f;j=o-d|0;if(j>>>0>4294967279){Vj(0)}if(j>>>0<11){a[b]=j<<1;p=b+1|0}else{k=j+16&-16;l=ws(k)|0;c[b+8>>2]=l;c[b>>2]=k|1;c[b+4>>2]=j;p=l}if((f|0)==(o|0)){q=p}else{l=f;f=p;while(1){a[f]=a[l]|0;l=l+1|0;if((l|0)==(o|0)){break}else{f=f+1|0}}q=p+(o+(0-d))|0}a[q]=0;i=e;return}function wi(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return 0}function xi(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;i=i+1040|0;h=g+16|0;j=g;if((e|0)==0){k=0}else{c[j>>2]=f;Rb(h|0,1024,e|0,j|0)|0;k=h}h=Td[c[1996]&7](a,k,b,d)|0;i=g;return h|0}function yi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+160|0;f=e+144|0;g=e;h=g+64|0;j=g+8|0;c[j>>2]=8024;k=g+12|0;c[g>>2]=8156;c[h>>2]=8176;c[g+4>>2]=0;l=g+64|0;tk(l,k);c[g+136>>2]=0;c[g+140>>2]=-1;c[g>>2]=8004;c[h>>2]=8044;c[j>>2]=8024;c[k>>2]=10256;h=g+16|0;Cp(h);m=g+20|0;c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[m+12>>2]=0;c[m+16>>2]=0;c[m+20>>2]=0;c[k>>2]=7792;m=g+44|0;n=g+60|0;c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[m+12>>2]=0;c[n>>2]=24;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;oi(k,f);if(!((a[f]&1)==0)){ys(c[f+8>>2]|0)}ml(g+8|0,d)|0;vi(b,k);c[g>>2]=8004;c[g+64>>2]=8044;c[j>>2]=8024;j=g+12|0;c[j>>2]=7792;if((a[m]&1)==0){c[j>>2]=10256;Ep(h);rk(l);i=e;return}ys(c[g+52>>2]|0);c[j>>2]=10256;Ep(h);rk(l);i=e;return}function zi(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=8004;c[b+64>>2]=8044;c[b+8>>2]=8024;e=b+12|0;c[e>>2]=7792;if(!((a[b+44|0]&1)==0)){ys(c[b+52>>2]|0)}c[e>>2]=10256;Ep(b+16|0);rk(b+64|0);i=d;return}function Ai(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=8004;c[b+64>>2]=8044;c[b+8>>2]=8024;e=b+12|0;c[e>>2]=7792;if(!((a[b+44|0]&1)==0)){ys(c[b+52>>2]|0)}c[e>>2]=10256;Ep(b+16|0);rk(b+64|0);ys(b);i=d;return}function Bi(b){b=b|0;var d=0,e=0,f=0;d=i;e=b+ -8|0;c[e>>2]=8004;b=e+64|0;c[b>>2]=8044;c[e+8>>2]=8024;f=e+12|0;c[f>>2]=7792;if(!((a[e+44|0]&1)==0)){ys(c[e+52>>2]|0)}c[f>>2]=10256;Ep(e+16|0);rk(b);i=d;return}function Ci(b){b=b|0;var d=0,e=0,f=0;d=i;e=b+ -8|0;c[e>>2]=8004;b=e+64|0;c[b>>2]=8044;c[e+8>>2]=8024;f=e+12|0;c[f>>2]=7792;if(!((a[e+44|0]&1)==0)){ys(c[e+52>>2]|0)}c[f>>2]=10256;Ep(e+16|0);rk(b);ys(e);i=d;return}function Di(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;e=c[(c[b>>2]|0)+ -12>>2]|0;c[b+e>>2]=8004;f=b+(e+64)|0;c[f>>2]=8044;c[b+(e+8)>>2]=8024;g=b+(e+12)|0;c[g>>2]=7792;if(!((a[b+(e+44)|0]&1)==0)){ys(c[b+(e+52)>>2]|0)}c[g>>2]=10256;Ep(b+(e+16)|0);rk(f);i=d;return}function Ei(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=c[(c[b>>2]|0)+ -12>>2]|0;f=b+e|0;c[f>>2]=8004;g=b+(e+64)|0;c[g>>2]=8044;c[b+(e+8)>>2]=8024;h=b+(e+12)|0;c[h>>2]=7792;if(!((a[b+(e+44)|0]&1)==0)){ys(c[b+(e+52)>>2]|0)}c[h>>2]=10256;Ep(b+(e+16)|0);rk(g);ys(f);i=d;return}function Fi(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;c[a+4>>2]=b;c[a+8>>2]=e;g=Gi(b,e,8184)|0;h=Gi(b,e,8192)|0;c[a+16>>2]=h;j=Gi(b,e,8200)|0;c[a+20>>2]=j;k=Gi(b,e,8208)|0;c[a+24>>2]=k;l=Gi(b,e,8216)|0;c[a+28>>2]=l;m=Gi(b,e,8224)|0;c[a+32>>2]=m;c[a+36>>2]=Gi(b,e,8232)|0;if((g|0)==0|(h|0)==0|(j|0)==0|(k|0)==0|(l|0)==0|(m|0)==0){n=0;i=f;return n|0}m=Gi(b,e,8240)|0;if((m|0)==0){c[a+12>>2]=65535}else{c[a+12>>2]=(d[b+(m+4)|0]|0)<<8|(d[b+(m+5)|0]|0)}m=(d[b+(g+2)|0]|0)<<8|(d[b+(g+3)|0]|0);e=a+40|0;c[e>>2]=0;if((m|0)==0){n=0;i=f;return n|0}l=g+4|0;k=0;h=0;while(1){o=l+(h<<3)|0;if(((d[b+o|0]|0)<<8|(d[b+(o+1)|0]|0)|0)==3?(p=(d[b+(o+2)|0]|0)<<8|(d[b+(o+3)|0]|0),(p|0)==10|(p|0)==1):0){p=((d[b+(o+5)|0]|0)<<16|(d[b+(o+4)|0]|0)<<24|(d[b+(o+6)|0]|0)<<8|(d[b+(o+7)|0]|0))+g|0;c[e>>2]=p;q=p}else{q=k}h=h+1|0;if((h|0)>=(m|0)){break}else{k=q}}if((q|0)==0){n=0;i=f;return n|0}c[a+44>>2]=(d[b+(j+50)|0]|0)<<8|(d[b+(j+51)|0]|0);n=1;i=f;return n|0}function Gi(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;g=d[b+(c+4)|0]<<8|d[b+(c+5)|0];h=c+12|0;if((g|0)==0){j=0;i=f;return j|0}c=a[e]|0;k=e+1|0;l=e+2|0;m=e+3|0;e=0;while(1){n=h+(e<<4)|0;if((((d[b+n|0]|0)==(c|0)?(d[b+(n+1)|0]|0)==(a[k]|0):0)?(d[b+(n+2)|0]|0)==(a[l]|0):0)?(d[b+(n+3)|0]|0)==(a[m]|0):0){break}o=e+1|0;if((o|0)<(g|0)){e=o}else{j=0;p=9;break}}if((p|0)==9){i=f;return j|0}j=d[b+(n+9)|0]<<16|d[b+(n+8)|0]<<24|d[b+(n+10)|0]<<8|d[b+(n+11)|0];i=f;return j|0}function Hi(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=i;g=c[b+4>>2]|0;h=c[b+40>>2]|0;b=((d[g+h|0]|0)<<8|(d[g+(h+1)|0]|0))&65535;if(b<<16>>16==4){j=((d[g+(h+6)|0]|0)<<8|(d[g+(h+7)|0]|0))>>>1;k=h+14|0;if((e|0)>65535){l=0;i=f;return l|0}m=(d[g+(h+11)|0]|0|(d[g+(h+10)|0]|0)<<8)&65535;n=(a[g+(h+13)|0]&254|(d[g+(h+12)|0]|0)<<8)+k|0;o=(((d[g+n|0]|0)<<8|(d[g+(n+1)|0]|0)|0)>(e|0)?k:n)+ -2|0;if(m<<16>>16==0){p=o}else{n=m;m=o;o=((d[g+(h+9)|0]|0|(d[g+(h+8)|0]|0)<<8)&65535)>>>1;while(1){k=(o&65535)>>>1;q=((k&65535)<<1)+m|0;r=((d[g+q|0]|0)<<8|(d[g+(q+1)|0]|0)|0)<(e|0)?q:m;q=n+ -1<<16>>16;if(q<<16>>16==0){p=r;break}else{n=q;m=r;o=k}}}o=-14-h+2+p&131070;p=h+16|0;m=p+(j<<1)+o|0;n=(d[g+m|0]|0)<<8|(d[g+(m+1)|0]|0);if((n|0)>(e|0)){l=0;i=f;return l|0}m=p+(j*6|0)+o|0;k=(d[g+m|0]|0)<<8|(d[g+(m+1)|0]|0);if((k|0)==0){r=p+(j<<2)+o|0;l=((d[g+r|0]|0)<<8|(d[g+(r+1)|0]|0))+e&65535;i=f;return l|0}else{r=m+(e-n<<1)+k|0;l=(d[g+r|0]|0)<<8|(d[g+(r+1)|0]|0);i=f;return l|0}}else if(b<<16>>16==0){if((((d[g+(h+2)|0]|0)<<8|(d[g+(h+3)|0]|0))+ -6|0)<=(e|0)){l=0;i=f;return l|0}l=d[g+(e+6+h)|0]|0;i=f;return l|0}else if(b<<16>>16==2){l=0;i=f;return l|0}else if(b<<16>>16==6){r=(d[g+(h+6)|0]|0)<<8|(d[g+(h+7)|0]|0);if(r>>>0>e>>>0){l=0;i=f;return l|0}if(!((((d[g+(h+8)|0]|0)<<8|(d[g+(h+9)|0]|0))+r|0)>>>0>e>>>0)){l=0;i=f;return l|0}k=h+10+(e-r<<1)|0;l=(d[g+k|0]|0)<<8|(d[g+(k+1)|0]|0);i=f;return l|0}else{k=b<<16>>16==12;if(!((b+ -12<<16>>16&65535)<2)){l=0;i=f;return l|0}b=h+16|0;r=(d[g+(h+13)|0]|0)<<16|(d[g+(h+12)|0]|0)<<24|(d[g+(h+14)|0]|0)<<8|(d[g+(h+15)|0]|0);h=0;a:while(1){n=r;while(1){if((h|0)>=(n|0)){l=0;s=23;break a}t=(n-h>>1)+h|0;u=b+(t*12|0)|0;v=(d[g+(u+1)|0]|0)<<16|(d[g+u|0]|0)<<24|(d[g+(u+2)|0]|0)<<8|(d[g+(u+3)|0]|0);if(v>>>0>e>>>0){n=t}else{break}}if(((d[g+(u+4)|0]|0)<<24|(d[g+(u+5)|0]|0)<<16|(d[g+(u+6)|0]|0)<<8|(d[g+(u+7)|0]|0))>>>0<e>>>0){r=n;h=t+1|0}else{break}}if((s|0)==23){i=f;return l|0}s=(d[g+(u+9)|0]|0)<<16|(d[g+(u+8)|0]|0)<<24|(d[g+(u+10)|0]|0)<<8|(d[g+(u+11)|0]|0);if(!k){l=s;i=f;return l|0}l=e-v+s|0;i=f;return l|0}return 0}function Ii(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0,H=0,I=0.0,J=0.0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0;h=i;i=i+16|0;j=h;k=c[e+4>>2]|0;l=Ki(e,f)|0;c[g>>2]=0;if((l|0)<0){m=0;i=h;return m|0}f=d[k+l|0]<<8|d[k+(l+1)|0];n=f&65535;a:do{if(!(n<<16>>16>0)){if(n<<16>>16==-1){o=k+(l+10)|0;p=0;q=0;while(1){c[j>>2]=0;r=d[o+1|0]|0;s=d[o+2|0]<<8|d[o+3|0];t=o+4|0;do{if((r&2|0)!=0){u=a[t]|0;if((r&1|0)==0){v=o+6|0;w=+(u<<24>>24);x=+(a[o+5|0]|0);break}else{v=o+8|0;w=+(((d[o+5|0]|(u&255)<<8)&65535)<<16>>16);x=+(((d[o+6|0]<<8|d[o+7|0])&65535)<<16>>16);break}}else{v=t;w=0.0;x=0.0}}while(0);do{if((r&8|0)==0){if((r&64|0)!=0){y=v+4|0;z=+(((d[v]<<8|d[v+1|0])&65535)<<16>>16)*6103515625.0e-14;A=0.0;B=0.0;C=+(((d[v+2|0]<<8|d[v+3|0])&65535)<<16>>16)*6103515625.0e-14;break}if((r&128|0)==0){y=v;z=1.0;A=0.0;B=0.0;C=1.0}else{y=v+8|0;z=+(((d[v]<<8|d[v+1|0])&65535)<<16>>16)*6103515625.0e-14;A=+(((d[v+2|0]<<8|d[v+3|0])&65535)<<16>>16)*6103515625.0e-14;B=+(((d[v+4|0]<<8|d[v+5|0])&65535)<<16>>16)*6103515625.0e-14;C=+(((d[v+6|0]<<8|d[v+7|0])&65535)<<16>>16)*6103515625.0e-14}}else{D=+(((d[v]<<8|d[v+1|0])&65535)<<16>>16)*6103515625.0e-14;y=v+2|0;z=D;A=0.0;B=0.0;C=D}}while(0);D=+V(+(A*A+z*z));E=+V(+(C*C+B*B));t=Ii(e,s,j)|0;if((t|0)>0){u=c[j>>2]|0;F=0;do{G=u+(F*10|0)|0;H=u+(F*10|0)+2|0;I=+(b[G>>1]|0);J=+(b[H>>1]|0);b[G>>1]=~~(D*(w+(z*I+B*J)));b[H>>1]=~~(E*(x+(A*I+C*J)));H=u+(F*10|0)+4|0;G=u+(F*10|0)+6|0;J=+(b[H>>1]|0);I=+(b[G>>1]|0);b[H>>1]=~~(D*(w+(z*J+B*I)));b[G>>1]=~~(E*(x+(A*J+C*I)));F=F+1|0}while((F|0)!=(t|0));F=t+p|0;u=rs(F*10|0)|0;if((u|0)==0){break}if((p|0)>0){Ss(u|0,q|0,p*10|0)|0}s=c[j>>2]|0;Ss(u+(p*10|0)|0,s|0,t*10|0)|0;if((q|0)==0){K=s}else{ss(q);K=c[j>>2]|0}ss(K);L=F;M=u}else{L=p;M=q}if((r&32|0)==0){N=L;O=M;break a}else{o=y;p=L;q=M}}if((q|0)!=0){ss(q)}p=c[j>>2]|0;if((p|0)==0){m=0;i=h;return m|0}ss(p);m=0;i=h;return m|0}else{N=0;O=0}}else{p=l+10|0;o=f<<16>>15;u=o+p|0;F=a[k+u|0]|0;s=a[k+(u+1)|0]|0;G=(d[k+(u+ -2)|0]<<8|d[k+(u+ -1)|0])+1|0;H=rs((G+o|0)*10|0)|0;if((H|0)==0){m=0;i=h;return m|0}P=0;Q=0;R=0;S=k+(u+2+((F&255)<<8|s&255))|0;while(1){if(P<<24>>24==0){s=S+1|0;F=a[S]|0;if((F&8)==0){T=0;U=F;W=s}else{T=a[s]|0;U=F;W=S+2|0}}else{T=P+ -1<<24>>24;U=Q;W=S}a[H+((R+o|0)*10|0)+8|0]=U;F=R+1|0;if((F|0)<(G|0)){P=T;Q=U;R=F;S=W}else{X=0;Y=W;Z=0;break}}while(1){S=X+o|0;R=d[H+(S*10|0)+8|0]|0;if((R&2|0)==0){if((R&16|0)==0){_=Y+2|0;$=((d[Y]<<8|d[Y+1|0])<<16>>16)+Z|0}else{_=Y;$=Z}}else{Q=d[Y]|0;_=Y+1|0;$=((R&16|0)!=0?Q:0-Q|0)+Z|0}b[H+(S*10|0)>>1]=$;S=X+1|0;if((S|0)<(G|0)){X=S;Y=_;Z=$}else{aa=0;ba=_;ca=0;break}}while(1){S=aa+o|0;Q=d[H+(S*10|0)+8|0]|0;if((Q&4|0)==0){if((Q&32|0)==0){da=ba+2|0;ea=((d[ba]<<8|d[ba+1|0])<<16>>16)+ca|0}else{da=ba;ea=ca}}else{R=d[ba]|0;da=ba+1|0;ea=((Q&32|0)!=0?R:0-R|0)+ca|0}b[H+(S*10|0)+2>>1]=ea;S=aa+1|0;if((S|0)<(G|0)){aa=S;ba=da;ca=ea}else{fa=0;ga=0;ha=0;ia=0;ja=0;ka=0;la=0;ma=0;na=0;oa=0;pa=0;qa=0;break}}while(1){S=ha+o|0;R=a[H+(S*10|0)+8|0]|0;Q=b[H+(S*10|0)>>1]|0;P=Q<<16>>16;q=b[H+(S*10|0)+2>>1]|0;F=q<<16>>16;do{if((ja|0)!=(ha|0)){s=(qa|0)!=0;if((R&1)==0){if(!s){ra=P;sa=F;ta=ha;ua=ia;va=ja;wa=ka;xa=la;ya=ma;za=na;Aa=oa;Ba=pa;Ca=1;break}a[H+(ka*10|0)+8|0]=3;b[H+(ka*10|0)>>1]=(P+fa|0)>>>1;b[H+(ka*10|0)+2>>1]=(F+ga|0)>>>1;b[H+(ka*10|0)+4>>1]=fa;b[H+(ka*10|0)+6>>1]=ga;ra=P;sa=F;ta=ha;ua=ia;va=ja;wa=ka+1|0;xa=la;ya=ma;za=na;Aa=oa;Ba=pa;Ca=1;break}u=ka+1|0;Da=H+(ka*10|0)|0;Ea=H+(ka*10|0)+8|0;if(s){a[Ea]=3;b[Da>>1]=Q;b[H+(ka*10|0)+2>>1]=q;b[H+(ka*10|0)+4>>1]=fa;b[H+(ka*10|0)+6>>1]=ga;ra=fa;sa=ga;ta=ha;ua=ia;va=ja;wa=u;xa=la;ya=ma;za=na;Aa=oa;Ba=pa;Ca=0;break}else{a[Ea]=2;b[Da>>1]=Q;b[H+(ka*10|0)+2>>1]=q;b[H+(ka*10|0)+4>>1]=0;b[H+(ka*10|0)+6>>1]=0;ra=fa;sa=ga;ta=ha;ua=ia;va=ja;wa=u;xa=la;ya=ma;za=na;Aa=oa;Ba=pa;Ca=0;break}}else{if((ha|0)==0){Fa=ka}else{Fa=Li(H,ka,qa,na,oa,pa,la,ma,fa,ga)|0}u=R&1;Da=(u^1)&255;do{if(u<<24>>24==0){Ea=S+1|0;s=b[H+(Ea*10|0)>>1]|0;if((a[H+(Ea*10|0)+8|0]&1)==0){Ga=ha;Ha=P;Ia=F;Ja=s+P>>1;Ka=(b[H+(Ea*10|0)+2>>1]|0)+F>>1;break}else{Ga=ha+1|0;Ha=P;Ia=F;Ja=s;Ka=b[H+(Ea*10|0)+2>>1]|0;break}}else{Ga=ha;Ha=la;Ia=ma;Ja=P;Ka=F}}while(0);a[H+(Fa*10|0)+8|0]=1;b[H+(Fa*10|0)>>1]=Ja;b[H+(Fa*10|0)+2>>1]=Ka;b[H+(Fa*10|0)+4>>1]=0;b[H+(Fa*10|0)+6>>1]=0;u=(ia<<1)+p|0;ra=fa;sa=ga;ta=Ga;ua=ia+1|0;va=(d[k+u|0]<<8|d[k+(u+1)|0])+1|0;wa=Fa+1|0;xa=Ha;ya=Ia;za=Da;Aa=Ja;Ba=Ka;Ca=0}}while(0);ha=ta+1|0;if((ha|0)>=(G|0)){break}else{fa=ra;ga=sa;ia=ua;ja=va;ka=wa;la=xa;ma=ya;na=za;oa=Aa;pa=Ba;qa=Ca}}N=Li(H,wa,Ca,za,Aa,Ba,xa,ya,ra,sa)|0;O=H}}while(0);c[g>>2]=O;m=N;i=h;return m|0}function Ji(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;k=Ki(a,b)|0;if((k|0)<0){l=0;i=j;return l|0}if((e|0)!=0){b=c[a+4>>2]|0;c[e>>2]=((d[b+(k+2)|0]|0)<<8|(d[b+(k+3)|0]|0))<<16>>16}if((f|0)!=0){b=c[a+4>>2]|0;c[f>>2]=((d[b+(k+4)|0]|0)<<8|(d[b+(k+5)|0]|0))<<16>>16}if((g|0)!=0){b=c[a+4>>2]|0;c[g>>2]=((d[b+(k+6)|0]|0)<<8|(d[b+(k+7)|0]|0))<<16>>16}if((h|0)==0){l=1;i=j;return l|0}b=c[a+4>>2]|0;c[h>>2]=((d[b+(k+8)|0]|0)<<8|(d[b+(k+9)|0]|0))<<16>>16;l=1;i=j;return l|0}function Ki(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;if((c[a+12>>2]|0)<=(b|0)){f=-1;i=e;return f|0}g=c[a+44>>2]|0;if((g|0)>1){f=-1;i=e;return f|0}h=c[a+24>>2]|0;j=c[a+4>>2]|0;k=c[a+16>>2]|0;if((g|0)==0){g=k+(b<<1)|0;l=((d[j+g|0]|0)<<8|(d[j+(g+1)|0]|0))<<1;m=((d[j+(g+2)|0]|0)<<8|(d[j+(g+3)|0]|0))<<1}else{g=k+(b<<2)|0;l=(d[j+(g+1)|0]|0)<<16|(d[j+g|0]|0)<<24|(d[j+(g+2)|0]|0)<<8|(d[j+(g+3)|0]|0);m=(d[j+(g+5)|0]|0)<<16|(d[j+(g+4)|0]|0)<<24|(d[j+(g+6)|0]|0)<<8|(d[j+(g+7)|0]|0)}g=l+h|0;f=(g|0)==(m+h|0)?-1:g;i=e;return f|0}function Li(c,d,e,f,g,h,j,k,l,m){c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0;n=i;o=(e|0)!=0;if((f|0)!=0){if(o){a[c+(d*10|0)+8|0]=3;b[c+(d*10|0)>>1]=(l+j|0)>>>1;b[c+(d*10|0)+2>>1]=(m+k|0)>>>1;b[c+(d*10|0)+4>>1]=l;b[c+(d*10|0)+6>>1]=m;p=d+1|0}else{p=d}a[c+(p*10|0)+8|0]=3;b[c+(p*10|0)>>1]=g;b[c+(p*10|0)+2>>1]=h;b[c+(p*10|0)+4>>1]=j;b[c+(p*10|0)+6>>1]=k;q=p+1|0;i=n;return q|0}p=d+1|0;k=c+(d*10|0)|0;j=c+(d*10|0)+8|0;if(o){a[j]=3;b[k>>1]=g;b[c+(d*10|0)+2>>1]=h;b[c+(d*10|0)+4>>1]=l;b[c+(d*10|0)+6>>1]=m;q=p;i=n;return q|0}else{a[j]=2;b[k>>1]=g;b[c+(d*10|0)+2>>1]=h;b[c+(d*10|0)+4>>1]=0;b[c+(d*10|0)+6>>1]=0;q=p;i=n;return q|0}return 0}function Mi(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;h=c[a+4>>2]|0;j=c[a+28>>2]|0;k=(d[h+(j+34)|0]|0)<<8|(d[h+(j+35)|0]|0);j=(e|0)!=0;if((k|0)>(b|0)){if(j){l=(c[a+32>>2]|0)+(b<<2)|0;c[e>>2]=((d[h+l|0]|0)<<8|(d[h+(l+1)|0]|0))<<16>>16}if((f|0)==0){i=g;return}l=(c[a+32>>2]|0)+(b<<2)|0;c[f>>2]=((d[h+(l+2)|0]|0)<<8|(d[h+(l+3)|0]|0))<<16>>16;i=g;return}else{if(j){j=(k<<2)+ -4+(c[a+32>>2]|0)|0;c[e>>2]=((d[h+j|0]|0)<<8|(d[h+(j+1)|0]|0))<<16>>16}if((f|0)==0){i=g;return}j=(b-k<<1)+(k<<2)+(c[a+32>>2]|0)|0;c[f>>2]=((d[h+j|0]|0)<<8|(d[h+(j+1)|0]|0))<<16>>16;i=g;return}}function Ni(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;if((b|0)!=0){h=c[a+4>>2]|0;j=c[a+28>>2]|0;c[b>>2]=((d[h+(j+4)|0]|0)<<8|(d[h+(j+5)|0]|0))<<16>>16}if((e|0)!=0){j=c[a+4>>2]|0;h=c[a+28>>2]|0;c[e>>2]=((d[j+(h+6)|0]|0)<<8|(d[j+(h+7)|0]|0))<<16>>16}if((f|0)==0){i=g;return}h=c[a+4>>2]|0;j=c[a+28>>2]|0;c[f>>2]=((d[h+(j+8)|0]|0)<<8|(d[h+(j+9)|0]|0))<<16>>16;i=g;return}function Oi(a,b){a=a|0;b=+b;var e=0,f=0;e=c[a+4>>2]|0;f=c[a+28>>2]|0;return+(b/+((((d[e+(f+4)|0]|0)<<8|(d[e+(f+5)|0]|0))<<16>>16)-(((d[e+(f+6)|0]|0)<<8|(d[e+(f+7)|0]|0))<<16>>16)|0))}function Pi(a,b,d,e,f,g,h,j,k,l){a=a|0;b=b|0;d=+d;e=+e;f=+f;g=+g;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0;m=i;i=i+16|0;n=m+12|0;o=m;p=m+4|0;q=m+8|0;if((Ji(a,b,n,o,p,q)|0)==0){c[q>>2]=0;c[p>>2]=0;c[o>>2]=0;c[n>>2]=0}if((h|0)!=0){c[h>>2]=~~+T(+(+(c[n>>2]|0)*d+f))}if((j|0)!=0){c[j>>2]=0-~~+ea(+(+(c[q>>2]|0)*e+g))}if((k|0)!=0){c[k>>2]=~~+ea(+(+(c[p>>2]|0)*d+f))}if((l|0)==0){i=m;return}c[l>>2]=0-~~+T(+(+(c[o>>2]|0)*e+g));i=m;return}function Qi(e,f,h,j,k,l){e=e|0;f=f|0;h=+h;j=j|0;k=k|0;l=l|0;var m=0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0,A=0,B=0,C=0.0,D=0.0,E=0,F=0,G=0.0,H=0.0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0,P=0,Q=0,R=0,S=0;l=i;i=i+16|0;m=l;c[m>>2]=0;n=h*h;o=(f|0)>0;if(o){p=0;q=0}else{c[k>>2]=0;r=0;i=l;return r|0}do{q=((a[e+(p*10|0)+8|0]|0)==1)+q|0;p=p+1|0}while((p|0)!=(f|0));c[k>>2]=q;if((q|0)==0){r=0;i=l;return r|0}p=rs(q<<2)|0;c[j>>2]=p;if((p|0)==0){c[k>>2]=0;r=0;i=l;return r|0}else{s=p;t=0;u=0;v=0}while(1){if((t|0)==1){p=rs(c[m>>2]<<3)|0;if((p|0)==0){break}else{w=p}}else{w=u}c[m>>2]=0;if(o){if((w|0)==0){p=0;q=-1;x=v;h=0.0;y=0.0;while(1){z=e+(p*10|0)|0;A=d[e+(p*10|0)+8|0]|0;if((A|0)==1){if((q|0)>-1){c[(c[j>>2]|0)+(q<<2)>>2]=(c[m>>2]|0)-x}B=c[m>>2]|0;C=+(b[z>>1]|0);D=+(b[e+(p*10|0)+2>>1]|0);c[m>>2]=B+1;E=q+1|0;F=B;G=C;H=D}else if((A|0)==3){B=e+(p*10|0)+2|0;Ri(0,m,h,y,+(b[e+(p*10|0)+4>>1]|0),+(b[e+(p*10|0)+6>>1]|0),+(b[z>>1]|0),+(b[B>>1]|0),n,0);E=q;F=x;G=+(b[z>>1]|0);H=+(b[B>>1]|0)}else if((A|0)==2){D=+(b[z>>1]|0);C=+(b[e+(p*10|0)+2>>1]|0);c[m>>2]=(c[m>>2]|0)+1;E=q;F=x;G=D;H=C}else{E=q;F=x;G=h;H=y}z=p+1|0;if((z|0)==(f|0)){I=F;J=E;break}else{p=z;q=E;x=F;h=G;y=H}}}else{x=0;q=-1;p=v;y=0.0;h=0.0;while(1){z=e+(x*10|0)|0;A=d[e+(x*10|0)+8|0]|0;if((A|0)==1){if((q|0)>-1){c[(c[j>>2]|0)+(q<<2)>>2]=(c[m>>2]|0)-p}B=c[m>>2]|0;C=+(b[z>>1]|0);D=+(b[e+(x*10|0)+2>>1]|0);c[m>>2]=B+1;g[w+(B<<3)>>2]=C;g[w+(B<<3)+4>>2]=D;K=q+1|0;L=B;M=C;N=D}else if((A|0)==2){D=+(b[z>>1]|0);C=+(b[e+(x*10|0)+2>>1]|0);B=c[m>>2]|0;c[m>>2]=B+1;g[w+(B<<3)>>2]=D;g[w+(B<<3)+4>>2]=C;K=q;L=p;M=D;N=C}else if((A|0)==3){A=e+(x*10|0)+2|0;Ri(w,m,y,h,+(b[e+(x*10|0)+4>>1]|0),+(b[e+(x*10|0)+6>>1]|0),+(b[z>>1]|0),+(b[A>>1]|0),n,0);K=q;L=p;M=+(b[z>>1]|0);N=+(b[A>>1]|0)}else{K=q;L=p;M=y;N=h}A=x+1|0;if((A|0)==(f|0)){I=L;J=K;break}else{x=A;q=K;p=L;y=M;h=N}}}O=c[m>>2]|0;P=c[j>>2]|0;Q=J;R=I}else{O=0;P=s;Q=-1;R=v}c[P+(Q<<2)>>2]=O-R;p=t+1|0;if((p|0)<2){s=P;t=p;u=w;v=R}else{r=w;S=28;break}}if((S|0)==28){i=l;return r|0}ss(c[j>>2]|0);c[j>>2]=0;c[k>>2]=0;r=0;i=l;return r|0}function Ri(a,b,d,e,f,h,j,k,l,m){a=a|0;b=b|0;d=+d;e=+e;f=+f;h=+h;j=+j;k=+k;l=+l;m=m|0;var n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0,y=0.0,z=0.0;n=i;o=(f*2.0+d+j)*.25;p=(h*2.0+e+k)*.25;if((m|0)>16){i=n;return}q=(j+d)*.5-o;r=(k+e)*.5-p;s=o;o=p;t=m;p=d;d=f;f=e;e=h;while(1){if(!(q*q+r*r>l)){break}m=t+1|0;Ri(a,b,p,f,(p+d)*.5,(f+e)*.5,s,o,l,m);h=(d+j)*.5;u=(e+k)*.5;v=(s+h*2.0+j)*.25;w=(o+u*2.0+k)*.25;if((t|0)>15){x=8;break}else{y=o;z=s;q=(s+j)*.5-v;r=(o+k)*.5-w;s=v;o=w;t=m;d=h;e=u;f=y;p=z}}if((x|0)==8){i=n;return}x=c[b>>2]|0;if((a|0)!=0){g[a+(x<<3)>>2]=j;g[a+(x<<3)+4>>2]=k}c[b>>2]=x+1;i=n;return}function Si(b,e,f,h,j,k,l,m,n,o,p,q){b=b|0;e=+e;f=f|0;h=h|0;j=+j;k=+k;l=+l;m=+m;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,ga=0,ha=0;q=i;i=i+528|0;r=q+8|0;s=q+16|0;t=q+4|0;u=q;v=Qi(f,h,e/(j>k?k:j),u,t,0)|0;if((v|0)==0){i=q;return}h=c[u>>2]|0;f=c[t>>2]|0;t=(p|0)!=0;if(t){w=-k}else{w=k}p=b+4|0;x=(c[p>>2]|0)<8?15:5;y=(f|0)>0;if(y){z=0;A=0;do{A=(c[h+(z<<2)>>2]|0)+A|0;z=z+1|0}while((z|0)!=(f|0));B=(A*20|0)+20|0}else{B=20}A=rs(B)|0;if((A|0)==0){C=h}else{if(y){k=+(x|0);y=0;B=0;z=0;while(1){D=c[h+(y<<2)>>2]|0;E=D+B|0;if((D|0)>0){F=D+ -1|0;G=0;H=z;while(1){e=+g[v+(F+B<<3)+4>>2];I=+g[v+(G+B<<3)+4>>2];if(e==I){J=H}else{K=A+(H*20|0)+16|0;c[K>>2]=0;if(t){if(e>I){L=16}else{M=G;N=F}}else{if(e<I){L=16}else{M=G;N=F}}if((L|0)==16){L=0;c[K>>2]=1;M=F;N=G}K=M+B|0;g[A+(H*20|0)>>2]=+g[v+(K<<3)>>2]*j+l;g[A+(H*20|0)+4>>2]=k*w*+g[v+(K<<3)+4>>2]+m;K=N+B|0;g[A+(H*20|0)+8>>2]=+g[v+(K<<3)>>2]*j+l;g[A+(H*20|0)+12>>2]=k*w*+g[v+(K<<3)+4>>2]+m;J=H+1|0}K=G+1|0;if((K|0)==(D|0)){O=J;break}else{P=G;G=K;H=J;F=P}}}else{O=z}F=y+1|0;if((F|0)==(f|0)){Q=O;break}else{y=F;B=E;z=O}}}else{Q=0}Rr(A,Q,20,17);c[r>>2]=0;O=255/(x>>>0)|0;z=c[b>>2]|0;if((z|0)>512){R=rs(z)|0}else{R=s}B=c[p>>2]|0;g[A+(Q*20|0)+4>>2]=+(x|0)*+(B+o|0)+1.0;if((B|0)>0){B=b+12|0;Q=b+8|0;y=n<<10;n=A;f=0;J=z;z=0;N=fa(x,o)|0;while(1){Us(R|0,0,J|0)|0;o=n;S=f;M=0;L=N;while(1){m=+(L|0)+.5;a:do{if((S|0)==0){U=0;V=r}else{t=S;h=r;while(1){F=t;while(1){if(!(+g[F+8>>2]<=m)){break}c[h>>2]=c[F+12>>2];ss(F);H=c[h>>2]|0;if((H|0)==0){U=0;V=r;break a}else{F=H}}c[F>>2]=(c[F>>2]|0)+(c[F+4>>2]|0);H=F+12|0;G=c[H>>2]|0;if((G|0)==0){U=0;V=r;break}else{t=G;h=H}}}}while(0);while(1){h=c[V>>2]|0;if((h|0)!=0?(t=h+12|0,H=c[t>>2]|0,(H|0)!=0):0){if((c[h>>2]|0)>(c[H>>2]|0)){G=H+12|0;c[t>>2]=c[G>>2];c[G>>2]=h;c[V>>2]=H;W=H;X=1}else{W=h;X=U}U=X;V=W+12|0;continue}if((U|0)==0){break}else{U=0;V=r}}h=o+4|0;if(!(+g[h>>2]<=m)){Y=o}else{H=o;G=h;while(1){h=H+12|0;do{if(+g[h>>2]>m){t=rs(20)|0;w=+g[H>>2];k=+g[h>>2];l=+g[G>>2];j=(+g[H+8>>2]-w)/(k-l);if((t|0)==0){Z=0}else{if(j<0.0){c[t+4>>2]=0-~~+T(+(j*-1024.0))}else{c[t+4>>2]=~~+T(+(j*1024.0))}D=~~+T(+((w+j*(m-l))*1024.0))-y|0;c[t>>2]=D;g[t+8>>2]=k;c[t+12>>2]=0;c[t+16>>2]=(c[H+16>>2]|0)!=0?1:-1;Z=D}D=c[r>>2]|0;if((D|0)==0){c[r>>2]=t;break}if((Z|0)<(c[D>>2]|0)){c[t+12>>2]=D;c[r>>2]=t;break}else{_=D}while(1){$=_+12|0;D=c[$>>2]|0;if((D|0)==0){aa=0;break}if((c[D>>2]|0)<(Z|0)){_=D}else{aa=D;break}}c[t+12>>2]=aa;c[$>>2]=t}}while(0);h=H+20|0;F=H+24|0;if(!(+g[F>>2]<=m)){Y=h;break}else{H=h;G=F}}}S=c[r>>2]|0;ba=(S|0)==0;if(!ba){G=c[b>>2]|0;H=S;F=0;h=0;while(1){D=c[H>>2]|0;P=(c[H+16>>2]|0)+F|0;do{if((F|0)!=0){if((P|0)==0?(K=h>>10,ca=D>>10,(K|0)<(G|0)&(ca|0)>-1):0){if((K|0)==(ca|0)){da=R+K|0;a[da]=(d[da]|0)+((fa(D-h|0,O)|0)>>>10);ea=h;break}if((K|0)>-1){da=R+K|0;a[da]=(d[da]|0)+((fa(1024-(h&1023)|0,O)|0)>>>10);ga=K+1|0}else{ga=0}if((ca|0)<(G|0)){K=R+ca|0;a[K]=(d[K]|0)+((fa(D&1023,O)|0)>>>10);ha=ca}else{ha=G}if((ga|0)<(ha|0)){ca=ga;while(1){K=R+ca|0;a[K]=(d[K]|0)+O;K=ca+1|0;if((K|0)==(ha|0)){ea=h;break}else{ca=K}}}else{ea=h}}else{ea=h}}else{ea=D}}while(0);D=c[H+12>>2]|0;if((D|0)==0){break}else{H=D;F=P;h=ea}}}M=M+1|0;if((M|0)==(x|0)){break}else{o=Y;L=L+1|0}}Ss((c[B>>2]|0)+(fa(c[Q>>2]|0,z)|0)|0,R|0,c[b>>2]|0)|0;L=z+1|0;if((L|0)>=(c[p>>2]|0)){break}n=Y;f=S;J=c[b>>2]|0;z=L;N=N+x|0}if(!ba){ba=S;while(1){S=c[ba+12>>2]|0;ss(ba);if((S|0)==0){break}else{ba=S}}c[r>>2]=0}}if((R|0)!=(s|0)){ss(R)}ss(A);C=c[u>>2]|0}ss(C);ss(v);i=q;return}function Ti(a,b,d,e,f,g,h,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;h=+h;j=+j;k=+k;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0;m=i;i=i+48|0;n=m+32|0;o=m;p=m+4|0;q=m+8|0;r=m+12|0;s=m+16|0;t=Ii(a,l,r)|0;if((Ji(a,l,n,o,p,q)|0)==0){c[q>>2]=0;c[p>>2]=0;c[o>>2]=0;c[n>>2]=0;u=0.0;v=0.0}else{u=+(c[n>>2]|0);v=+(c[q>>2]|0)}c[s+12>>2]=b;c[s>>2]=d;c[s+4>>2]=e;c[s+8>>2]=f;if((d|0)==0|(e|0)==0){w=c[r>>2]|0;ss(w);i=m;return}e=0-~~+ea(+(v*h+k))|0;d=~~+T(+(u*g+j));Si(s,.3499999940395355,c[r>>2]|0,t,g,h,j,k,d,e,1,0);w=c[r>>2]|0;ss(w);i=m;return}function Ui(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0;c=i;d=+g[a+4>>2];e=+g[b+4>>2];if(d<e){f=-1;i=c;return f|0}f=d>e|0;i=c;return f|0}function Vi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;b=i;i=i+16|0;d=b;e=c[s>>2]|0;pj(8960,e,9016);c[2062]=10388;c[8256>>2]=10408;c[8252>>2]=0;tk(8256|0,8960);c[8328>>2]=0;c[8332>>2]=-1;f=c[t>>2]|0;c[2266]=10256;Cp(9068|0);c[9072>>2]=0;c[9076>>2]=0;c[9080>>2]=0;c[9084>>2]=0;c[9088>>2]=0;c[9092>>2]=0;c[2266]=9576;c[9096>>2]=f;Dp(d,9068|0);g=Fp(d,13128)|0;Ep(d);c[9100>>2]=g;c[9104>>2]=9024;a[9108|0]=(Fd[c[(c[g>>2]|0)+28>>2]&127](g)|0)&1;c[2084]=10468;c[8340>>2]=10488;tk(8340|0,9064);c[8412>>2]=0;c[8416>>2]=-1;g=c[r>>2]|0;c[2278]=10256;Cp(9116|0);c[9120>>2]=0;c[9124>>2]=0;c[9128>>2]=0;c[9132>>2]=0;c[9136>>2]=0;c[9140>>2]=0;c[2278]=9576;c[9144>>2]=g;Dp(d,9116|0);h=Fp(d,13128)|0;Ep(d);c[9148>>2]=h;c[9152>>2]=9032;a[9156|0]=(Fd[c[(c[h>>2]|0)+28>>2]&127](h)|0)&1;c[2106]=10468;c[8428>>2]=10488;tk(8428|0,9112);c[8500>>2]=0;c[8504>>2]=-1;h=c[(c[(c[2106]|0)+ -12>>2]|0)+8448>>2]|0;c[2128]=10468;c[8516>>2]=10488;tk(8516|0,h);c[8588>>2]=0;c[8592>>2]=-1;c[(c[(c[2062]|0)+ -12>>2]|0)+8320>>2]=8336;h=(c[(c[2106]|0)+ -12>>2]|0)+8428|0;c[h>>2]=c[h>>2]|8192;c[(c[(c[2106]|0)+ -12>>2]|0)+8496>>2]=8336;bj(9160,e,9040|0);c[2150]=10428;c[8608>>2]=10448;c[8604>>2]=0;tk(8608|0,9160);c[8680>>2]=0;c[8684>>2]=-1;c[2304]=10320;Cp(9220|0);c[9224>>2]=0;c[9228>>2]=0;c[9232>>2]=0;c[9236>>2]=0;c[9240>>2]=0;c[9244>>2]=0;c[2304]=9320;c[9248>>2]=f;Dp(d,9220|0);f=Fp(d,13136)|0;Ep(d);c[9252>>2]=f;c[9256>>2]=9048;a[9260|0]=(Fd[c[(c[f>>2]|0)+28>>2]&127](f)|0)&1;c[2172]=10508;c[8692>>2]=10528;tk(8692|0,9216);c[8764>>2]=0;c[8768>>2]=-1;c[2316]=10320;Cp(9268|0);c[9272>>2]=0;c[9276>>2]=0;c[9280>>2]=0;c[9284>>2]=0;c[9288>>2]=0;c[9292>>2]=0;c[2316]=9320;c[9296>>2]=g;Dp(d,9268|0);g=Fp(d,13136)|0;Ep(d);c[9300>>2]=g;c[9304>>2]=9056;a[9308|0]=(Fd[c[(c[g>>2]|0)+28>>2]&127](g)|0)&1;c[2194]=10508;c[8780>>2]=10528;tk(8780|0,9264);c[8852>>2]=0;c[8856>>2]=-1;g=c[(c[(c[2194]|0)+ -12>>2]|0)+8800>>2]|0;c[2216]=10508;c[8868>>2]=10528;tk(8868|0,g);c[8940>>2]=0;c[8944>>2]=-1;c[(c[(c[2150]|0)+ -12>>2]|0)+8672>>2]=8688;g=(c[(c[2194]|0)+ -12>>2]|0)+8780|0;c[g>>2]=c[g>>2]|8192;c[(c[(c[2194]|0)+ -12>>2]|0)+8848>>2]=8688;i=b;return}function Wi(a){a=a|0;a=i;$k(8336)|0;$k(8512)|0;gl(8688)|0;gl(8864)|0;i=a;return}function Xi(a){a=a|0;var b=0;b=i;c[a>>2]=10320;Ep(a+4|0);i=b;return}function Yi(a){a=a|0;var b=0;b=i;c[a>>2]=10320;Ep(a+4|0);ys(a);i=b;return}function Zi(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;Fd[c[(c[b>>2]|0)+24>>2]&127](b)|0;f=Fp(d,13136)|0;c[b+36>>2]=f;a[b+44|0]=(Fd[c[(c[f>>2]|0)+28>>2]&127](f)|0)&1;i=e;return}function _i(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b+8|0;e=b;f=a+36|0;g=a+40|0;h=d+8|0;j=d;k=a+32|0;while(1){a=c[f>>2]|0;l=Hd[c[(c[a>>2]|0)+20>>2]&15](a,c[g>>2]|0,d,h,e)|0;a=(c[e>>2]|0)-j|0;if((Wb(d|0,1,a|0,c[k>>2]|0)|0)!=(a|0)){m=-1;n=5;break}if((l|0)==2){m=-1;n=5;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((ld(c[k>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==5){i=b;return m|0}return 0}function $i(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;a:do{if((a[b+44|0]|0)==0){if((e|0)>0){g=d;h=0;while(1){if((Sd[c[(c[b>>2]|0)+52>>2]&31](b,c[g>>2]|0)|0)==-1){j=h;break a}k=h+1|0;if((k|0)<(e|0)){g=g+4|0;h=k}else{j=k;break}}}else{j=0}}else{j=Wb(d|0,4,e|0,c[b+32>>2]|0)|0}}while(0);i=f;return j|0}function aj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+4|0;j=e+8|0;k=(d|0)==-1;a:do{if(!k){c[g>>2]=d;if((a[b+44|0]|0)!=0){if((Wb(g|0,4,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}c[h>>2]=f;m=g+4|0;n=b+36|0;o=b+40|0;p=f+8|0;q=f;r=b+32|0;s=g;while(1){t=c[n>>2]|0;u=Wd[c[(c[t>>2]|0)+12>>2]&15](t,c[o>>2]|0,s,m,j,f,p,h)|0;if((c[j>>2]|0)==(s|0)){l=-1;v=12;break}if((u|0)==3){v=7;break}t=(u|0)==1;if(!(u>>>0<2)){l=-1;v=12;break}u=(c[h>>2]|0)-q|0;if((Wb(f|0,1,u|0,c[r>>2]|0)|0)!=(u|0)){l=-1;v=12;break}if(t){s=t?c[j>>2]|0:s}else{break a}}if((v|0)==7){if((Wb(s|0,1,1,c[r>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((v|0)==12){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function bj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f;c[b>>2]=10320;h=b+4|0;Cp(h);j=b+8|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;c[j+20>>2]=0;c[b>>2]=9432;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;Dp(g,h);h=Fp(g,13136)|0;e=b+36|0;c[e>>2]=h;d=b+44|0;c[d>>2]=Fd[c[(c[h>>2]|0)+24>>2]&127](h)|0;h=c[e>>2]|0;a[b+53|0]=(Fd[c[(c[h>>2]|0)+28>>2]&127](h)|0)&1;if((c[d>>2]|0)>8){Po(9528)}else{Ep(g);i=f;return}}function cj(a){a=a|0;var b=0;b=i;c[a>>2]=10320;Ep(a+4|0);i=b;return}function dj(a){a=a|0;var b=0;b=i;c[a>>2]=10320;Ep(a+4|0);ys(a);i=b;return}function ej(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=Fp(d,13136)|0;d=b+36|0;c[d>>2]=f;g=b+44|0;c[g>>2]=Fd[c[(c[f>>2]|0)+24>>2]&127](f)|0;f=c[d>>2]|0;a[b+53|0]=(Fd[c[(c[f>>2]|0)+28>>2]&127](f)|0)&1;if((c[g>>2]|0)>8){Po(9528)}else{i=e;return}}function fj(a){a=a|0;var b=0,c=0;b=i;c=ij(a,0)|0;i=b;return c|0}function gj(a){a=a|0;var b=0,c=0;b=i;c=ij(a,1)|0;i=b;return c|0}function hj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+4|0;j=e+8|0;k=b+52|0;l=(a[k]|0)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;a:do{if(l){c[h>>2]=c[n>>2];o=c[b+36>>2]|0;p=Wd[c[(c[o>>2]|0)+12>>2]&15](o,c[b+40>>2]|0,h,h+4|0,j,f,f+8|0,g)|0;if((p|0)==1|(p|0)==2){m=-1;i=e;return m|0}else if((p|0)==3){a[f]=c[n>>2];c[g>>2]=f+1}p=b+32|0;while(1){o=c[g>>2]|0;if(!(o>>>0>f>>>0)){break a}q=o+ -1|0;c[g>>2]=q;if((Sc(a[q]|0,c[p>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function ij(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+4|0;j=e+8|0;k=b+52|0;if((a[k]|0)!=0){l=b+48|0;m=c[l>>2]|0;if(!d){n=m;i=e;return n|0}c[l>>2]=-1;a[k]=0;n=m;i=e;return n|0}m=c[b+44>>2]|0;k=(m|0)>1?m:1;a:do{if((k|0)>0){m=b+32|0;l=0;while(1){o=Dc(c[m>>2]|0)|0;if((o|0)==-1){n=-1;break}a[f+l|0]=o;l=l+1|0;if((l|0)>=(k|0)){break a}}i=e;return n|0}}while(0);b:do{if((a[b+53|0]|0)==0){l=b+40|0;m=b+36|0;o=g+4|0;p=b+32|0;q=k;while(1){r=c[l>>2]|0;s=r;t=c[s>>2]|0;u=c[s+4>>2]|0;s=c[m>>2]|0;v=f+q|0;w=Wd[c[(c[s>>2]|0)+16>>2]&15](s,r,f,v,h,g,o,j)|0;if((w|0)==2){n=-1;x=22;break}else if((w|0)==3){x=14;break}else if((w|0)!=1){y=q;break b}w=c[l>>2]|0;c[w>>2]=t;c[w+4>>2]=u;if((q|0)==8){n=-1;x=22;break}u=Dc(c[p>>2]|0)|0;if((u|0)==-1){n=-1;x=22;break}a[v]=u;q=q+1|0}if((x|0)==14){c[g>>2]=a[f]|0;y=q;break}else if((x|0)==22){i=e;return n|0}}else{c[g>>2]=a[f]|0;y=k}}while(0);if(d){d=c[g>>2]|0;c[b+48>>2]=d;n=d;i=e;return n|0}d=b+32|0;b=y;while(1){if((b|0)<=0){break}y=b+ -1|0;if((Sc(a[f+y|0]|0,c[d>>2]|0)|0)==-1){n=-1;x=22;break}else{b=y}}if((x|0)==22){i=e;return n|0}n=c[g>>2]|0;i=e;return n|0}function jj(a){a=a|0;var b=0;b=i;c[a>>2]=10256;Ep(a+4|0);i=b;return}function kj(a){a=a|0;var b=0;b=i;c[a>>2]=10256;Ep(a+4|0);ys(a);i=b;return}function lj(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;Fd[c[(c[b>>2]|0)+24>>2]&127](b)|0;f=Fp(d,13128)|0;c[b+36>>2]=f;a[b+44|0]=(Fd[c[(c[f>>2]|0)+28>>2]&127](f)|0)&1;i=e;return}function mj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b+8|0;e=b;f=a+36|0;g=a+40|0;h=d+8|0;j=d;k=a+32|0;while(1){a=c[f>>2]|0;l=Hd[c[(c[a>>2]|0)+20>>2]&15](a,c[g>>2]|0,d,h,e)|0;a=(c[e>>2]|0)-j|0;if((Wb(d|0,1,a|0,c[k>>2]|0)|0)!=(a|0)){m=-1;n=5;break}if((l|0)==2){m=-1;n=5;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((ld(c[k>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==5){i=b;return m|0}return 0}function nj(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;if((a[b+44|0]|0)!=0){h=Wb(e|0,1,f|0,c[b+32>>2]|0)|0;i=g;return h|0}if((f|0)>0){j=e;k=0}else{h=0;i=g;return h|0}while(1){if((Sd[c[(c[b>>2]|0)+52>>2]&31](b,d[j]|0)|0)==-1){h=k;l=6;break}e=k+1|0;if((e|0)<(f|0)){j=j+1|0;k=e}else{h=e;l=6;break}}if((l|0)==6){i=g;return h|0}return 0}function oj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+32|0;f=e+16|0;g=e+8|0;h=e;j=e+4|0;k=(d|0)==-1;a:do{if(!k){a[g]=d;if((a[b+44|0]|0)!=0){if((Wb(g|0,1,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}c[h>>2]=f;m=g+1|0;n=b+36|0;o=b+40|0;p=f+8|0;q=f;r=b+32|0;s=g;while(1){t=c[n>>2]|0;u=Wd[c[(c[t>>2]|0)+12>>2]&15](t,c[o>>2]|0,s,m,j,f,p,h)|0;if((c[j>>2]|0)==(s|0)){l=-1;v=12;break}if((u|0)==3){v=7;break}t=(u|0)==1;if(!(u>>>0<2)){l=-1;v=12;break}u=(c[h>>2]|0)-q|0;if((Wb(f|0,1,u|0,c[r>>2]|0)|0)!=(u|0)){l=-1;v=12;break}if(t){s=t?c[j>>2]|0:s}else{break a}}if((v|0)==7){if((Wb(s|0,1,1,c[r>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((v|0)==12){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function pj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f;c[b>>2]=10256;h=b+4|0;Cp(h);j=b+8|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;c[j+20>>2]=0;c[b>>2]=9688;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;Dp(g,h);h=Fp(g,13128)|0;e=b+36|0;c[e>>2]=h;d=b+44|0;c[d>>2]=Fd[c[(c[h>>2]|0)+24>>2]&127](h)|0;h=c[e>>2]|0;a[b+53|0]=(Fd[c[(c[h>>2]|0)+28>>2]&127](h)|0)&1;if((c[d>>2]|0)>8){Po(9528)}else{Ep(g);i=f;return}}function qj(a){a=a|0;var b=0;b=i;c[a>>2]=10256;Ep(a+4|0);i=b;return}function rj(a){a=a|0;var b=0;b=i;c[a>>2]=10256;Ep(a+4|0);ys(a);i=b;return}function sj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=Fp(d,13128)|0;d=b+36|0;c[d>>2]=f;g=b+44|0;c[g>>2]=Fd[c[(c[f>>2]|0)+24>>2]&127](f)|0;f=c[d>>2]|0;a[b+53|0]=(Fd[c[(c[f>>2]|0)+28>>2]&127](f)|0)&1;if((c[g>>2]|0)>8){Po(9528)}else{i=e;return}}function tj(a){a=a|0;var b=0,c=0;b=i;c=wj(a,0)|0;i=b;return c|0}function uj(a){a=a|0;var b=0,c=0;b=i;c=wj(a,1)|0;i=b;return c|0}function vj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+8|0;j=e+4|0;k=b+52|0;l=(a[k]|0)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;a:do{if(l){a[h]=c[n>>2];o=c[b+36>>2]|0;p=Wd[c[(c[o>>2]|0)+12>>2]&15](o,c[b+40>>2]|0,h,h+1|0,j,f,f+8|0,g)|0;if((p|0)==1|(p|0)==2){m=-1;i=e;return m|0}else if((p|0)==3){a[f]=c[n>>2];c[g>>2]=f+1}p=b+32|0;while(1){o=c[g>>2]|0;if(!(o>>>0>f>>>0)){break a}q=o+ -1|0;c[g>>2]=q;if((Sc(a[q]|0,c[p>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function wj(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+32|0;g=f+16|0;h=f+8|0;j=f;k=f+4|0;l=b+52|0;if((a[l]|0)!=0){m=b+48|0;n=c[m>>2]|0;if(!e){o=n;i=f;return o|0}c[m>>2]=-1;a[l]=0;o=n;i=f;return o|0}n=c[b+44>>2]|0;l=(n|0)>1?n:1;a:do{if((l|0)>0){n=b+32|0;m=0;while(1){p=Dc(c[n>>2]|0)|0;if((p|0)==-1){o=-1;break}a[g+m|0]=p;m=m+1|0;if((m|0)>=(l|0)){break a}}i=f;return o|0}}while(0);b:do{if((a[b+53|0]|0)==0){m=b+40|0;n=b+36|0;p=h+1|0;q=b+32|0;r=l;while(1){s=c[m>>2]|0;t=s;u=c[t>>2]|0;v=c[t+4>>2]|0;t=c[n>>2]|0;w=g+r|0;x=Wd[c[(c[t>>2]|0)+16>>2]&15](t,s,g,w,j,h,p,k)|0;if((x|0)==3){y=14;break}else if((x|0)==2){o=-1;y=23;break}else if((x|0)!=1){z=r;break b}x=c[m>>2]|0;c[x>>2]=u;c[x+4>>2]=v;if((r|0)==8){o=-1;y=23;break}v=Dc(c[q>>2]|0)|0;if((v|0)==-1){o=-1;y=23;break}a[w]=v;r=r+1|0}if((y|0)==14){a[h]=a[g]|0;z=r;break}else if((y|0)==23){i=f;return o|0}}else{a[h]=a[g]|0;z=l}}while(0);do{if(!e){l=b+32|0;k=z;while(1){if((k|0)<=0){y=21;break}j=k+ -1|0;if((Sc(d[g+j|0]|0,c[l>>2]|0)|0)==-1){o=-1;y=23;break}else{k=j}}if((y|0)==21){A=a[h]|0;break}else if((y|0)==23){i=f;return o|0}}else{k=a[h]|0;c[b+48>>2]=k&255;A=k}}while(0);o=A&255;i=f;return o|0}function xj(){var a=0;a=i;Vi(0);hd(160,8952,q|0)|0;i=a;return}function yj(a){a=a|0;return}function zj(a){a=a|0;var b=0;b=a+4|0;c[b>>2]=(c[b>>2]|0)+1;return}function Aj(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=a+4|0;e=c[d>>2]|0;c[d>>2]=e+ -1;if((e|0)!=0){f=0;i=b;return f|0}Dd[c[(c[a>>2]|0)+8>>2]&255](a);f=1;i=b;return f|0}function Bj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;c[a>>2]=9832;e=Ws(b|0)|0;f=xs(e+13|0)|0;c[f+4>>2]=e;c[f>>2]=e;g=f+12|0;c[a+4>>2]=g;c[f+8>>2]=0;Ss(g|0,b|0,e+1|0)|0;i=d;return}function Cj(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;c[a>>2]=9832;d=a+4|0;e=(c[d>>2]|0)+ -4|0;f=c[e>>2]|0;c[e>>2]=f+ -1;if((f+ -1|0)<0){zs((c[d>>2]|0)+ -12|0)}nb(a|0);ys(a);i=b;return}function Dj(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;c[a>>2]=9832;d=a+4|0;e=(c[d>>2]|0)+ -4|0;f=c[e>>2]|0;c[e>>2]=f+ -1;if((f+ -1|0)>=0){nb(a|0);i=b;return}zs((c[d>>2]|0)+ -12|0);nb(a|0);i=b;return}function Ej(a){a=a|0;return c[a+4>>2]|0}function Fj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;c[b>>2]=9856;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=Ws(f|0)|0;g=xs(d+13|0)|0;c[g+4>>2]=d;c[g>>2]=d;h=g+12|0;c[b+4>>2]=h;c[g+8>>2]=0;Ss(h|0,f|0,d+1|0)|0;i=e;return}function Gj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;c[a>>2]=9856;e=Ws(b|0)|0;f=xs(e+13|0)|0;c[f+4>>2]=e;c[f>>2]=e;g=f+12|0;c[a+4>>2]=g;c[f+8>>2]=0;Ss(g|0,b|0,e+1|0)|0;i=d;return}function Hj(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;c[a>>2]=9856;d=a+4|0;e=(c[d>>2]|0)+ -4|0;f=c[e>>2]|0;c[e>>2]=f+ -1;if((f+ -1|0)<0){zs((c[d>>2]|0)+ -12|0)}nb(a|0);ys(a);i=b;return}function Ij(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;c[a>>2]=9856;d=a+4|0;e=(c[d>>2]|0)+ -4|0;f=c[e>>2]|0;c[e>>2]=f+ -1;if((f+ -1|0)>=0){nb(a|0);i=b;return}zs((c[d>>2]|0)+ -12|0);nb(a|0);i=b;return}function Jj(a){a=a|0;return c[a+4>>2]|0}function Kj(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;c[a>>2]=9832;d=a+4|0;e=(c[d>>2]|0)+ -4|0;f=c[e>>2]|0;c[e>>2]=f+ -1;if((f+ -1|0)<0){zs((c[d>>2]|0)+ -12|0)}nb(a|0);ys(a);i=b;return}function Lj(a){a=a|0;return}function Mj(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;return}function Nj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e;Ud[c[(c[a>>2]|0)+12>>2]&3](f,a,b);if((c[f+4>>2]|0)!=(c[d+4>>2]|0)){g=0;i=e;return g|0}g=(c[f>>2]|0)==(c[d>>2]|0);i=e;return g|0}function Oj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;if((c[b+4>>2]|0)!=(a|0)){f=0;i=e;return f|0}f=(c[b>>2]|0)==(d|0);i=e;return f|0}function Pj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;d=i;f=xd(e|0)|0;e=Ws(f|0)|0;if(e>>>0>4294967279){Vj(0)}if(e>>>0<11){a[b]=e<<1;g=b+1|0;Ss(g|0,f|0,e|0)|0;h=g+e|0;a[h]=0;i=d;return}else{j=e+16&-16;k=ws(j)|0;c[b+8>>2]=k;c[b>>2]=j|1;c[b+4>>2]=e;g=k;Ss(g|0,f|0,e|0)|0;h=g+e|0;a[h]=0;i=d;return}}function Qj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=f;h=c[d>>2]|0;if((h|0)!=0){j=a[e]|0;if((j&1)==0){k=(j&255)>>>1}else{k=c[e+4>>2]|0}if((k|0)==0){l=h}else{ek(e,10008,2)|0;l=c[d>>2]|0}h=c[d+4>>2]|0;Ud[c[(c[h>>2]|0)+24>>2]&3](g,h,l);l=a[g]|0;if((l&1)==0){m=g+1|0;n=(l&255)>>>1}else{m=c[g+8>>2]|0;n=c[g+4>>2]|0}ek(e,m,n)|0;if(!((a[g]&1)==0)){ys(c[g+8>>2]|0)}}c[b+0>>2]=c[e+0>>2];c[b+4>>2]=c[e+4>>2];c[b+8>>2]=c[e+8>>2];c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;i=f;return}function Rj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f+12|0;h=f;j=Ws(e|0)|0;if(j>>>0>4294967279){Vj(0)}if(j>>>0<11){a[h]=j<<1;k=h+1|0}else{l=j+16&-16;m=ws(l)|0;c[h+8>>2]=m;c[h>>2]=l|1;c[h+4>>2]=j;k=m}Ss(k|0,e|0,j|0)|0;a[k+j|0]=0;Qj(g,d,h);Fj(b,g);if(!((a[g]&1)==0)){ys(c[g+8>>2]|0)}if(!((a[h]&1)==0)){ys(c[h+8>>2]|0)}c[b>>2]=10024;h=d;d=c[h+4>>2]|0;g=b+8|0;c[g>>2]=c[h>>2];c[g+4>>2]=d;i=f;return}function Sj(a){a=a|0;var b=0;b=i;Ij(a);ys(a);i=b;return}function Tj(a){a=a|0;var b=0;b=i;Ij(a);i=b;return}function Uj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;Yb(10160)|0;if((c[a>>2]|0)==1){do{Nc(10184,10160)|0}while((c[a>>2]|0)==1)}if((c[a>>2]|0)==0){c[a>>2]=1;id(10160)|0;Dd[d&255](b);Yb(10160)|0;c[a>>2]=-1;id(10160)|0;Bc(10184)|0;i=e;return}else{id(10160)|0;i=e;return}}function Vj(a){a=a|0;a=fc(8)|0;Bj(a,10232);c[a>>2]=9912;td(a|0,9952,49)}function Wj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;if((a[d]&1)==0){c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];i=e;return}f=c[d+8>>2]|0;g=c[d+4>>2]|0;if(g>>>0>4294967279){Vj(0)}if(g>>>0<11){a[b]=g<<1;h=b+1|0}else{d=g+16&-16;j=ws(d)|0;c[b+8>>2]=j;c[b>>2]=d|1;c[b+4>>2]=g;h=j}Ss(h|0,f|0,g|0)|0;a[h+g|0]=0;i=e;return}function Xj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;if(e>>>0>4294967279){Vj(0)}if(e>>>0<11){a[b]=e<<1;g=b+1|0}else{h=e+16&-16;j=ws(h)|0;c[b+8>>2]=j;c[b>>2]=h|1;c[b+4>>2]=e;g=j}Ss(g|0,d|0,e|0)|0;a[g+e|0]=0;i=f;return}function Yj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;if(d>>>0>4294967279){Vj(0)}if(d>>>0<11){a[b]=d<<1;g=b+1|0}else{h=d+16&-16;j=ws(h)|0;c[b+8>>2]=j;c[b>>2]=h|1;c[b+4>>2]=d;g=j}Us(g|0,e|0,d|0)|0;a[g+d|0]=0;i=f;return}function Zj(b){b=b|0;var d=0;d=i;if((a[b]&1)==0){i=d;return}ys(c[b+8>>2]|0);i=d;return}function _j(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;if((b|0)==(d|0)){i=e;return b|0}f=a[d]|0;if((f&1)==0){g=(f&255)>>>1;h=d+1|0}else{g=c[d+4>>2]|0;h=c[d+8>>2]|0}d=a[b]|0;if((d&1)==0){j=10;k=d}else{d=c[b>>2]|0;j=(d&-2)+ -1|0;k=d&255}d=(k&1)==0;if(j>>>0<g>>>0){if(d){l=(k&255)>>>1}else{l=c[b+4>>2]|0}fk(b,j,g-j|0,l,0,l,g,h);i=e;return b|0}if(d){m=b+1|0}else{m=c[b+8>>2]|0}Ts(m|0,h|0,g|0)|0;a[m+g|0]=0;if((a[b]&1)==0){a[b]=g<<1;i=e;return b|0}else{c[b+4>>2]=g;i=e;return b|0}return 0}function $j(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;f=Ws(d|0)|0;g=a[b]|0;if((g&1)==0){h=g;j=10}else{g=c[b>>2]|0;h=g&255;j=(g&-2)+ -1|0}g=(h&1)==0;if(j>>>0<f>>>0){if(g){k=(h&255)>>>1}else{k=c[b+4>>2]|0}fk(b,j,f-j|0,k,0,k,f,d);i=e;return b|0}if(g){l=b+1|0}else{l=c[b+8>>2]|0}Ts(l|0,d|0,f|0)|0;a[l+f|0]=0;if((a[b]&1)==0){a[b]=f<<1;i=e;return b|0}else{c[b+4>>2]=f;i=e;return b|0}return 0}function ak(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;g=a[b]|0;h=(g&1)==0;if(h){j=(g&255)>>>1}else{j=c[b+4>>2]|0}if(j>>>0<d>>>0){bk(b,d-j|0,e)|0;i=f;return}if(h){a[b+d+1|0]=0;a[b]=d<<1;i=f;return}else{a[(c[b+8>>2]|0)+d|0]=0;c[b+4>>2]=d;i=f;return}}function bk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;if((d|0)==0){i=f;return b|0}g=a[b]|0;if((g&1)==0){h=10;j=g}else{g=c[b>>2]|0;h=(g&-2)+ -1|0;j=g&255}if((j&1)==0){k=(j&255)>>>1}else{k=c[b+4>>2]|0}if((h-k|0)>>>0<d>>>0){gk(b,h,d-h+k|0,k,k,0,0);l=a[b]|0}else{l=j}if((l&1)==0){m=b+1|0}else{m=c[b+8>>2]|0}Us(m+k|0,e|0,d|0)|0;e=k+d|0;if((a[b]&1)==0){a[b]=e<<1}else{c[b+4>>2]=e}a[m+e|0]=0;i=f;return b|0}function ck(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;if(d>>>0>4294967279){Vj(0)}f=a[b]|0;if((f&1)==0){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)+ -1|0;h=f&255}if((h&1)==0){j=(h&255)>>>1}else{j=c[b+4>>2]|0}f=j>>>0>d>>>0?j:d;if(f>>>0<11){k=10}else{k=(f+16&-16)+ -1|0}if((k|0)==(g|0)){i=e;return}do{if((k|0)!=10){f=k+1|0;if(k>>>0>g>>>0){l=ws(f)|0}else{l=ws(f)|0}if((h&1)==0){m=l;n=1;o=b+1|0;p=0;break}else{m=l;n=1;o=c[b+8>>2]|0;p=1;break}}else{m=b+1|0;n=0;o=c[b+8>>2]|0;p=1}}while(0);if((h&1)==0){q=(h&255)>>>1}else{q=c[b+4>>2]|0}Ss(m|0,o|0,q+1|0)|0;if(p){ys(o)}if(n){c[b>>2]=k+1|1;c[b+4>>2]=j;c[b+8>>2]=m;i=e;return}else{a[b]=j<<1;i=e;return}}function dk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;f=a[b]|0;g=(f&1)!=0;if(g){h=(c[b>>2]&-2)+ -1|0;j=c[b+4>>2]|0}else{h=10;j=(f&255)>>>1}if((j|0)==(h|0)){gk(b,h,1,h,h,0,0);if((a[b]&1)==0){k=7}else{k=8}}else{if(g){k=8}else{k=7}}if((k|0)==7){a[b]=(j<<1)+2;l=b+1|0;m=j+1|0;n=l+j|0;a[n]=d;o=l+m|0;a[o]=0;i=e;return}else if((k|0)==8){k=c[b+8>>2]|0;g=j+1|0;c[b+4>>2]=g;l=k;m=g;n=l+j|0;a[n]=d;o=l+m|0;a[o]=0;i=e;return}}function ek(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;g=a[b]|0;if((g&1)==0){h=10;j=g}else{g=c[b>>2]|0;h=(g&-2)+ -1|0;j=g&255}if((j&1)==0){k=(j&255)>>>1}else{k=c[b+4>>2]|0}if((h-k|0)>>>0<e>>>0){fk(b,h,e-h+k|0,k,k,0,e,d);i=f;return b|0}if((e|0)==0){i=f;return b|0}if((j&1)==0){l=b+1|0}else{l=c[b+8>>2]|0}Ss(l+k|0,d|0,e|0)|0;d=k+e|0;if((a[b]&1)==0){a[b]=d<<1}else{c[b+4>>2]=d}a[l+d|0]=0;i=f;return b|0}function fk(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;l=i;if((-18-d|0)>>>0<e>>>0){Vj(0)}if((a[b]&1)==0){m=b+1|0}else{m=c[b+8>>2]|0}if(d>>>0<2147483623){n=e+d|0;e=d<<1;o=n>>>0<e>>>0?e:n;if(o>>>0<11){p=11}else{p=o+16&-16}}else{p=-17}o=ws(p)|0;if((g|0)!=0){Ss(o|0,m|0,g|0)|0}if((j|0)!=0){Ss(o+g|0,k|0,j|0)|0}k=f-h|0;if((k|0)!=(g|0)){Ss(o+(j+g)|0,m+(h+g)|0,k-g|0)|0}if((d|0)==10){q=b+8|0;c[q>>2]=o;r=p|1;c[b>>2]=r;s=k+j|0;t=b+4|0;c[t>>2]=s;u=o+s|0;a[u]=0;i=l;return}ys(m);q=b+8|0;c[q>>2]=o;r=p|1;c[b>>2]=r;s=k+j|0;t=b+4|0;c[t>>2]=s;u=o+s|0;a[u]=0;i=l;return}function gk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;if((-17-d|0)>>>0<e>>>0){Vj(0)}if((a[b]&1)==0){l=b+1|0}else{l=c[b+8>>2]|0}if(d>>>0<2147483623){m=e+d|0;e=d<<1;n=m>>>0<e>>>0?e:m;if(n>>>0<11){o=11}else{o=n+16&-16}}else{o=-17}n=ws(o)|0;if((g|0)!=0){Ss(n|0,l|0,g|0)|0}m=f-h|0;if((m|0)!=(g|0)){Ss(n+(j+g)|0,l+(h+g)|0,m-g|0)|0}if((d|0)==10){p=b+8|0;c[p>>2]=n;q=o|1;c[b>>2]=q;i=k;return}ys(l);p=b+8|0;c[p>>2]=n;q=o|1;c[b>>2]=q;i=k;return}function hk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;if(e>>>0>1073741807){Vj(0)}if(e>>>0<2){a[b]=e<<1;g=b+4|0}else{h=e+4&-4;j=ws(h<<2)|0;c[b+8>>2]=j;c[b>>2]=h|1;c[b+4>>2]=e;g=j}Ur(g,d,e)|0;c[g+(e<<2)>>2]=0;i=f;return}function ik(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;if(d>>>0>1073741807){Vj(0)}if(d>>>0<2){a[b]=d<<1;g=b+4|0}else{h=d+4&-4;j=ws(h<<2)|0;c[b+8>>2]=j;c[b>>2]=h|1;c[b+4>>2]=d;g=j}Wr(g,e,d)|0;c[g+(d<<2)>>2]=0;i=f;return}function jk(b){b=b|0;var d=0;d=i;if((a[b]&1)==0){i=d;return}ys(c[b+8>>2]|0);i=d;return}function kk(a,b){a=a|0;b=b|0;var c=0,d=0;c=i;d=lk(a,b,Tr(b)|0)|0;i=c;return d|0}function lk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;g=a[b]|0;if((g&1)==0){h=1;j=g}else{g=c[b>>2]|0;h=(g&-2)+ -1|0;j=g&255}g=(j&1)==0;if(h>>>0<e>>>0){if(g){k=(j&255)>>>1}else{k=c[b+4>>2]|0}ok(b,h,e-h|0,k,0,k,e,d);i=f;return b|0}if(g){l=b+4|0}else{l=c[b+8>>2]|0}Vr(l,d,e)|0;c[l+(e<<2)>>2]=0;if((a[b]&1)==0){a[b]=e<<1;i=f;return b|0}else{c[b+4>>2]=e;i=f;return b|0}return 0}function mk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;if(d>>>0>1073741807){Vj(0)}f=a[b]|0;if((f&1)==0){g=1;h=f}else{f=c[b>>2]|0;g=(f&-2)+ -1|0;h=f&255}if((h&1)==0){j=(h&255)>>>1}else{j=c[b+4>>2]|0}f=j>>>0>d>>>0?j:d;if(f>>>0<2){k=1}else{k=(f+4&-4)+ -1|0}if((k|0)==(g|0)){i=e;return}do{if((k|0)!=1){f=(k<<2)+4|0;if(k>>>0>g>>>0){l=ws(f)|0}else{l=ws(f)|0}if((h&1)==0){m=l;n=1;o=b+4|0;p=0;break}else{m=l;n=1;o=c[b+8>>2]|0;p=1;break}}else{m=b+4|0;n=0;o=c[b+8>>2]|0;p=1}}while(0);if((h&1)==0){q=(h&255)>>>1}else{q=c[b+4>>2]|0}Ur(m,o,q+1|0)|0;if(p){ys(o)}if(n){c[b>>2]=k+1|1;c[b+4>>2]=j;c[b+8>>2]=m;i=e;return}else{a[b]=j<<1;i=e;return}}function nk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;f=a[b]|0;g=(f&1)!=0;if(g){h=(c[b>>2]&-2)+ -1|0;j=c[b+4>>2]|0}else{h=1;j=(f&255)>>>1}if((j|0)==(h|0)){pk(b,h,1,h,h,0,0);if((a[b]&1)==0){k=7}else{k=8}}else{if(g){k=8}else{k=7}}if((k|0)==7){a[b]=(j<<1)+2;l=b+4|0;m=j+1|0;n=l+(j<<2)|0;c[n>>2]=d;o=l+(m<<2)|0;c[o>>2]=0;i=e;return}else if((k|0)==8){k=c[b+8>>2]|0;g=j+1|0;c[b+4>>2]=g;l=k;m=g;n=l+(j<<2)|0;c[n>>2]=d;o=l+(m<<2)|0;c[o>>2]=0;i=e;return}}function ok(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;l=i;if((1073741806-d|0)>>>0<e>>>0){Vj(0)}if((a[b]&1)==0){m=b+4|0}else{m=c[b+8>>2]|0}if(d>>>0<536870887){n=e+d|0;e=d<<1;o=n>>>0<e>>>0?e:n;if(o>>>0<2){p=2}else{p=o+4&-4}}else{p=1073741807}o=ws(p<<2)|0;if((g|0)!=0){Ur(o,m,g)|0}if((j|0)!=0){Ur(o+(g<<2)|0,k,j)|0}k=f-h|0;if((k|0)!=(g|0)){Ur(o+(j+g<<2)|0,m+(h+g<<2)|0,k-g|0)|0}if((d|0)==1){q=b+8|0;c[q>>2]=o;r=p|1;c[b>>2]=r;s=k+j|0;t=b+4|0;c[t>>2]=s;u=o+(s<<2)|0;c[u>>2]=0;i=l;return}ys(m);q=b+8|0;c[q>>2]=o;r=p|1;c[b>>2]=r;s=k+j|0;t=b+4|0;c[t>>2]=s;u=o+(s<<2)|0;c[u>>2]=0;i=l;return}function pk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=i;if((1073741807-d|0)>>>0<e>>>0){Vj(0)}if((a[b]&1)==0){l=b+4|0}else{l=c[b+8>>2]|0}if(d>>>0<536870887){m=e+d|0;e=d<<1;n=m>>>0<e>>>0?e:m;if(n>>>0<2){o=2}else{o=n+4&-4}}else{o=1073741807}n=ws(o<<2)|0;if((g|0)!=0){Ur(n,l,g)|0}m=f-h|0;if((m|0)!=(g|0)){Ur(n+(j+g<<2)|0,l+(h+g<<2)|0,m-g|0)|0}if((d|0)==1){p=b+8|0;c[p>>2]=n;q=o|1;c[b>>2]=q;i=k;return}ys(l);p=b+8|0;c[p>>2]=n;q=o|1;c[b>>2]=q;i=k;return}function qk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=(c[b+24>>2]|0)==0;if(h){c[b+16>>2]=d|1}else{c[b+16>>2]=d}if(((h&1|d)&c[b+20>>2]|0)==0){i=e;return}e=fc(16)|0;if((a[10600]|0)==0?(Na(10600)|0)!=0:0){c[2648]=11376;hd(76,10592,q|0)|0;Bb(10600)}b=g;c[b>>2]=1;c[b+4>>2]=10592;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];Rj(e,f,10648);c[e>>2]=10616;td(e|0,10696,72)}function rk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;c[a>>2]=10640;d=c[a+40>>2]|0;e=a+32|0;f=a+36|0;if((d|0)!=0){g=d;do{g=g+ -1|0;Ud[c[(c[e>>2]|0)+(g<<2)>>2]&3](0,a,c[(c[f>>2]|0)+(g<<2)>>2]|0)}while((g|0)!=0)}Ep(a+28|0);ss(c[e>>2]|0);ss(c[f>>2]|0);ss(c[a+48>>2]|0);ss(c[a+60>>2]|0);i=b;return}function sk(a,b){a=a|0;b=b|0;var c=0;c=i;Dp(a,b+28|0);i=c;return}function tk(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;b=a+28|0;e=a+32|0;a=e+40|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(a|0));Cp(b);i=d;return}function uk(a){a=a|0;var b=0;b=i;c[a>>2]=10256;Ep(a+4|0);ys(a);i=b;return}function vk(a){a=a|0;var b=0;b=i;c[a>>2]=10256;Ep(a+4|0);i=b;return}function wk(a,b){a=a|0;b=b|0;return}function xk(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function yk(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function zk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=a;c[e>>2]=0;c[e+4>>2]=0;e=a+8|0;c[e>>2]=-1;c[e+4>>2]=-1;return}function Ak(a){a=a|0;return 0}function Bk(a){a=a|0;return 0}function Ck(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;if((e|0)<=0){g=0;i=f;return g|0}h=b+12|0;j=b+16|0;k=d;d=0;while(1){l=c[h>>2]|0;if(l>>>0<(c[j>>2]|0)>>>0){c[h>>2]=l+1;m=a[l]|0}else{l=Fd[c[(c[b>>2]|0)+40>>2]&127](b)|0;if((l|0)==-1){g=d;n=8;break}m=l&255}a[k]=m;l=d+1|0;if((l|0)<(e|0)){k=k+1|0;d=l}else{g=l;n=8;break}}if((n|0)==8){i=f;return g|0}return 0}function Dk(a){a=a|0;return-1}function Ek(a){a=a|0;var b=0,e=0,f=0;b=i;if((Fd[c[(c[a>>2]|0)+36>>2]&127](a)|0)==-1){e=-1;i=b;return e|0}f=a+12|0;a=c[f>>2]|0;c[f>>2]=a+1;e=d[a]|0;i=b;return e|0}function Fk(a,b){a=a|0;b=b|0;return-1}function Gk(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;if((f|0)<=0){h=0;i=g;return h|0}j=b+24|0;k=b+28|0;l=e;e=0;while(1){m=c[j>>2]|0;if(!(m>>>0<(c[k>>2]|0)>>>0)){if((Sd[c[(c[b>>2]|0)+52>>2]&31](b,d[l]|0)|0)==-1){h=e;n=7;break}}else{o=a[l]|0;c[j>>2]=m+1;a[m]=o}o=e+1|0;if((o|0)<(f|0)){l=l+1|0;e=o}else{h=o;n=7;break}}if((n|0)==7){i=g;return h|0}return 0}function Hk(a,b){a=a|0;b=b|0;return-1}function Ik(a){a=a|0;var b=0;b=i;c[a>>2]=10320;Ep(a+4|0);ys(a);i=b;return}function Jk(a){a=a|0;var b=0;b=i;c[a>>2]=10320;Ep(a+4|0);i=b;return}function Kk(a,b){a=a|0;b=b|0;return}function Lk(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function Mk(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function Nk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=a;c[e>>2]=0;c[e+4>>2]=0;e=a+8|0;c[e>>2]=-1;c[e+4>>2]=-1;return}function Ok(a){a=a|0;return 0}function Pk(a){a=a|0;return 0}function Qk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;if((d|0)<=0){f=0;i=e;return f|0}g=a+12|0;h=a+16|0;j=b;b=0;while(1){k=c[g>>2]|0;if(!(k>>>0<(c[h>>2]|0)>>>0)){l=Fd[c[(c[a>>2]|0)+40>>2]&127](a)|0;if((l|0)==-1){f=b;m=8;break}else{n=l}}else{c[g>>2]=k+4;n=c[k>>2]|0}c[j>>2]=n;k=b+1|0;if((k|0)>=(d|0)){f=k;m=8;break}j=j+4|0;b=k}if((m|0)==8){i=e;return f|0}return 0}function Rk(a){a=a|0;return-1}function Sk(a){a=a|0;var b=0,d=0,e=0;b=i;if((Fd[c[(c[a>>2]|0)+36>>2]&127](a)|0)==-1){d=-1;i=b;return d|0}e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+4;d=c[a>>2]|0;i=b;return d|0}function Tk(a,b){a=a|0;b=b|0;return-1}function Uk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;if((d|0)<=0){f=0;i=e;return f|0}g=a+24|0;h=a+28|0;j=b;b=0;while(1){k=c[g>>2]|0;if(!(k>>>0<(c[h>>2]|0)>>>0)){if((Sd[c[(c[a>>2]|0)+52>>2]&31](a,c[j>>2]|0)|0)==-1){f=b;l=8;break}}else{m=c[j>>2]|0;c[g>>2]=k+4;c[k>>2]=m}m=b+1|0;if((m|0)>=(d|0)){f=m;l=8;break}j=j+4|0;b=m}if((l|0)==8){i=e;return f|0}return 0}function Vk(a,b){a=a|0;b=b|0;return-1}function Wk(a){a=a|0;var b=0;b=i;rk(a+8|0);ys(a);i=b;return}function Xk(a){a=a|0;var b=0;b=i;rk(a+8|0);i=b;return}function Yk(a){a=a|0;var b=0,d=0;b=i;d=c[(c[a>>2]|0)+ -12>>2]|0;rk(a+(d+8)|0);ys(a+d|0);i=b;return}function Zk(a){a=a|0;var b=0;b=i;rk(a+((c[(c[a>>2]|0)+ -12>>2]|0)+8)|0);i=b;return}function _k(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=i;i=i+16|0;j=h;a[e]=0;k=c[(c[f>>2]|0)+ -12>>2]|0;l=c[f+(k+16)>>2]|0;if((l|0)!=0){qk(f+k|0,l|4);i=h;return}l=c[f+(k+72)>>2]|0;if((l|0)!=0){$k(l)|0}do{if(!g?(l=c[(c[f>>2]|0)+ -12>>2]|0,(c[f+(l+4)>>2]&4096|0)!=0):0){Dp(j,f+(l+28)|0);l=Fp(j,13064)|0;Ep(j);k=l+8|0;l=c[f+((c[(c[f>>2]|0)+ -12>>2]|0)+24)>>2]|0;while(1){if((l|0)==0){break}if((c[l+12>>2]|0)==(c[l+16>>2]|0)){m=(Fd[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1;n=m?0:l;if((n|0)==0){break}else{o=n}}else{o=l}n=o+12|0;m=c[n>>2]|0;p=o+16|0;if((m|0)==(c[p>>2]|0)){q=Fd[c[(c[o>>2]|0)+36>>2]&127](o)|0}else{q=d[m]|0}if(!((q&255)<<24>>24>-1)){r=18;break}if((b[(c[k>>2]|0)+(q<<24>>24<<1)>>1]&8192)==0){r=18;break}m=c[n>>2]|0;if((m|0)==(c[p>>2]|0)){Fd[c[(c[o>>2]|0)+40>>2]&127](o)|0;l=o;continue}else{c[n>>2]=m+1;l=o;continue}}if((r|0)==18?(o|0)!=0:0){if((c[o+12>>2]|0)!=(c[o+16>>2]|0)){break}if(!((Fd[c[(c[o>>2]|0)+36>>2]&127](o)|0)==-1|(o|0)==0)){break}}l=c[(c[f>>2]|0)+ -12>>2]|0;qk(f+l|0,c[f+(l+16)>>2]|6)}}while(0);a[e]=(c[f+((c[(c[f>>2]|0)+ -12>>2]|0)+16)>>2]|0)==0|0;i=h;return}function $k(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;f=c[(c[b>>2]|0)+ -12>>2]|0;if((c[b+(f+24)>>2]|0)==0){i=d;return b|0}a[e]=0;c[e+4>>2]=b;if((c[b+(f+16)>>2]|0)==0){g=c[b+(f+72)>>2]|0;if((g|0)==0){h=f}else{$k(g)|0;h=c[(c[b>>2]|0)+ -12>>2]|0}a[e]=1;g=c[b+(h+24)>>2]|0;if((Fd[c[(c[g>>2]|0)+24>>2]&127](g)|0)==-1){g=c[(c[b>>2]|0)+ -12>>2]|0;qk(b+g|0,c[b+(g+16)>>2]|1)}}ll(e);i=d;return b|0}function al(a){a=a|0;var b=0;b=a+16|0;c[b>>2]=c[b>>2]|1;if((c[a+20>>2]&1|0)==0){return}else{qb()}}function bl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+32|0;f=e+24|0;g=e;h=e+4|0;j=e+8|0;k=e+28|0;l=e+16|0;m=e+20|0;n=e+12|0;_k(k,b,0);if((a[k]|0)==0){i=e;return b|0}c[l>>2]=0;Dp(m,b+((c[(c[b>>2]|0)+ -12>>2]|0)+28)|0);k=Fp(m,11600)|0;o=c[(c[b>>2]|0)+ -12>>2]|0;p=b+o|0;q=c[(c[k>>2]|0)+28>>2]|0;c[h>>2]=c[b+(o+24)>>2];c[j>>2]=0;c[g+0>>2]=c[h+0>>2];c[f+0>>2]=c[j+0>>2];Pd[q&63](n,k,g,f,p,l,d);Ep(m);m=c[(c[b>>2]|0)+ -12>>2]|0;qk(b+m|0,c[b+(m+16)>>2]|c[l>>2]);i=e;return b|0}function cl(a){a=a|0;var b=0;b=i;rk(a+8|0);ys(a);i=b;return}function dl(a){a=a|0;var b=0;b=i;rk(a+8|0);i=b;return}function el(a){a=a|0;var b=0,d=0;b=i;d=c[(c[a>>2]|0)+ -12>>2]|0;rk(a+(d+8)|0);ys(a+d|0);i=b;return}function fl(a){a=a|0;var b=0;b=i;rk(a+((c[(c[a>>2]|0)+ -12>>2]|0)+8)|0);i=b;return}function gl(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;f=c[(c[b>>2]|0)+ -12>>2]|0;if((c[b+(f+24)>>2]|0)==0){i=d;return b|0}a[e]=0;c[e+4>>2]=b;if((c[b+(f+16)>>2]|0)==0){g=c[b+(f+72)>>2]|0;if((g|0)==0){h=f}else{gl(g)|0;h=c[(c[b>>2]|0)+ -12>>2]|0}a[e]=1;g=c[b+(h+24)>>2]|0;if((Fd[c[(c[g>>2]|0)+24>>2]&127](g)|0)==-1){g=c[(c[b>>2]|0)+ -12>>2]|0;qk(b+g|0,c[b+(g+16)>>2]|1)}}sl(e);i=d;return b|0}function hl(a){a=a|0;var b=0;b=i;rk(a+4|0);ys(a);i=b;return}function il(a){a=a|0;var b=0;b=i;rk(a+4|0);i=b;return}function jl(a){a=a|0;var b=0,d=0;b=i;d=c[(c[a>>2]|0)+ -12>>2]|0;rk(a+(d+4)|0);ys(a+d|0);i=b;return}function kl(a){a=a|0;var b=0;b=i;rk(a+((c[(c[a>>2]|0)+ -12>>2]|0)+4)|0);i=b;return}function ll(a){a=a|0;var b=0,d=0,e=0;b=i;d=a+4|0;a=c[d>>2]|0;e=c[(c[a>>2]|0)+ -12>>2]|0;if((c[a+(e+24)>>2]|0)==0){i=b;return}if((c[a+(e+16)>>2]|0)!=0){i=b;return}if((c[a+(e+4)>>2]&8192|0)==0){i=b;return}if(Qa()|0){i=b;return}e=c[d>>2]|0;a=c[e+((c[(c[e>>2]|0)+ -12>>2]|0)+24)>>2]|0;if(!((Fd[c[(c[a>>2]|0)+24>>2]&127](a)|0)==-1)){i=b;return}a=c[d>>2]|0;d=c[(c[a>>2]|0)+ -12>>2]|0;qk(a+d|0,c[a+(d+16)>>2]|1);i=b;return}function ml(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e+24|0;g=e;h=e+8|0;j=e+16|0;k=e+20|0;a[h]=0;c[h+4>>2]=b;l=c[(c[b>>2]|0)+ -12>>2]|0;if((c[b+(l+16)>>2]|0)!=0){ll(h);i=e;return b|0}m=c[b+(l+72)>>2]|0;if((m|0)==0){n=l}else{$k(m)|0;n=c[(c[b>>2]|0)+ -12>>2]|0}a[h]=1;Dp(j,b+(n+28)|0);n=Fp(j,11784)|0;Ep(j);j=c[(c[b>>2]|0)+ -12>>2]|0;m=c[b+(j+24)>>2]|0;l=b+j|0;o=b+(j+76)|0;p=c[o>>2]|0;if((p|0)==-1){Dp(f,b+(j+28)|0);j=Fp(f,13064)|0;q=Sd[c[(c[j>>2]|0)+28>>2]&31](j,32)|0;Ep(f);j=q<<24>>24;c[o>>2]=j;r=j}else{r=p}p=r&255;r=c[(c[n>>2]|0)+16>>2]|0;c[g>>2]=m;c[f+0>>2]=c[g+0>>2];Nd[r&31](k,n,f,l,p,d);if((c[k>>2]|0)!=0){ll(h);i=e;return b|0}k=c[(c[b>>2]|0)+ -12>>2]|0;qk(b+k|0,c[b+(k+16)>>2]|5);ll(h);i=e;return b|0}function nl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+16|0;f=e;a[f]=0;c[f+4>>2]=b;g=c[b>>2]|0;h=c[g+ -12>>2]|0;do{if((c[b+(h+16)>>2]|0)==0){j=c[b+(h+72)>>2]|0;if((j|0)==0){k=g;l=h}else{$k(j)|0;j=c[b>>2]|0;k=j;l=c[j+ -12>>2]|0}a[f]=1;j=c[b+(l+24)>>2]|0;if((j|0)==0){m=k}else{n=j+24|0;o=c[n>>2]|0;if((o|0)!=(c[j+28>>2]|0)){c[n>>2]=o+1;a[o]=d;break}if(!((Sd[c[(c[j>>2]|0)+52>>2]&31](j,d&255)|0)==-1)){break}m=c[b>>2]|0}j=c[m+ -12>>2]|0;qk(b+j|0,c[b+(j+16)>>2]|1)}}while(0);ll(f);i=e;return b|0}function ol(a){a=a|0;var b=0;b=i;rk(a+4|0);ys(a);i=b;return}function pl(a){a=a|0;var b=0;b=i;rk(a+4|0);i=b;return}function ql(a){a=a|0;var b=0,d=0;b=i;d=c[(c[a>>2]|0)+ -12>>2]|0;rk(a+(d+4)|0);ys(a+d|0);i=b;return}function rl(a){a=a|0;var b=0;b=i;rk(a+((c[(c[a>>2]|0)+ -12>>2]|0)+4)|0);i=b;return}function sl(a){a=a|0;var b=0,d=0,e=0;b=i;d=a+4|0;a=c[d>>2]|0;e=c[(c[a>>2]|0)+ -12>>2]|0;if((c[a+(e+24)>>2]|0)==0){i=b;return}if((c[a+(e+16)>>2]|0)!=0){i=b;return}if((c[a+(e+4)>>2]&8192|0)==0){i=b;return}if(Qa()|0){i=b;return}e=c[d>>2]|0;a=c[e+((c[(c[e>>2]|0)+ -12>>2]|0)+24)>>2]|0;if(!((Fd[c[(c[a>>2]|0)+24>>2]&127](a)|0)==-1)){i=b;return}a=c[d>>2]|0;d=c[(c[a>>2]|0)+ -12>>2]|0;qk(a+d|0,c[a+(d+16)>>2]|1);i=b;return}function tl(a){a=a|0;return 10536}function ul(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;if((c|0)==1){Xj(a,10552,35);i=d;return}else{Pj(a,b,c);i=d;return}}function vl(a){a=a|0;return}function wl(a){a=a|0;var b=0;b=i;Tj(a);ys(a);i=b;return}function xl(a){a=a|0;var b=0;b=i;Tj(a);i=b;return}function yl(a){a=a|0;var b=0;b=i;rk(a);ys(a);i=b;return}function zl(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Al(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Bl(a){a=a|0;return}function Cl(a){a=a|0;return}function Dl(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;a:do{if((e|0)==(f|0)){g=c;h=6}else{j=e;k=c;while(1){if((k|0)==(d|0)){l=-1;break a}m=a[k]|0;n=a[j]|0;if(m<<24>>24<n<<24>>24){l=-1;break a}if(n<<24>>24<m<<24>>24){l=1;break a}m=k+1|0;n=j+1|0;if((n|0)==(f|0)){g=m;h=6;break}else{j=n;k=m}}}}while(0);if((h|0)==6){l=(g|0)!=(d|0)|0}i=b;return l|0}function El(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;g=e;h=f-g|0;if(h>>>0>4294967279){Vj(b)}if(h>>>0<11){a[b]=h<<1;j=b+1|0}else{k=h+16&-16;l=ws(k)|0;c[b+8>>2]=l;c[b>>2]=k|1;c[b+4>>2]=h;j=l}if((e|0)==(f|0)){m=j;a[m]=0;i=d;return}else{n=e;o=j}while(1){a[o]=a[n]|0;n=n+1|0;if((n|0)==(f|0)){break}else{o=o+1|0}}m=j+(f+(0-g))|0;a[m]=0;i=d;return}function Fl(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;b=i;if((c|0)==(d|0)){e=0;i=b;return e|0}else{f=0;g=c}while(1){c=(a[g]|0)+(f<<4)|0;h=c&-268435456;j=(h>>>24|h)^c;c=g+1|0;if((c|0)==(d|0)){e=j;break}else{f=j;g=c}}i=b;return e|0}function Gl(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Hl(a){a=a|0;return}function Il(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;a=i;a:do{if((e|0)==(f|0)){g=b;h=6}else{j=e;k=b;while(1){if((k|0)==(d|0)){l=-1;break a}m=c[k>>2]|0;n=c[j>>2]|0;if((m|0)<(n|0)){l=-1;break a}if((n|0)<(m|0)){l=1;break a}m=k+4|0;n=j+4|0;if((n|0)==(f|0)){g=m;h=6;break}else{j=n;k=m}}}}while(0);if((h|0)==6){l=(g|0)!=(d|0)|0}i=a;return l|0}function Jl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;d=i;g=e;h=f-g|0;j=h>>2;if(j>>>0>1073741807){Vj(b)}if(j>>>0<2){a[b]=h>>>1;k=b+4|0}else{h=j+4&-4;l=ws(h<<2)|0;c[b+8>>2]=l;c[b>>2]=h|1;c[b+4>>2]=j;k=l}if((e|0)==(f|0)){m=k;c[m>>2]=0;i=d;return}l=f+ -4+(0-g)|0;g=e;e=k;while(1){c[e>>2]=c[g>>2];g=g+4|0;if((g|0)==(f|0)){break}else{e=e+4|0}}m=k+((l>>>2)+1<<2)|0;c[m>>2]=0;i=d;return}function Kl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;a=i;if((b|0)==(d|0)){e=0;i=a;return e|0}else{f=0;g=b}while(1){b=(c[g>>2]|0)+(f<<4)|0;h=b&-268435456;j=(h>>>24|h)^b;b=g+4|0;if((b|0)==(d|0)){e=j;break}else{f=j;g=b}}i=a;return e|0}function Ll(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function Ml(a){a=a|0;return}function Nl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;k=i;i=i+80|0;l=k;m=k+64|0;n=k+60|0;o=k+56|0;p=k+52|0;q=k+68|0;r=k+16|0;s=k+12|0;t=k+24|0;u=k+48|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;c[p>>2]=c[e>>2];c[q>>2]=c[f>>2];c[m+0>>2]=c[p+0>>2];c[l+0>>2]=c[q+0>>2];Pd[v&63](o,d,m,l,g,h,n);m=c[o>>2]|0;c[e>>2]=m;o=c[n>>2]|0;if((o|0)==0){a[j]=0}else if((o|0)==1){a[j]=1}else{a[j]=1;c[h>>2]=4}c[b>>2]=m;i=k;return}sk(r,g);m=c[r>>2]|0;if(!((c[3266]|0)==-1)){c[l>>2]=13064;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13064,l,162)}o=(c[13068>>2]|0)+ -1|0;n=c[m+8>>2]|0;if(!((c[m+12>>2]|0)-n>>2>>>0>o>>>0)){w=fc(4)|0;Yr(w);td(w|0,21024,137)}m=c[n+(o<<2)>>2]|0;if((m|0)==0){w=fc(4)|0;Yr(w);td(w|0,21024,137)}Aj(c[r>>2]|0)|0;sk(s,g);g=c[s>>2]|0;if(!((c[3302]|0)==-1)){c[l>>2]=13208;c[l+4>>2]=161;c[l+8>>2]=0;Uj(13208,l,162)}r=(c[13212>>2]|0)+ -1|0;w=c[g+8>>2]|0;if(!((c[g+12>>2]|0)-w>>2>>>0>r>>>0)){x=fc(4)|0;Yr(x);td(x|0,21024,137)}g=c[w+(r<<2)>>2]|0;if((g|0)==0){x=fc(4)|0;Yr(x);td(x|0,21024,137)}Aj(c[s>>2]|0)|0;Ed[c[(c[g>>2]|0)+24>>2]&63](t,g);Ed[c[(c[g>>2]|0)+28>>2]&63](t+12|0,g);c[u>>2]=c[f>>2];f=t+24|0;c[l+0>>2]=c[u+0>>2];a[j]=(Ol(e,l,t,f,m,h,1)|0)==(t|0)|0;c[b>>2]=c[e>>2];Zj(t+12|0);Zj(t);i=k;return}function Ol(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;l=i;i=i+112|0;m=l;n=(g-f|0)/12|0;if(n>>>0>100){o=rs(n)|0;if((o|0)==0){Ds()}else{p=o;q=o}}else{p=0;q=m}m=(f|0)==(g|0);if(m){r=0;s=n}else{o=f;t=0;u=n;n=q;while(1){v=a[o]|0;if((v&1)==0){w=(v&255)>>>1}else{w=c[o+4>>2]|0}if((w|0)==0){a[n]=2;x=t+1|0;y=u+ -1|0}else{a[n]=1;x=t;y=u}v=o+12|0;if((v|0)==(g|0)){r=x;s=y;break}else{o=v;t=x;u=y;n=n+1|0}}}n=0;y=r;r=s;a:while(1){s=c[b>>2]|0;do{if((s|0)!=0){if((c[s+12>>2]|0)==(c[s+16>>2]|0)){if((Fd[c[(c[s>>2]|0)+36>>2]&127](s)|0)==-1){c[b>>2]=0;z=0;break}else{z=c[b>>2]|0;break}}else{z=s}}else{z=0}}while(0);s=(z|0)==0;u=c[e>>2]|0;if((u|0)!=0){if((c[u+12>>2]|0)==(c[u+16>>2]|0)?(Fd[c[(c[u>>2]|0)+36>>2]&127](u)|0)==-1:0){c[e>>2]=0;A=0}else{A=u}}else{A=0}B=(A|0)==0;C=c[b>>2]|0;if(!((s^B)&(r|0)!=0)){break}s=c[C+12>>2]|0;if((s|0)==(c[C+16>>2]|0)){D=Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0}else{D=d[s]|0}s=D&255;if(k){E=s}else{E=Sd[c[(c[h>>2]|0)+12>>2]&31](h,s)|0}s=n+1|0;if(m){n=s;continue}b:do{if(k){u=0;x=f;t=y;o=r;w=q;while(1){do{if((a[w]|0)==1){v=a[x]|0;F=(v&1)==0;if(F){G=x+1|0}else{G=c[x+8>>2]|0}if(!(E<<24>>24==(a[G+n|0]|0))){a[w]=0;H=u;I=t;J=o+ -1|0;break}if(F){K=(v&255)>>>1}else{K=c[x+4>>2]|0}if((K|0)==(s|0)){a[w]=2;H=1;I=t+1|0;J=o+ -1|0}else{H=1;I=t;J=o}}else{H=u;I=t;J=o}}while(0);v=x+12|0;if((v|0)==(g|0)){L=H;M=I;N=J;break b}u=H;x=v;t=I;o=J;w=w+1|0}}else{w=0;o=f;t=y;x=r;u=q;while(1){do{if((a[u]|0)==1){if((a[o]&1)==0){O=o+1|0}else{O=c[o+8>>2]|0}if(!(E<<24>>24==(Sd[c[(c[h>>2]|0)+12>>2]&31](h,a[O+n|0]|0)|0)<<24>>24)){a[u]=0;P=w;Q=t;R=x+ -1|0;break}v=a[o]|0;if((v&1)==0){S=(v&255)>>>1}else{S=c[o+4>>2]|0}if((S|0)==(s|0)){a[u]=2;P=1;Q=t+1|0;R=x+ -1|0}else{P=1;Q=t;R=x}}else{P=w;Q=t;R=x}}while(0);v=o+12|0;if((v|0)==(g|0)){L=P;M=Q;N=R;break b}w=P;o=v;t=Q;x=R;u=u+1|0}}}while(0);if(!L){n=s;y=M;r=N;continue}u=c[b>>2]|0;x=u+12|0;t=c[x>>2]|0;if((t|0)==(c[u+16>>2]|0)){Fd[c[(c[u>>2]|0)+40>>2]&127](u)|0}else{c[x>>2]=t+1}if((N+M|0)>>>0<2){n=s;y=M;r=N;continue}else{T=f;U=M;V=q}while(1){if((a[V]|0)==2){t=a[T]|0;if((t&1)==0){W=(t&255)>>>1}else{W=c[T+4>>2]|0}if((W|0)!=(s|0)){a[V]=0;X=U+ -1|0}else{X=U}}else{X=U}t=T+12|0;if((t|0)==(g|0)){n=s;y=X;r=N;continue a}else{T=t;U=X;V=V+1|0}}}do{if((C|0)!=0){if((c[C+12>>2]|0)==(c[C+16>>2]|0)){if((Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1){c[b>>2]=0;Y=0;break}else{Y=c[b>>2]|0;break}}else{Y=C}}else{Y=0}}while(0);C=(Y|0)==0;do{if(!B){if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(C){break}else{Z=80;break}}if(!((Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0)==-1)){if(C){break}else{Z=80;break}}else{c[e>>2]=0;Z=78;break}}else{Z=78}}while(0);if((Z|0)==78?C:0){Z=80}if((Z|0)==80){c[j>>2]=c[j>>2]|2}c:do{if(!m){if((a[q]|0)==2){_=f}else{C=f;e=q;while(1){A=C+12|0;B=e+1|0;if((A|0)==(g|0)){Z=85;break c}if((a[B]|0)==2){_=A;break}else{C=A;e=B}}}}else{Z=85}}while(0);if((Z|0)==85){c[j>>2]=c[j>>2]|4;_=g}if((p|0)==0){i=l;return _|0}ss(p);i=l;return _|0}function Pl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];Ql(a,0,k,j,f,g,h);i=b;return}function Ql(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;e=i;i=i+224|0;l=e+198|0;m=e+196|0;n=e+4|0;o=e+16|0;p=e+28|0;q=e+32|0;r=e;s=e+192|0;t=c[h+4>>2]&74;if((t|0)==64){u=8}else if((t|0)==0){u=0}else if((t|0)==8){u=16}else{u=10}Gm(n,h,l,m);c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;ak(o,10,0);if((a[o]&1)==0){h=o+1|0;v=h;w=o+8|0;x=h}else{h=o+8|0;v=o+1|0;w=h;x=c[h>>2]|0}c[p>>2]=x;c[r>>2]=q;c[s>>2]=0;h=o+4|0;t=a[m]|0;m=c[f>>2]|0;y=x;a:while(1){if((m|0)!=0){if((c[m+12>>2]|0)==(c[m+16>>2]|0)?(Fd[c[(c[m>>2]|0)+36>>2]&127](m)|0)==-1:0){c[f>>2]=0;z=0}else{z=m}}else{z=0}x=(z|0)==0;A=c[g>>2]|0;do{if((A|0)!=0){if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(x){B=A;break}else{C=A;D=y;break a}}if(!((Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0)==-1)){if(x){B=A;break}else{C=A;D=y;break a}}else{c[g>>2]=0;E=18;break}}else{E=18}}while(0);if((E|0)==18){E=0;if(x){C=0;D=y;break}else{B=0}}A=a[o]|0;F=(A&1)==0;if(F){G=(A&255)>>>1}else{G=c[h>>2]|0}if(((c[p>>2]|0)-y|0)==(G|0)){if(F){H=(A&255)>>>1;I=(A&255)>>>1}else{A=c[h>>2]|0;H=A;I=A}ak(o,H<<1,0);if((a[o]&1)==0){J=10}else{J=(c[o>>2]&-2)+ -1|0}ak(o,J,0);if((a[o]&1)==0){K=v}else{K=c[w>>2]|0}c[p>>2]=K+I;L=K}else{L=y}A=z+12|0;F=c[A>>2]|0;M=z+16|0;if((F|0)==(c[M>>2]|0)){N=Fd[c[(c[z>>2]|0)+36>>2]&127](z)|0}else{N=d[F]|0}if((gm(N&255,u,L,p,s,t,n,q,r,l)|0)!=0){C=B;D=L;break}F=c[A>>2]|0;if((F|0)==(c[M>>2]|0)){Fd[c[(c[z>>2]|0)+40>>2]&127](z)|0;m=z;y=L;continue}else{c[A>>2]=F+1;m=z;y=L;continue}}L=a[n]|0;if((L&1)==0){O=(L&255)>>>1}else{O=c[n+4>>2]|0}if((O|0)!=0?(O=c[r>>2]|0,(O-q|0)<160):0){L=c[s>>2]|0;c[r>>2]=O+4;c[O>>2]=L}c[k>>2]=Ar(D,c[p>>2]|0,j,u)|0;To(n,q,c[r>>2]|0,j);if((z|0)!=0){if((c[z+12>>2]|0)==(c[z+16>>2]|0)?(Fd[c[(c[z>>2]|0)+36>>2]&127](z)|0)==-1:0){c[f>>2]=0;P=0}else{P=z}}else{P=0}z=(P|0)==0;do{if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(!z){break}c[b>>2]=P;Zj(o);Zj(n);i=e;return}if((Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1){c[g>>2]=0;E=54;break}if(z^(C|0)==0){c[b>>2]=P;Zj(o);Zj(n);i=e;return}}else{E=54}}while(0);if((E|0)==54?!z:0){c[b>>2]=P;Zj(o);Zj(n);i=e;return}c[j>>2]=c[j>>2]|2;c[b>>2]=P;Zj(o);Zj(n);i=e;return}function Rl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];Sl(a,0,k,j,f,g,h);i=b;return}function Sl(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;e=i;i=i+224|0;l=e+198|0;m=e+196|0;n=e+4|0;o=e+16|0;p=e+28|0;q=e+32|0;r=e;s=e+192|0;t=c[h+4>>2]&74;if((t|0)==0){u=0}else if((t|0)==64){u=8}else if((t|0)==8){u=16}else{u=10}Gm(n,h,l,m);c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;ak(o,10,0);if((a[o]&1)==0){h=o+1|0;v=h;w=o+8|0;x=h}else{h=o+8|0;v=o+1|0;w=h;x=c[h>>2]|0}c[p>>2]=x;c[r>>2]=q;c[s>>2]=0;h=o+4|0;t=a[m]|0;m=c[f>>2]|0;y=x;a:while(1){if((m|0)!=0){if((c[m+12>>2]|0)==(c[m+16>>2]|0)?(Fd[c[(c[m>>2]|0)+36>>2]&127](m)|0)==-1:0){c[f>>2]=0;z=0}else{z=m}}else{z=0}x=(z|0)==0;A=c[g>>2]|0;do{if((A|0)!=0){if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(x){B=A;break}else{C=A;D=y;break a}}if(!((Fd[c[(c[A>>2]|0)+36>>2]&127](A)|0)==-1)){if(x){B=A;break}else{C=A;D=y;break a}}else{c[g>>2]=0;E=18;break}}else{E=18}}while(0);if((E|0)==18){E=0;if(x){C=0;D=y;break}else{B=0}}A=a[o]|0;F=(A&1)==0;if(F){G=(A&255)>>>1}else{G=c[h>>2]|0}if(((c[p>>2]|0)-y|0)==(G|0)){if(F){H=(A&255)>>>1;I=(A&255)>>>1}else{A=c[h>>2]|0;H=A;I=A}ak(o,H<<1,0);if((a[o]&1)==0){K=10}else{K=(c[o>>2]&-2)+ -1|0}ak(o,K,0);if((a[o]&1)==0){L=v}else{L=c[w>>2]|0}c[p>>2]=L+I;M=L}else{M=y}A=z+12|0;F=c[A>>2]|0;N=z+16|0;if((F|0)==(c[N>>2]|0)){O=Fd[c[(c[z>>2]|0)+36>>2]&127](z)|0}else{O=d[F]|0}if((gm(O&255,u,M,p,s,t,n,q,r,l)|0)!=0){C=B;D=M;break}F=c[A>>2]|0;if((F|0)==(c[N>>2]|0)){Fd[c[(c[z>>2]|0)+40>>2]&127](z)|0;m=z;y=M;continue}else{c[A>>2]=F+1;m=z;y=M;continue}}M=a[n]|0;if((M&1)==0){P=(M&255)>>>1}else{P=c[n+4>>2]|0}if((P|0)!=0?(P=c[r>>2]|0,(P-q|0)<160):0){M=c[s>>2]|0;c[r>>2]=P+4;c[P>>2]=M}M=zr(D,c[p>>2]|0,j,u)|0;u=k;c[u>>2]=M;c[u+4>>2]=J;To(n,q,c[r>>2]|0,j);if((z|0)!=0){if((c[z+12>>2]|0)==(c[z+16>>2]|0)?(Fd[c[(c[z>>2]|0)+36>>2]&127](z)|0)==-1:0){c[f>>2]=0;Q=0}else{Q=z}}else{Q=0}z=(Q|0)==0;do{if((C|0)!=0){if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(!z){break}c[b>>2]=Q;Zj(o);Zj(n);i=e;return}if((Fd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1){c[g>>2]=0;E=54;break}if(z^(C|0)==0){c[b>>2]=Q;Zj(o);Zj(n);i=e;return}}else{E=54}}while(0);if((E|0)==54?!z:0){c[b>>2]=Q;Zj(o);Zj(n);i=e;return}c[j>>2]=c[j>>2]|2;c[b>>2]=Q;Zj(o);Zj(n);i=e;return}function Tl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+16|0;j=b+12|0;k=b;l=b+4|0;m=b+8|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];c[j+0>>2]=c[m+0>>2];Ul(a,0,k,j,f,g,h);i=b;return}



function ls(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;h=i;if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){i=h;return}j=d+28|0;if((c[j>>2]|0)==1){i=h;return}c[j>>2]=f;i=h;return}if((b|0)==(c[d>>2]|0)){if((c[d+16>>2]|0)!=(e|0)?(j=d+20|0,(c[j>>2]|0)!=(e|0)):0){c[d+32>>2]=f;k=d+44|0;if((c[k>>2]|0)==4){i=h;return}l=c[b+12>>2]|0;m=b+(l<<3)+16|0;a:do{if((l|0)>0){n=d+52|0;o=d+53|0;p=d+54|0;q=b+8|0;r=d+24|0;s=0;t=0;u=b+16|0;b:while(1){a[n]=0;a[o]=0;v=c[u+4>>2]|0;w=v>>8;if((v&1|0)==0){x=w}else{x=c[(c[e>>2]|0)+w>>2]|0}w=c[u>>2]|0;Nd[c[(c[w>>2]|0)+20>>2]&31](w,d,e,e+x|0,2-(v>>>1&1)|0,g);if((a[p]|0)!=0){y=s;z=t;break}do{if((a[o]|0)!=0){if((a[n]|0)==0){if((c[q>>2]&1|0)==0){y=s;z=1;break b}else{A=s;B=1;break}}if((c[r>>2]|0)==1){C=27;break a}if((c[q>>2]&2|0)==0){C=27;break a}else{A=1;B=1}}else{A=s;B=t}}while(0);v=u+8|0;if(v>>>0<m>>>0){s=A;t=B;u=v}else{y=A;z=B;break}}if(y){D=z;C=26}else{E=z;C=23}}else{E=0;C=23}}while(0);if((C|0)==23){c[j>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54|0]=1;if(E){C=27}else{C=28}}else{D=E;C=26}}if((C|0)==26){if(D){C=27}else{C=28}}if((C|0)==27){c[k>>2]=3;i=h;return}else if((C|0)==28){c[k>>2]=4;i=h;return}}if((f|0)!=1){i=h;return}c[d+32>>2]=1;i=h;return}k=c[b+12>>2]|0;D=b+(k<<3)+16|0;E=c[b+20>>2]|0;j=E>>8;if((E&1|0)==0){F=j}else{F=c[(c[e>>2]|0)+j>>2]|0}j=c[b+16>>2]|0;Bd[c[(c[j>>2]|0)+24>>2]&3](j,d,e+F|0,(E&2|0)!=0?f:2,g);E=b+24|0;if((k|0)<=1){i=h;return}k=c[b+8>>2]|0;if((k&2|0)==0?(b=d+36|0,(c[b>>2]|0)!=1):0){if((k&1|0)==0){k=d+54|0;F=E;while(1){if((a[k]|0)!=0){C=53;break}if((c[b>>2]|0)==1){C=53;break}j=c[F+4>>2]|0;z=j>>8;if((j&1|0)==0){G=z}else{G=c[(c[e>>2]|0)+z>>2]|0}z=c[F>>2]|0;Bd[c[(c[z>>2]|0)+24>>2]&3](z,d,e+G|0,(j&2|0)!=0?f:2,g);j=F+8|0;if(j>>>0<D>>>0){F=j}else{C=53;break}}if((C|0)==53){i=h;return}}F=d+24|0;G=d+54|0;k=E;while(1){if((a[G]|0)!=0){C=53;break}if((c[b>>2]|0)==1?(c[F>>2]|0)==1:0){C=53;break}j=c[k+4>>2]|0;z=j>>8;if((j&1|0)==0){H=z}else{H=c[(c[e>>2]|0)+z>>2]|0}z=c[k>>2]|0;Bd[c[(c[z>>2]|0)+24>>2]&3](z,d,e+H|0,(j&2|0)!=0?f:2,g);j=k+8|0;if(j>>>0<D>>>0){k=j}else{C=53;break}}if((C|0)==53){i=h;return}}k=d+54|0;H=E;while(1){if((a[k]|0)!=0){C=53;break}E=c[H+4>>2]|0;F=E>>8;if((E&1|0)==0){I=F}else{I=c[(c[e>>2]|0)+F>>2]|0}F=c[H>>2]|0;Bd[c[(c[F>>2]|0)+24>>2]&3](F,d,e+I|0,(E&2|0)!=0?f:2,g);E=H+8|0;if(E>>>0<D>>>0){H=E}else{C=53;break}}if((C|0)==53){i=h;return}}function ms(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){i=h;return}j=d+28|0;if((c[j>>2]|0)==1){i=h;return}c[j>>2]=f;i=h;return}if((b|0)!=(c[d>>2]|0)){j=c[b+8>>2]|0;Bd[c[(c[j>>2]|0)+24>>2]&3](j,d,e,f,g);i=h;return}if((c[d+16>>2]|0)!=(e|0)?(j=d+20|0,(c[j>>2]|0)!=(e|0)):0){c[d+32>>2]=f;k=d+44|0;if((c[k>>2]|0)==4){i=h;return}l=d+52|0;a[l]=0;m=d+53|0;a[m]=0;n=c[b+8>>2]|0;Nd[c[(c[n>>2]|0)+20>>2]&31](n,d,e,e,1,g);if((a[m]|0)!=0){if((a[l]|0)==0){o=1;p=13}}else{o=0;p=13}do{if((p|0)==13){c[j>>2]=e;l=d+40|0;c[l>>2]=(c[l>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54|0]=1;if(o){break}}else{p=16}if((p|0)==16?o:0){break}c[k>>2]=4;i=h;return}}while(0);c[k>>2]=3;i=h;return}if((f|0)!=1){i=h;return}c[d+32>>2]=1;i=h;return}function ns(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;g=i;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){i=g;return}h=d+28|0;if((c[h>>2]|0)==1){i=g;return}c[h>>2]=f;i=g;return}if((c[d>>2]|0)!=(b|0)){i=g;return}if((c[d+16>>2]|0)!=(e|0)?(b=d+20|0,(c[b>>2]|0)!=(e|0)):0){c[d+32>>2]=f;c[b>>2]=e;e=d+40|0;c[e>>2]=(c[e>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54|0]=1}c[d+44>>2]=4;i=g;return}if((f|0)!=1){i=g;return}c[d+32>>2]=1;i=g;return}function os(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;j=i;if((b|0)!=(c[d+8>>2]|0)){k=d+52|0;l=a[k]|0;m=d+53|0;n=a[m]|0;o=c[b+12>>2]|0;p=b+(o<<3)+16|0;a[k]=0;a[m]=0;q=c[b+20>>2]|0;r=q>>8;if((q&1|0)==0){s=r}else{s=c[(c[f>>2]|0)+r>>2]|0}r=c[b+16>>2]|0;Nd[c[(c[r>>2]|0)+20>>2]&31](r,d,e,f+s|0,(q&2|0)!=0?g:2,h);a:do{if((o|0)>1){q=d+24|0;s=b+8|0;r=d+54|0;t=b+24|0;do{if((a[r]|0)!=0){break a}if((a[k]|0)==0){if((a[m]|0)!=0?(c[s>>2]&1|0)==0:0){break a}}else{if((c[q>>2]|0)==1){break a}if((c[s>>2]&2|0)==0){break a}}a[k]=0;a[m]=0;u=c[t+4>>2]|0;v=u>>8;if((u&1|0)==0){w=v}else{w=c[(c[f>>2]|0)+v>>2]|0}v=c[t>>2]|0;Nd[c[(c[v>>2]|0)+20>>2]&31](v,d,e,f+w|0,(u&2|0)!=0?g:2,h);t=t+8|0}while(t>>>0<p>>>0)}}while(0);a[k]=l;a[m]=n;i=j;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){i=j;return}a[d+52|0]=1;f=d+16|0;n=c[f>>2]|0;if((n|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){i=j;return}a[d+54|0]=1;i=j;return}if((n|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;i=j;return}e=d+24|0;n=c[e>>2]|0;if((n|0)==2){c[e>>2]=g;x=g}else{x=n}if(!((c[d+48>>2]|0)==1&(x|0)==1)){i=j;return}a[d+54|0]=1;i=j;return}function ps(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;if((b|0)!=(c[d+8>>2]|0)){k=c[b+8>>2]|0;Nd[c[(c[k>>2]|0)+20>>2]&31](k,d,e,f,g,h);i=j;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){i=j;return}a[d+52|0]=1;f=d+16|0;h=c[f>>2]|0;if((h|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){i=j;return}a[d+54|0]=1;i=j;return}if((h|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;i=j;return}e=d+24|0;h=c[e>>2]|0;if((h|0)==2){c[e>>2]=g;l=g}else{l=h}if(!((c[d+48>>2]|0)==1&(l|0)==1)){i=j;return}a[d+54|0]=1;i=j;return}function qs(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0;h=i;if((c[d+8>>2]|0)!=(b|0)){i=h;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){i=h;return}a[d+52|0]=1;f=d+16|0;b=c[f>>2]|0;if((b|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){i=h;return}a[d+54|0]=1;i=h;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;i=h;return}e=d+24|0;b=c[e>>2]|0;if((b|0)==2){c[e>>2]=g;j=g}else{j=b}if(!((c[d+48>>2]|0)==1&(j|0)==1)){i=h;return}a[d+54|0]=1;i=h;return}function rs(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0;b=i;do{if(a>>>0<245){if(a>>>0<11){d=16}else{d=a+11&-8}e=d>>>3;f=c[5346]|0;g=f>>>e;if((g&3|0)!=0){h=(g&1^1)+e|0;j=h<<1;k=21424+(j<<2)|0;l=21424+(j+2<<2)|0;j=c[l>>2]|0;m=j+8|0;n=c[m>>2]|0;do{if((k|0)!=(n|0)){if(n>>>0<(c[21400>>2]|0)>>>0){Hc()}o=n+12|0;if((c[o>>2]|0)==(j|0)){c[o>>2]=k;c[l>>2]=n;break}else{Hc()}}else{c[5346]=f&~(1<<h)}}while(0);n=h<<3;c[j+4>>2]=n|3;l=j+(n|4)|0;c[l>>2]=c[l>>2]|1;p=m;i=b;return p|0}if(d>>>0>(c[21392>>2]|0)>>>0){if((g|0)!=0){l=2<<e;n=g<<e&(l|0-l);l=(n&0-n)+ -1|0;n=l>>>12&16;k=l>>>n;l=k>>>5&8;o=k>>>l;k=o>>>2&4;q=o>>>k;o=q>>>1&2;r=q>>>o;q=r>>>1&1;s=(l|n|k|o|q)+(r>>>q)|0;q=s<<1;r=21424+(q<<2)|0;o=21424+(q+2<<2)|0;q=c[o>>2]|0;k=q+8|0;n=c[k>>2]|0;do{if((r|0)!=(n|0)){if(n>>>0<(c[21400>>2]|0)>>>0){Hc()}l=n+12|0;if((c[l>>2]|0)==(q|0)){c[l>>2]=r;c[o>>2]=n;break}else{Hc()}}else{c[5346]=f&~(1<<s)}}while(0);f=s<<3;n=f-d|0;c[q+4>>2]=d|3;o=q+d|0;c[q+(d|4)>>2]=n|1;c[q+f>>2]=n;f=c[21392>>2]|0;if((f|0)!=0){r=c[21404>>2]|0;e=f>>>3;f=e<<1;g=21424+(f<<2)|0;m=c[5346]|0;j=1<<e;if((m&j|0)!=0){e=21424+(f+2<<2)|0;h=c[e>>2]|0;if(h>>>0<(c[21400>>2]|0)>>>0){Hc()}else{t=e;u=h}}else{c[5346]=m|j;t=21424+(f+2<<2)|0;u=g}c[t>>2]=r;c[u+12>>2]=r;c[r+8>>2]=u;c[r+12>>2]=g}c[21392>>2]=n;c[21404>>2]=o;p=k;i=b;return p|0}o=c[21388>>2]|0;if((o|0)!=0){n=(o&0-o)+ -1|0;o=n>>>12&16;g=n>>>o;n=g>>>5&8;r=g>>>n;g=r>>>2&4;f=r>>>g;r=f>>>1&2;j=f>>>r;f=j>>>1&1;m=c[21688+((n|o|g|r|f)+(j>>>f)<<2)>>2]|0;f=(c[m+4>>2]&-8)-d|0;j=m;r=m;while(1){m=c[j+16>>2]|0;if((m|0)==0){g=c[j+20>>2]|0;if((g|0)==0){break}else{v=g}}else{v=m}m=(c[v+4>>2]&-8)-d|0;g=m>>>0<f>>>0;f=g?m:f;j=v;r=g?v:r}j=c[21400>>2]|0;if(r>>>0<j>>>0){Hc()}k=r+d|0;if(!(r>>>0<k>>>0)){Hc()}q=c[r+24>>2]|0;s=c[r+12>>2]|0;do{if((s|0)==(r|0)){g=r+20|0;m=c[g>>2]|0;if((m|0)==0){o=r+16|0;n=c[o>>2]|0;if((n|0)==0){w=0;break}else{x=n;y=o}}else{x=m;y=g}while(1){g=x+20|0;m=c[g>>2]|0;if((m|0)!=0){x=m;y=g;continue}g=x+16|0;m=c[g>>2]|0;if((m|0)==0){break}else{x=m;y=g}}if(y>>>0<j>>>0){Hc()}else{c[y>>2]=0;w=x;break}}else{g=c[r+8>>2]|0;if(g>>>0<j>>>0){Hc()}m=g+12|0;if((c[m>>2]|0)!=(r|0)){Hc()}o=s+8|0;if((c[o>>2]|0)==(r|0)){c[m>>2]=s;c[o>>2]=g;w=s;break}else{Hc()}}}while(0);do{if((q|0)!=0){s=c[r+28>>2]|0;j=21688+(s<<2)|0;if((r|0)==(c[j>>2]|0)){c[j>>2]=w;if((w|0)==0){c[21388>>2]=c[21388>>2]&~(1<<s);break}}else{if(q>>>0<(c[21400>>2]|0)>>>0){Hc()}s=q+16|0;if((c[s>>2]|0)==(r|0)){c[s>>2]=w}else{c[q+20>>2]=w}if((w|0)==0){break}}if(w>>>0<(c[21400>>2]|0)>>>0){Hc()}c[w+24>>2]=q;s=c[r+16>>2]|0;do{if((s|0)!=0){if(s>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[w+16>>2]=s;c[s+24>>2]=w;break}}}while(0);s=c[r+20>>2]|0;if((s|0)!=0){if(s>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[w+20>>2]=s;c[s+24>>2]=w;break}}}}while(0);if(f>>>0<16){q=f+d|0;c[r+4>>2]=q|3;s=r+(q+4)|0;c[s>>2]=c[s>>2]|1}else{c[r+4>>2]=d|3;c[r+(d|4)>>2]=f|1;c[r+(f+d)>>2]=f;s=c[21392>>2]|0;if((s|0)!=0){q=c[21404>>2]|0;j=s>>>3;s=j<<1;g=21424+(s<<2)|0;o=c[5346]|0;m=1<<j;if((o&m|0)!=0){j=21424+(s+2<<2)|0;n=c[j>>2]|0;if(n>>>0<(c[21400>>2]|0)>>>0){Hc()}else{z=j;A=n}}else{c[5346]=o|m;z=21424+(s+2<<2)|0;A=g}c[z>>2]=q;c[A+12>>2]=q;c[q+8>>2]=A;c[q+12>>2]=g}c[21392>>2]=f;c[21404>>2]=k}p=r+8|0;i=b;return p|0}else{B=d}}else{B=d}}else{if(!(a>>>0>4294967231)){g=a+11|0;q=g&-8;s=c[21388>>2]|0;if((s|0)!=0){m=0-q|0;o=g>>>8;if((o|0)!=0){if(q>>>0>16777215){C=31}else{g=(o+1048320|0)>>>16&8;n=o<<g;o=(n+520192|0)>>>16&4;j=n<<o;n=(j+245760|0)>>>16&2;h=14-(o|g|n)+(j<<n>>>15)|0;C=q>>>(h+7|0)&1|h<<1}}else{C=0}h=c[21688+(C<<2)>>2]|0;a:do{if((h|0)==0){D=m;E=0;F=0}else{if((C|0)==31){G=0}else{G=25-(C>>>1)|0}n=m;j=0;g=q<<G;o=h;e=0;while(1){l=c[o+4>>2]&-8;H=l-q|0;if(H>>>0<n>>>0){if((l|0)==(q|0)){D=H;E=o;F=o;break a}else{I=H;J=o}}else{I=n;J=e}H=c[o+20>>2]|0;l=c[o+(g>>>31<<2)+16>>2]|0;K=(H|0)==0|(H|0)==(l|0)?j:H;if((l|0)==0){D=I;E=K;F=J;break}else{n=I;j=K;g=g<<1;o=l;e=J}}}}while(0);if((E|0)==0&(F|0)==0){h=2<<C;m=s&(h|0-h);if((m|0)==0){B=q;break}h=(m&0-m)+ -1|0;m=h>>>12&16;r=h>>>m;h=r>>>5&8;k=r>>>h;r=k>>>2&4;f=k>>>r;k=f>>>1&2;e=f>>>k;f=e>>>1&1;L=c[21688+((h|m|r|k|f)+(e>>>f)<<2)>>2]|0}else{L=E}if((L|0)==0){M=D;N=F}else{f=D;e=L;k=F;while(1){r=(c[e+4>>2]&-8)-q|0;m=r>>>0<f>>>0;h=m?r:f;r=m?e:k;m=c[e+16>>2]|0;if((m|0)!=0){f=h;e=m;k=r;continue}m=c[e+20>>2]|0;if((m|0)==0){M=h;N=r;break}else{f=h;e=m;k=r}}}if((N|0)!=0?M>>>0<((c[21392>>2]|0)-q|0)>>>0:0){k=c[21400>>2]|0;if(N>>>0<k>>>0){Hc()}e=N+q|0;if(!(N>>>0<e>>>0)){Hc()}f=c[N+24>>2]|0;s=c[N+12>>2]|0;do{if((s|0)==(N|0)){r=N+20|0;m=c[r>>2]|0;if((m|0)==0){h=N+16|0;o=c[h>>2]|0;if((o|0)==0){O=0;break}else{P=o;Q=h}}else{P=m;Q=r}while(1){r=P+20|0;m=c[r>>2]|0;if((m|0)!=0){P=m;Q=r;continue}r=P+16|0;m=c[r>>2]|0;if((m|0)==0){break}else{P=m;Q=r}}if(Q>>>0<k>>>0){Hc()}else{c[Q>>2]=0;O=P;break}}else{r=c[N+8>>2]|0;if(r>>>0<k>>>0){Hc()}m=r+12|0;if((c[m>>2]|0)!=(N|0)){Hc()}h=s+8|0;if((c[h>>2]|0)==(N|0)){c[m>>2]=s;c[h>>2]=r;O=s;break}else{Hc()}}}while(0);do{if((f|0)!=0){s=c[N+28>>2]|0;k=21688+(s<<2)|0;if((N|0)==(c[k>>2]|0)){c[k>>2]=O;if((O|0)==0){c[21388>>2]=c[21388>>2]&~(1<<s);break}}else{if(f>>>0<(c[21400>>2]|0)>>>0){Hc()}s=f+16|0;if((c[s>>2]|0)==(N|0)){c[s>>2]=O}else{c[f+20>>2]=O}if((O|0)==0){break}}if(O>>>0<(c[21400>>2]|0)>>>0){Hc()}c[O+24>>2]=f;s=c[N+16>>2]|0;do{if((s|0)!=0){if(s>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[O+16>>2]=s;c[s+24>>2]=O;break}}}while(0);s=c[N+20>>2]|0;if((s|0)!=0){if(s>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[O+20>>2]=s;c[s+24>>2]=O;break}}}}while(0);b:do{if(!(M>>>0<16)){c[N+4>>2]=q|3;c[N+(q|4)>>2]=M|1;c[N+(M+q)>>2]=M;f=M>>>3;if(M>>>0<256){s=f<<1;k=21424+(s<<2)|0;r=c[5346]|0;h=1<<f;if((r&h|0)!=0){f=21424+(s+2<<2)|0;m=c[f>>2]|0;if(m>>>0<(c[21400>>2]|0)>>>0){Hc()}else{R=f;S=m}}else{c[5346]=r|h;R=21424+(s+2<<2)|0;S=k}c[R>>2]=e;c[S+12>>2]=e;c[N+(q+8)>>2]=S;c[N+(q+12)>>2]=k;break}k=M>>>8;if((k|0)!=0){if(M>>>0>16777215){T=31}else{s=(k+1048320|0)>>>16&8;h=k<<s;k=(h+520192|0)>>>16&4;r=h<<k;h=(r+245760|0)>>>16&2;m=14-(k|s|h)+(r<<h>>>15)|0;T=M>>>(m+7|0)&1|m<<1}}else{T=0}m=21688+(T<<2)|0;c[N+(q+28)>>2]=T;c[N+(q+20)>>2]=0;c[N+(q+16)>>2]=0;h=c[21388>>2]|0;r=1<<T;if((h&r|0)==0){c[21388>>2]=h|r;c[m>>2]=e;c[N+(q+24)>>2]=m;c[N+(q+12)>>2]=e;c[N+(q+8)>>2]=e;break}r=c[m>>2]|0;if((T|0)==31){U=0}else{U=25-(T>>>1)|0}c:do{if((c[r+4>>2]&-8|0)!=(M|0)){m=M<<U;h=r;while(1){V=h+(m>>>31<<2)+16|0;s=c[V>>2]|0;if((s|0)==0){break}if((c[s+4>>2]&-8|0)==(M|0)){W=s;break c}else{m=m<<1;h=s}}if(V>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[V>>2]=e;c[N+(q+24)>>2]=h;c[N+(q+12)>>2]=e;c[N+(q+8)>>2]=e;break b}}else{W=r}}while(0);r=W+8|0;m=c[r>>2]|0;s=c[21400>>2]|0;if(W>>>0<s>>>0){Hc()}if(m>>>0<s>>>0){Hc()}else{c[m+12>>2]=e;c[r>>2]=e;c[N+(q+8)>>2]=m;c[N+(q+12)>>2]=W;c[N+(q+24)>>2]=0;break}}else{m=M+q|0;c[N+4>>2]=m|3;r=N+(m+4)|0;c[r>>2]=c[r>>2]|1}}while(0);p=N+8|0;i=b;return p|0}else{B=q}}else{B=q}}else{B=-1}}}while(0);N=c[21392>>2]|0;if(!(B>>>0>N>>>0)){M=N-B|0;W=c[21404>>2]|0;if(M>>>0>15){c[21404>>2]=W+B;c[21392>>2]=M;c[W+(B+4)>>2]=M|1;c[W+N>>2]=M;c[W+4>>2]=B|3}else{c[21392>>2]=0;c[21404>>2]=0;c[W+4>>2]=N|3;M=W+(N+4)|0;c[M>>2]=c[M>>2]|1}p=W+8|0;i=b;return p|0}W=c[21396>>2]|0;if(B>>>0<W>>>0){M=W-B|0;c[21396>>2]=M;W=c[21408>>2]|0;c[21408>>2]=W+B;c[W+(B+4)>>2]=M|1;c[W+4>>2]=B|3;p=W+8|0;i=b;return p|0}do{if((c[5464]|0)==0){W=Fc(30)|0;if((W+ -1&W|0)==0){c[21864>>2]=W;c[21860>>2]=W;c[21868>>2]=-1;c[21872>>2]=-1;c[21876>>2]=0;c[21828>>2]=0;c[5464]=(Xb(0)|0)&-16^1431655768;break}else{Hc()}}}while(0);W=B+48|0;M=c[21864>>2]|0;N=B+47|0;V=M+N|0;U=0-M|0;M=V&U;if(!(M>>>0>B>>>0)){p=0;i=b;return p|0}T=c[21824>>2]|0;if((T|0)!=0?(S=c[21816>>2]|0,R=S+M|0,R>>>0<=S>>>0|R>>>0>T>>>0):0){p=0;i=b;return p|0}d:do{if((c[21828>>2]&4|0)==0){T=c[21408>>2]|0;e:do{if((T|0)!=0){R=21832|0;while(1){S=c[R>>2]|0;if(!(S>>>0>T>>>0)?(X=R+4|0,(S+(c[X>>2]|0)|0)>>>0>T>>>0):0){break}S=c[R+8>>2]|0;if((S|0)==0){Y=182;break e}else{R=S}}if((R|0)!=0){S=V-(c[21396>>2]|0)&U;if(S>>>0<2147483647){O=Wa(S|0)|0;P=(O|0)==((c[R>>2]|0)+(c[X>>2]|0)|0);Z=O;_=S;$=P?O:-1;aa=P?S:0;Y=191}else{ba=0}}else{Y=182}}else{Y=182}}while(0);do{if((Y|0)==182){T=Wa(0)|0;if((T|0)!=(-1|0)){q=T;S=c[21860>>2]|0;P=S+ -1|0;if((P&q|0)==0){ca=M}else{ca=M-q+(P+q&0-S)|0}S=c[21816>>2]|0;q=S+ca|0;if(ca>>>0>B>>>0&ca>>>0<2147483647){P=c[21824>>2]|0;if((P|0)!=0?q>>>0<=S>>>0|q>>>0>P>>>0:0){ba=0;break}P=Wa(ca|0)|0;q=(P|0)==(T|0);Z=P;_=ca;$=q?T:-1;aa=q?ca:0;Y=191}else{ba=0}}else{ba=0}}}while(0);f:do{if((Y|0)==191){q=0-_|0;if(($|0)!=(-1|0)){da=$;ea=aa;Y=202;break d}do{if((Z|0)!=(-1|0)&_>>>0<2147483647&_>>>0<W>>>0?(T=c[21864>>2]|0,P=N-_+T&0-T,P>>>0<2147483647):0){if((Wa(P|0)|0)==(-1|0)){Wa(q|0)|0;ba=aa;break f}else{fa=P+_|0;break}}else{fa=_}}while(0);if((Z|0)==(-1|0)){ba=aa}else{da=Z;ea=fa;Y=202;break d}}}while(0);c[21828>>2]=c[21828>>2]|4;ga=ba;Y=199}else{ga=0;Y=199}}while(0);if((((Y|0)==199?M>>>0<2147483647:0)?(ba=Wa(M|0)|0,M=Wa(0)|0,(M|0)!=(-1|0)&(ba|0)!=(-1|0)&ba>>>0<M>>>0):0)?(fa=M-ba|0,M=fa>>>0>(B+40|0)>>>0,M):0){da=ba;ea=M?fa:ga;Y=202}if((Y|0)==202){ga=(c[21816>>2]|0)+ea|0;c[21816>>2]=ga;if(ga>>>0>(c[21820>>2]|0)>>>0){c[21820>>2]=ga}ga=c[21408>>2]|0;g:do{if((ga|0)!=0){fa=21832|0;while(1){ha=c[fa>>2]|0;ia=fa+4|0;ja=c[ia>>2]|0;if((da|0)==(ha+ja|0)){Y=214;break}M=c[fa+8>>2]|0;if((M|0)==0){break}else{fa=M}}if(((Y|0)==214?(c[fa+12>>2]&8|0)==0:0)?ga>>>0>=ha>>>0&ga>>>0<da>>>0:0){c[ia>>2]=ja+ea;M=(c[21396>>2]|0)+ea|0;ba=ga+8|0;if((ba&7|0)==0){ka=0}else{ka=0-ba&7}ba=M-ka|0;c[21408>>2]=ga+ka;c[21396>>2]=ba;c[ga+(ka+4)>>2]=ba|1;c[ga+(M+4)>>2]=40;c[21412>>2]=c[21872>>2];break}if(da>>>0<(c[21400>>2]|0)>>>0){c[21400>>2]=da}M=da+ea|0;ba=21832|0;while(1){if((c[ba>>2]|0)==(M|0)){Y=224;break}Z=c[ba+8>>2]|0;if((Z|0)==0){break}else{ba=Z}}if((Y|0)==224?(c[ba+12>>2]&8|0)==0:0){c[ba>>2]=da;M=ba+4|0;c[M>>2]=(c[M>>2]|0)+ea;M=da+8|0;if((M&7|0)==0){la=0}else{la=0-M&7}M=da+(ea+8)|0;if((M&7|0)==0){ma=0}else{ma=0-M&7}M=da+(ma+ea)|0;fa=la+B|0;Z=da+fa|0;aa=M-(da+la)-B|0;c[da+(la+4)>>2]=B|3;h:do{if((M|0)!=(c[21408>>2]|0)){if((M|0)==(c[21404>>2]|0)){_=(c[21392>>2]|0)+aa|0;c[21392>>2]=_;c[21404>>2]=Z;c[da+(fa+4)>>2]=_|1;c[da+(_+fa)>>2]=_;break}_=ea+4|0;N=c[da+(_+ma)>>2]|0;if((N&3|0)==1){W=N&-8;$=N>>>3;do{if(!(N>>>0<256)){ca=c[da+((ma|24)+ea)>>2]|0;X=c[da+(ea+12+ma)>>2]|0;do{if((X|0)==(M|0)){U=ma|16;V=da+(_+U)|0;q=c[V>>2]|0;if((q|0)==0){R=da+(U+ea)|0;U=c[R>>2]|0;if((U|0)==0){na=0;break}else{oa=U;pa=R}}else{oa=q;pa=V}while(1){V=oa+20|0;q=c[V>>2]|0;if((q|0)!=0){oa=q;pa=V;continue}V=oa+16|0;q=c[V>>2]|0;if((q|0)==0){break}else{oa=q;pa=V}}if(pa>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[pa>>2]=0;na=oa;break}}else{V=c[da+((ma|8)+ea)>>2]|0;if(V>>>0<(c[21400>>2]|0)>>>0){Hc()}q=V+12|0;if((c[q>>2]|0)!=(M|0)){Hc()}R=X+8|0;if((c[R>>2]|0)==(M|0)){c[q>>2]=X;c[R>>2]=V;na=X;break}else{Hc()}}}while(0);if((ca|0)!=0){X=c[da+(ea+28+ma)>>2]|0;h=21688+(X<<2)|0;if((M|0)==(c[h>>2]|0)){c[h>>2]=na;if((na|0)==0){c[21388>>2]=c[21388>>2]&~(1<<X);break}}else{if(ca>>>0<(c[21400>>2]|0)>>>0){Hc()}X=ca+16|0;if((c[X>>2]|0)==(M|0)){c[X>>2]=na}else{c[ca+20>>2]=na}if((na|0)==0){break}}if(na>>>0<(c[21400>>2]|0)>>>0){Hc()}c[na+24>>2]=ca;X=ma|16;h=c[da+(X+ea)>>2]|0;do{if((h|0)!=0){if(h>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[na+16>>2]=h;c[h+24>>2]=na;break}}}while(0);h=c[da+(_+X)>>2]|0;if((h|0)!=0){if(h>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[na+20>>2]=h;c[h+24>>2]=na;break}}}}else{h=c[da+((ma|8)+ea)>>2]|0;ca=c[da+(ea+12+ma)>>2]|0;V=21424+($<<1<<2)|0;if((h|0)!=(V|0)){if(h>>>0<(c[21400>>2]|0)>>>0){Hc()}if((c[h+12>>2]|0)!=(M|0)){Hc()}}if((ca|0)==(h|0)){c[5346]=c[5346]&~(1<<$);break}if((ca|0)!=(V|0)){if(ca>>>0<(c[21400>>2]|0)>>>0){Hc()}V=ca+8|0;if((c[V>>2]|0)==(M|0)){qa=V}else{Hc()}}else{qa=ca+8|0}c[h+12>>2]=ca;c[qa>>2]=h}}while(0);ra=da+((W|ma)+ea)|0;sa=W+aa|0}else{ra=M;sa=aa}$=ra+4|0;c[$>>2]=c[$>>2]&-2;c[da+(fa+4)>>2]=sa|1;c[da+(sa+fa)>>2]=sa;$=sa>>>3;if(sa>>>0<256){_=$<<1;N=21424+(_<<2)|0;h=c[5346]|0;ca=1<<$;if((h&ca|0)!=0){$=21424+(_+2<<2)|0;V=c[$>>2]|0;if(V>>>0<(c[21400>>2]|0)>>>0){Hc()}else{ta=$;ua=V}}else{c[5346]=h|ca;ta=21424+(_+2<<2)|0;ua=N}c[ta>>2]=Z;c[ua+12>>2]=Z;c[da+(fa+8)>>2]=ua;c[da+(fa+12)>>2]=N;break}N=sa>>>8;if((N|0)!=0){if(sa>>>0>16777215){va=31}else{_=(N+1048320|0)>>>16&8;ca=N<<_;N=(ca+520192|0)>>>16&4;h=ca<<N;ca=(h+245760|0)>>>16&2;V=14-(N|_|ca)+(h<<ca>>>15)|0;va=sa>>>(V+7|0)&1|V<<1}}else{va=0}V=21688+(va<<2)|0;c[da+(fa+28)>>2]=va;c[da+(fa+20)>>2]=0;c[da+(fa+16)>>2]=0;ca=c[21388>>2]|0;h=1<<va;if((ca&h|0)==0){c[21388>>2]=ca|h;c[V>>2]=Z;c[da+(fa+24)>>2]=V;c[da+(fa+12)>>2]=Z;c[da+(fa+8)>>2]=Z;break}h=c[V>>2]|0;if((va|0)==31){wa=0}else{wa=25-(va>>>1)|0}i:do{if((c[h+4>>2]&-8|0)!=(sa|0)){V=sa<<wa;ca=h;while(1){xa=ca+(V>>>31<<2)+16|0;_=c[xa>>2]|0;if((_|0)==0){break}if((c[_+4>>2]&-8|0)==(sa|0)){ya=_;break i}else{V=V<<1;ca=_}}if(xa>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[xa>>2]=Z;c[da+(fa+24)>>2]=ca;c[da+(fa+12)>>2]=Z;c[da+(fa+8)>>2]=Z;break h}}else{ya=h}}while(0);h=ya+8|0;W=c[h>>2]|0;V=c[21400>>2]|0;if(ya>>>0<V>>>0){Hc()}if(W>>>0<V>>>0){Hc()}else{c[W+12>>2]=Z;c[h>>2]=Z;c[da+(fa+8)>>2]=W;c[da+(fa+12)>>2]=ya;c[da+(fa+24)>>2]=0;break}}else{W=(c[21396>>2]|0)+aa|0;c[21396>>2]=W;c[21408>>2]=Z;c[da+(fa+4)>>2]=W|1}}while(0);p=da+(la|8)|0;i=b;return p|0}fa=21832|0;while(1){za=c[fa>>2]|0;if(!(za>>>0>ga>>>0)?(Aa=c[fa+4>>2]|0,Ba=za+Aa|0,Ba>>>0>ga>>>0):0){break}fa=c[fa+8>>2]|0}fa=za+(Aa+ -39)|0;if((fa&7|0)==0){Ca=0}else{Ca=0-fa&7}fa=za+(Aa+ -47+Ca)|0;Z=fa>>>0<(ga+16|0)>>>0?ga:fa;fa=Z+8|0;aa=da+8|0;if((aa&7|0)==0){Da=0}else{Da=0-aa&7}aa=ea+ -40-Da|0;c[21408>>2]=da+Da;c[21396>>2]=aa;c[da+(Da+4)>>2]=aa|1;c[da+(ea+ -36)>>2]=40;c[21412>>2]=c[21872>>2];c[Z+4>>2]=27;c[fa+0>>2]=c[21832>>2];c[fa+4>>2]=c[21836>>2];c[fa+8>>2]=c[21840>>2];c[fa+12>>2]=c[21844>>2];c[21832>>2]=da;c[21836>>2]=ea;c[21844>>2]=0;c[21840>>2]=fa;fa=Z+28|0;c[fa>>2]=7;if((Z+32|0)>>>0<Ba>>>0){aa=fa;while(1){fa=aa+4|0;c[fa>>2]=7;if((aa+8|0)>>>0<Ba>>>0){aa=fa}else{break}}}if((Z|0)!=(ga|0)){aa=Z-ga|0;fa=ga+(aa+4)|0;c[fa>>2]=c[fa>>2]&-2;c[ga+4>>2]=aa|1;c[ga+aa>>2]=aa;fa=aa>>>3;if(aa>>>0<256){M=fa<<1;ba=21424+(M<<2)|0;W=c[5346]|0;h=1<<fa;if((W&h|0)!=0){fa=21424+(M+2<<2)|0;V=c[fa>>2]|0;if(V>>>0<(c[21400>>2]|0)>>>0){Hc()}else{Ea=fa;Fa=V}}else{c[5346]=W|h;Ea=21424+(M+2<<2)|0;Fa=ba}c[Ea>>2]=ga;c[Fa+12>>2]=ga;c[ga+8>>2]=Fa;c[ga+12>>2]=ba;break}ba=aa>>>8;if((ba|0)!=0){if(aa>>>0>16777215){Ga=31}else{M=(ba+1048320|0)>>>16&8;h=ba<<M;ba=(h+520192|0)>>>16&4;W=h<<ba;h=(W+245760|0)>>>16&2;V=14-(ba|M|h)+(W<<h>>>15)|0;Ga=aa>>>(V+7|0)&1|V<<1}}else{Ga=0}V=21688+(Ga<<2)|0;c[ga+28>>2]=Ga;c[ga+20>>2]=0;c[ga+16>>2]=0;h=c[21388>>2]|0;W=1<<Ga;if((h&W|0)==0){c[21388>>2]=h|W;c[V>>2]=ga;c[ga+24>>2]=V;c[ga+12>>2]=ga;c[ga+8>>2]=ga;break}W=c[V>>2]|0;if((Ga|0)==31){Ha=0}else{Ha=25-(Ga>>>1)|0}j:do{if((c[W+4>>2]&-8|0)!=(aa|0)){V=aa<<Ha;h=W;while(1){Ia=h+(V>>>31<<2)+16|0;M=c[Ia>>2]|0;if((M|0)==0){break}if((c[M+4>>2]&-8|0)==(aa|0)){Ja=M;break j}else{V=V<<1;h=M}}if(Ia>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[Ia>>2]=ga;c[ga+24>>2]=h;c[ga+12>>2]=ga;c[ga+8>>2]=ga;break g}}else{Ja=W}}while(0);W=Ja+8|0;aa=c[W>>2]|0;Z=c[21400>>2]|0;if(Ja>>>0<Z>>>0){Hc()}if(aa>>>0<Z>>>0){Hc()}else{c[aa+12>>2]=ga;c[W>>2]=ga;c[ga+8>>2]=aa;c[ga+12>>2]=Ja;c[ga+24>>2]=0;break}}}else{aa=c[21400>>2]|0;if((aa|0)==0|da>>>0<aa>>>0){c[21400>>2]=da}c[21832>>2]=da;c[21836>>2]=ea;c[21844>>2]=0;c[21420>>2]=c[5464];c[21416>>2]=-1;aa=0;do{W=aa<<1;Z=21424+(W<<2)|0;c[21424+(W+3<<2)>>2]=Z;c[21424+(W+2<<2)>>2]=Z;aa=aa+1|0}while((aa|0)!=32);aa=da+8|0;if((aa&7|0)==0){Ka=0}else{Ka=0-aa&7}aa=ea+ -40-Ka|0;c[21408>>2]=da+Ka;c[21396>>2]=aa;c[da+(Ka+4)>>2]=aa|1;c[da+(ea+ -36)>>2]=40;c[21412>>2]=c[21872>>2]}}while(0);ea=c[21396>>2]|0;if(ea>>>0>B>>>0){da=ea-B|0;c[21396>>2]=da;ea=c[21408>>2]|0;c[21408>>2]=ea+B;c[ea+(B+4)>>2]=da|1;c[ea+4>>2]=B|3;p=ea+8|0;i=b;return p|0}}c[(oc()|0)>>2]=12;p=0;i=b;return p|0}function ss(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;b=i;if((a|0)==0){i=b;return}d=a+ -8|0;e=c[21400>>2]|0;if(d>>>0<e>>>0){Hc()}f=c[a+ -4>>2]|0;g=f&3;if((g|0)==1){Hc()}h=f&-8;j=a+(h+ -8)|0;do{if((f&1|0)==0){k=c[d>>2]|0;if((g|0)==0){i=b;return}l=-8-k|0;m=a+l|0;n=k+h|0;if(m>>>0<e>>>0){Hc()}if((m|0)==(c[21404>>2]|0)){o=a+(h+ -4)|0;if((c[o>>2]&3|0)!=3){p=m;q=n;break}c[21392>>2]=n;c[o>>2]=c[o>>2]&-2;c[a+(l+4)>>2]=n|1;c[j>>2]=n;i=b;return}o=k>>>3;if(k>>>0<256){k=c[a+(l+8)>>2]|0;r=c[a+(l+12)>>2]|0;s=21424+(o<<1<<2)|0;if((k|0)!=(s|0)){if(k>>>0<e>>>0){Hc()}if((c[k+12>>2]|0)!=(m|0)){Hc()}}if((r|0)==(k|0)){c[5346]=c[5346]&~(1<<o);p=m;q=n;break}if((r|0)!=(s|0)){if(r>>>0<e>>>0){Hc()}s=r+8|0;if((c[s>>2]|0)==(m|0)){t=s}else{Hc()}}else{t=r+8|0}c[k+12>>2]=r;c[t>>2]=k;p=m;q=n;break}k=c[a+(l+24)>>2]|0;r=c[a+(l+12)>>2]|0;do{if((r|0)==(m|0)){s=a+(l+20)|0;o=c[s>>2]|0;if((o|0)==0){u=a+(l+16)|0;v=c[u>>2]|0;if((v|0)==0){w=0;break}else{x=v;y=u}}else{x=o;y=s}while(1){s=x+20|0;o=c[s>>2]|0;if((o|0)!=0){x=o;y=s;continue}s=x+16|0;o=c[s>>2]|0;if((o|0)==0){break}else{x=o;y=s}}if(y>>>0<e>>>0){Hc()}else{c[y>>2]=0;w=x;break}}else{s=c[a+(l+8)>>2]|0;if(s>>>0<e>>>0){Hc()}o=s+12|0;if((c[o>>2]|0)!=(m|0)){Hc()}u=r+8|0;if((c[u>>2]|0)==(m|0)){c[o>>2]=r;c[u>>2]=s;w=r;break}else{Hc()}}}while(0);if((k|0)!=0){r=c[a+(l+28)>>2]|0;s=21688+(r<<2)|0;if((m|0)==(c[s>>2]|0)){c[s>>2]=w;if((w|0)==0){c[21388>>2]=c[21388>>2]&~(1<<r);p=m;q=n;break}}else{if(k>>>0<(c[21400>>2]|0)>>>0){Hc()}r=k+16|0;if((c[r>>2]|0)==(m|0)){c[r>>2]=w}else{c[k+20>>2]=w}if((w|0)==0){p=m;q=n;break}}if(w>>>0<(c[21400>>2]|0)>>>0){Hc()}c[w+24>>2]=k;r=c[a+(l+16)>>2]|0;do{if((r|0)!=0){if(r>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[w+16>>2]=r;c[r+24>>2]=w;break}}}while(0);r=c[a+(l+20)>>2]|0;if((r|0)!=0){if(r>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[w+20>>2]=r;c[r+24>>2]=w;p=m;q=n;break}}else{p=m;q=n}}else{p=m;q=n}}else{p=d;q=h}}while(0);if(!(p>>>0<j>>>0)){Hc()}d=a+(h+ -4)|0;w=c[d>>2]|0;if((w&1|0)==0){Hc()}if((w&2|0)==0){if((j|0)==(c[21408>>2]|0)){e=(c[21396>>2]|0)+q|0;c[21396>>2]=e;c[21408>>2]=p;c[p+4>>2]=e|1;if((p|0)!=(c[21404>>2]|0)){i=b;return}c[21404>>2]=0;c[21392>>2]=0;i=b;return}if((j|0)==(c[21404>>2]|0)){e=(c[21392>>2]|0)+q|0;c[21392>>2]=e;c[21404>>2]=p;c[p+4>>2]=e|1;c[p+e>>2]=e;i=b;return}e=(w&-8)+q|0;x=w>>>3;do{if(!(w>>>0<256)){y=c[a+(h+16)>>2]|0;t=c[a+(h|4)>>2]|0;do{if((t|0)==(j|0)){g=a+(h+12)|0;f=c[g>>2]|0;if((f|0)==0){r=a+(h+8)|0;k=c[r>>2]|0;if((k|0)==0){z=0;break}else{A=k;B=r}}else{A=f;B=g}while(1){g=A+20|0;f=c[g>>2]|0;if((f|0)!=0){A=f;B=g;continue}g=A+16|0;f=c[g>>2]|0;if((f|0)==0){break}else{A=f;B=g}}if(B>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[B>>2]=0;z=A;break}}else{g=c[a+h>>2]|0;if(g>>>0<(c[21400>>2]|0)>>>0){Hc()}f=g+12|0;if((c[f>>2]|0)!=(j|0)){Hc()}r=t+8|0;if((c[r>>2]|0)==(j|0)){c[f>>2]=t;c[r>>2]=g;z=t;break}else{Hc()}}}while(0);if((y|0)!=0){t=c[a+(h+20)>>2]|0;n=21688+(t<<2)|0;if((j|0)==(c[n>>2]|0)){c[n>>2]=z;if((z|0)==0){c[21388>>2]=c[21388>>2]&~(1<<t);break}}else{if(y>>>0<(c[21400>>2]|0)>>>0){Hc()}t=y+16|0;if((c[t>>2]|0)==(j|0)){c[t>>2]=z}else{c[y+20>>2]=z}if((z|0)==0){break}}if(z>>>0<(c[21400>>2]|0)>>>0){Hc()}c[z+24>>2]=y;t=c[a+(h+8)>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[z+16>>2]=t;c[t+24>>2]=z;break}}}while(0);t=c[a+(h+12)>>2]|0;if((t|0)!=0){if(t>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[z+20>>2]=t;c[t+24>>2]=z;break}}}}else{t=c[a+h>>2]|0;y=c[a+(h|4)>>2]|0;n=21424+(x<<1<<2)|0;if((t|0)!=(n|0)){if(t>>>0<(c[21400>>2]|0)>>>0){Hc()}if((c[t+12>>2]|0)!=(j|0)){Hc()}}if((y|0)==(t|0)){c[5346]=c[5346]&~(1<<x);break}if((y|0)!=(n|0)){if(y>>>0<(c[21400>>2]|0)>>>0){Hc()}n=y+8|0;if((c[n>>2]|0)==(j|0)){C=n}else{Hc()}}else{C=y+8|0}c[t+12>>2]=y;c[C>>2]=t}}while(0);c[p+4>>2]=e|1;c[p+e>>2]=e;if((p|0)==(c[21404>>2]|0)){c[21392>>2]=e;i=b;return}else{D=e}}else{c[d>>2]=w&-2;c[p+4>>2]=q|1;c[p+q>>2]=q;D=q}q=D>>>3;if(D>>>0<256){w=q<<1;d=21424+(w<<2)|0;e=c[5346]|0;C=1<<q;if((e&C|0)!=0){q=21424+(w+2<<2)|0;j=c[q>>2]|0;if(j>>>0<(c[21400>>2]|0)>>>0){Hc()}else{E=q;F=j}}else{c[5346]=e|C;E=21424+(w+2<<2)|0;F=d}c[E>>2]=p;c[F+12>>2]=p;c[p+8>>2]=F;c[p+12>>2]=d;i=b;return}d=D>>>8;if((d|0)!=0){if(D>>>0>16777215){G=31}else{F=(d+1048320|0)>>>16&8;E=d<<F;d=(E+520192|0)>>>16&4;w=E<<d;E=(w+245760|0)>>>16&2;C=14-(d|F|E)+(w<<E>>>15)|0;G=D>>>(C+7|0)&1|C<<1}}else{G=0}C=21688+(G<<2)|0;c[p+28>>2]=G;c[p+20>>2]=0;c[p+16>>2]=0;E=c[21388>>2]|0;w=1<<G;a:do{if((E&w|0)!=0){F=c[C>>2]|0;if((G|0)==31){H=0}else{H=25-(G>>>1)|0}b:do{if((c[F+4>>2]&-8|0)!=(D|0)){d=D<<H;e=F;while(1){I=e+(d>>>31<<2)+16|0;j=c[I>>2]|0;if((j|0)==0){break}if((c[j+4>>2]&-8|0)==(D|0)){J=j;break b}else{d=d<<1;e=j}}if(I>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[I>>2]=p;c[p+24>>2]=e;c[p+12>>2]=p;c[p+8>>2]=p;break a}}else{J=F}}while(0);F=J+8|0;d=c[F>>2]|0;j=c[21400>>2]|0;if(J>>>0<j>>>0){Hc()}if(d>>>0<j>>>0){Hc()}else{c[d+12>>2]=p;c[F>>2]=p;c[p+8>>2]=d;c[p+12>>2]=J;c[p+24>>2]=0;break}}else{c[21388>>2]=E|w;c[C>>2]=p;c[p+24>>2]=C;c[p+12>>2]=p;c[p+8>>2]=p}}while(0);p=(c[21416>>2]|0)+ -1|0;c[21416>>2]=p;if((p|0)==0){K=21840|0}else{i=b;return}while(1){p=c[K>>2]|0;if((p|0)==0){break}else{K=p+8|0}}c[21416>>2]=-1;i=b;return}function ts(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;do{if((a|0)!=0){if(b>>>0>4294967231){c[(oc()|0)>>2]=12;e=0;break}if(b>>>0<11){f=16}else{f=b+11&-8}g=us(a+ -8|0,f)|0;if((g|0)!=0){e=g+8|0;break}g=rs(b)|0;if((g|0)==0){e=0}else{h=c[a+ -4>>2]|0;j=(h&-8)-((h&3|0)==0?8:4)|0;Ss(g|0,a|0,(j>>>0<b>>>0?j:b)|0)|0;ss(a);e=g}}else{e=rs(b)|0}}while(0);i=d;return e|0}function us(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;e=a+4|0;f=c[e>>2]|0;g=f&-8;h=a+g|0;j=c[21400>>2]|0;if(a>>>0<j>>>0){Hc()}k=f&3;if(!((k|0)!=1&a>>>0<h>>>0)){Hc()}l=a+(g|4)|0;m=c[l>>2]|0;if((m&1|0)==0){Hc()}if((k|0)==0){if(b>>>0<256){n=0;i=d;return n|0}if(!(g>>>0<(b+4|0)>>>0)?!((g-b|0)>>>0>c[21864>>2]<<1>>>0):0){n=a;i=d;return n|0}n=0;i=d;return n|0}if(!(g>>>0<b>>>0)){k=g-b|0;if(!(k>>>0>15)){n=a;i=d;return n|0}c[e>>2]=f&1|b|2;c[a+(b+4)>>2]=k|3;c[l>>2]=c[l>>2]|1;vs(a+b|0,k);n=a;i=d;return n|0}if((h|0)==(c[21408>>2]|0)){k=(c[21396>>2]|0)+g|0;if(!(k>>>0>b>>>0)){n=0;i=d;return n|0}l=k-b|0;c[e>>2]=f&1|b|2;c[a+(b+4)>>2]=l|1;c[21408>>2]=a+b;c[21396>>2]=l;n=a;i=d;return n|0}if((h|0)==(c[21404>>2]|0)){l=(c[21392>>2]|0)+g|0;if(l>>>0<b>>>0){n=0;i=d;return n|0}k=l-b|0;if(k>>>0>15){c[e>>2]=f&1|b|2;c[a+(b+4)>>2]=k|1;c[a+l>>2]=k;o=a+(l+4)|0;c[o>>2]=c[o>>2]&-2;p=a+b|0;q=k}else{c[e>>2]=f&1|l|2;f=a+(l+4)|0;c[f>>2]=c[f>>2]|1;p=0;q=0}c[21392>>2]=q;c[21404>>2]=p;n=a;i=d;return n|0}if((m&2|0)!=0){n=0;i=d;return n|0}p=(m&-8)+g|0;if(p>>>0<b>>>0){n=0;i=d;return n|0}q=p-b|0;f=m>>>3;do{if(!(m>>>0<256)){l=c[a+(g+24)>>2]|0;k=c[a+(g+12)>>2]|0;do{if((k|0)==(h|0)){o=a+(g+20)|0;r=c[o>>2]|0;if((r|0)==0){s=a+(g+16)|0;t=c[s>>2]|0;if((t|0)==0){u=0;break}else{v=t;w=s}}else{v=r;w=o}while(1){o=v+20|0;r=c[o>>2]|0;if((r|0)!=0){v=r;w=o;continue}o=v+16|0;r=c[o>>2]|0;if((r|0)==0){break}else{v=r;w=o}}if(w>>>0<j>>>0){Hc()}else{c[w>>2]=0;u=v;break}}else{o=c[a+(g+8)>>2]|0;if(o>>>0<j>>>0){Hc()}r=o+12|0;if((c[r>>2]|0)!=(h|0)){Hc()}s=k+8|0;if((c[s>>2]|0)==(h|0)){c[r>>2]=k;c[s>>2]=o;u=k;break}else{Hc()}}}while(0);if((l|0)!=0){k=c[a+(g+28)>>2]|0;o=21688+(k<<2)|0;if((h|0)==(c[o>>2]|0)){c[o>>2]=u;if((u|0)==0){c[21388>>2]=c[21388>>2]&~(1<<k);break}}else{if(l>>>0<(c[21400>>2]|0)>>>0){Hc()}k=l+16|0;if((c[k>>2]|0)==(h|0)){c[k>>2]=u}else{c[l+20>>2]=u}if((u|0)==0){break}}if(u>>>0<(c[21400>>2]|0)>>>0){Hc()}c[u+24>>2]=l;k=c[a+(g+16)>>2]|0;do{if((k|0)!=0){if(k>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[u+16>>2]=k;c[k+24>>2]=u;break}}}while(0);k=c[a+(g+20)>>2]|0;if((k|0)!=0){if(k>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[u+20>>2]=k;c[k+24>>2]=u;break}}}}else{k=c[a+(g+8)>>2]|0;l=c[a+(g+12)>>2]|0;o=21424+(f<<1<<2)|0;if((k|0)!=(o|0)){if(k>>>0<j>>>0){Hc()}if((c[k+12>>2]|0)!=(h|0)){Hc()}}if((l|0)==(k|0)){c[5346]=c[5346]&~(1<<f);break}if((l|0)!=(o|0)){if(l>>>0<j>>>0){Hc()}o=l+8|0;if((c[o>>2]|0)==(h|0)){x=o}else{Hc()}}else{x=l+8|0}c[k+12>>2]=l;c[x>>2]=k}}while(0);if(q>>>0<16){c[e>>2]=p|c[e>>2]&1|2;x=a+(p|4)|0;c[x>>2]=c[x>>2]|1;n=a;i=d;return n|0}else{c[e>>2]=c[e>>2]&1|b|2;c[a+(b+4)>>2]=q|3;e=a+(p|4)|0;c[e>>2]=c[e>>2]|1;vs(a+b|0,q);n=a;i=d;return n|0}return 0}function vs(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;d=i;e=a+b|0;f=c[a+4>>2]|0;do{if((f&1|0)==0){g=c[a>>2]|0;if((f&3|0)==0){i=d;return}h=a+(0-g)|0;j=g+b|0;k=c[21400>>2]|0;if(h>>>0<k>>>0){Hc()}if((h|0)==(c[21404>>2]|0)){l=a+(b+4)|0;if((c[l>>2]&3|0)!=3){m=h;n=j;break}c[21392>>2]=j;c[l>>2]=c[l>>2]&-2;c[a+(4-g)>>2]=j|1;c[e>>2]=j;i=d;return}l=g>>>3;if(g>>>0<256){o=c[a+(8-g)>>2]|0;p=c[a+(12-g)>>2]|0;q=21424+(l<<1<<2)|0;if((o|0)!=(q|0)){if(o>>>0<k>>>0){Hc()}if((c[o+12>>2]|0)!=(h|0)){Hc()}}if((p|0)==(o|0)){c[5346]=c[5346]&~(1<<l);m=h;n=j;break}if((p|0)!=(q|0)){if(p>>>0<k>>>0){Hc()}q=p+8|0;if((c[q>>2]|0)==(h|0)){r=q}else{Hc()}}else{r=p+8|0}c[o+12>>2]=p;c[r>>2]=o;m=h;n=j;break}o=c[a+(24-g)>>2]|0;p=c[a+(12-g)>>2]|0;do{if((p|0)==(h|0)){q=16-g|0;l=a+(q+4)|0;s=c[l>>2]|0;if((s|0)==0){t=a+q|0;q=c[t>>2]|0;if((q|0)==0){u=0;break}else{v=q;w=t}}else{v=s;w=l}while(1){l=v+20|0;s=c[l>>2]|0;if((s|0)!=0){v=s;w=l;continue}l=v+16|0;s=c[l>>2]|0;if((s|0)==0){break}else{v=s;w=l}}if(w>>>0<k>>>0){Hc()}else{c[w>>2]=0;u=v;break}}else{l=c[a+(8-g)>>2]|0;if(l>>>0<k>>>0){Hc()}s=l+12|0;if((c[s>>2]|0)!=(h|0)){Hc()}t=p+8|0;if((c[t>>2]|0)==(h|0)){c[s>>2]=p;c[t>>2]=l;u=p;break}else{Hc()}}}while(0);if((o|0)!=0){p=c[a+(28-g)>>2]|0;k=21688+(p<<2)|0;if((h|0)==(c[k>>2]|0)){c[k>>2]=u;if((u|0)==0){c[21388>>2]=c[21388>>2]&~(1<<p);m=h;n=j;break}}else{if(o>>>0<(c[21400>>2]|0)>>>0){Hc()}p=o+16|0;if((c[p>>2]|0)==(h|0)){c[p>>2]=u}else{c[o+20>>2]=u}if((u|0)==0){m=h;n=j;break}}if(u>>>0<(c[21400>>2]|0)>>>0){Hc()}c[u+24>>2]=o;p=16-g|0;k=c[a+p>>2]|0;do{if((k|0)!=0){if(k>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[u+16>>2]=k;c[k+24>>2]=u;break}}}while(0);k=c[a+(p+4)>>2]|0;if((k|0)!=0){if(k>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[u+20>>2]=k;c[k+24>>2]=u;m=h;n=j;break}}else{m=h;n=j}}else{m=h;n=j}}else{m=a;n=b}}while(0);u=c[21400>>2]|0;if(e>>>0<u>>>0){Hc()}v=a+(b+4)|0;w=c[v>>2]|0;if((w&2|0)==0){if((e|0)==(c[21408>>2]|0)){r=(c[21396>>2]|0)+n|0;c[21396>>2]=r;c[21408>>2]=m;c[m+4>>2]=r|1;if((m|0)!=(c[21404>>2]|0)){i=d;return}c[21404>>2]=0;c[21392>>2]=0;i=d;return}if((e|0)==(c[21404>>2]|0)){r=(c[21392>>2]|0)+n|0;c[21392>>2]=r;c[21404>>2]=m;c[m+4>>2]=r|1;c[m+r>>2]=r;i=d;return}r=(w&-8)+n|0;f=w>>>3;do{if(!(w>>>0<256)){k=c[a+(b+24)>>2]|0;g=c[a+(b+12)>>2]|0;do{if((g|0)==(e|0)){o=a+(b+20)|0;l=c[o>>2]|0;if((l|0)==0){t=a+(b+16)|0;s=c[t>>2]|0;if((s|0)==0){x=0;break}else{y=s;z=t}}else{y=l;z=o}while(1){o=y+20|0;l=c[o>>2]|0;if((l|0)!=0){y=l;z=o;continue}o=y+16|0;l=c[o>>2]|0;if((l|0)==0){break}else{y=l;z=o}}if(z>>>0<u>>>0){Hc()}else{c[z>>2]=0;x=y;break}}else{o=c[a+(b+8)>>2]|0;if(o>>>0<u>>>0){Hc()}l=o+12|0;if((c[l>>2]|0)!=(e|0)){Hc()}t=g+8|0;if((c[t>>2]|0)==(e|0)){c[l>>2]=g;c[t>>2]=o;x=g;break}else{Hc()}}}while(0);if((k|0)!=0){g=c[a+(b+28)>>2]|0;j=21688+(g<<2)|0;if((e|0)==(c[j>>2]|0)){c[j>>2]=x;if((x|0)==0){c[21388>>2]=c[21388>>2]&~(1<<g);break}}else{if(k>>>0<(c[21400>>2]|0)>>>0){Hc()}g=k+16|0;if((c[g>>2]|0)==(e|0)){c[g>>2]=x}else{c[k+20>>2]=x}if((x|0)==0){break}}if(x>>>0<(c[21400>>2]|0)>>>0){Hc()}c[x+24>>2]=k;g=c[a+(b+16)>>2]|0;do{if((g|0)!=0){if(g>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[x+16>>2]=g;c[g+24>>2]=x;break}}}while(0);g=c[a+(b+20)>>2]|0;if((g|0)!=0){if(g>>>0<(c[21400>>2]|0)>>>0){Hc()}else{c[x+20>>2]=g;c[g+24>>2]=x;break}}}}else{g=c[a+(b+8)>>2]|0;k=c[a+(b+12)>>2]|0;j=21424+(f<<1<<2)|0;if((g|0)!=(j|0)){if(g>>>0<u>>>0){Hc()}if((c[g+12>>2]|0)!=(e|0)){Hc()}}if((k|0)==(g|0)){c[5346]=c[5346]&~(1<<f);break}if((k|0)!=(j|0)){if(k>>>0<u>>>0){Hc()}j=k+8|0;if((c[j>>2]|0)==(e|0)){A=j}else{Hc()}}else{A=k+8|0}c[g+12>>2]=k;c[A>>2]=g}}while(0);c[m+4>>2]=r|1;c[m+r>>2]=r;if((m|0)==(c[21404>>2]|0)){c[21392>>2]=r;i=d;return}else{B=r}}else{c[v>>2]=w&-2;c[m+4>>2]=n|1;c[m+n>>2]=n;B=n}n=B>>>3;if(B>>>0<256){w=n<<1;v=21424+(w<<2)|0;r=c[5346]|0;A=1<<n;if((r&A|0)!=0){n=21424+(w+2<<2)|0;e=c[n>>2]|0;if(e>>>0<(c[21400>>2]|0)>>>0){Hc()}else{C=n;D=e}}else{c[5346]=r|A;C=21424+(w+2<<2)|0;D=v}c[C>>2]=m;c[D+12>>2]=m;c[m+8>>2]=D;c[m+12>>2]=v;i=d;return}v=B>>>8;if((v|0)!=0){if(B>>>0>16777215){E=31}else{D=(v+1048320|0)>>>16&8;C=v<<D;v=(C+520192|0)>>>16&4;w=C<<v;C=(w+245760|0)>>>16&2;A=14-(v|D|C)+(w<<C>>>15)|0;E=B>>>(A+7|0)&1|A<<1}}else{E=0}A=21688+(E<<2)|0;c[m+28>>2]=E;c[m+20>>2]=0;c[m+16>>2]=0;C=c[21388>>2]|0;w=1<<E;if((C&w|0)==0){c[21388>>2]=C|w;c[A>>2]=m;c[m+24>>2]=A;c[m+12>>2]=m;c[m+8>>2]=m;i=d;return}w=c[A>>2]|0;if((E|0)==31){F=0}else{F=25-(E>>>1)|0}a:do{if((c[w+4>>2]&-8|0)==(B|0)){G=w}else{E=B<<F;A=w;while(1){H=A+(E>>>31<<2)+16|0;C=c[H>>2]|0;if((C|0)==0){break}if((c[C+4>>2]&-8|0)==(B|0)){G=C;break a}else{E=E<<1;A=C}}if(H>>>0<(c[21400>>2]|0)>>>0){Hc()}c[H>>2]=m;c[m+24>>2]=A;c[m+12>>2]=m;c[m+8>>2]=m;i=d;return}}while(0);H=G+8|0;B=c[H>>2]|0;w=c[21400>>2]|0;if(G>>>0<w>>>0){Hc()}if(B>>>0<w>>>0){Hc()}c[B+12>>2]=m;c[H>>2]=m;c[m+8>>2]=B;c[m+12>>2]=G;c[m+24>>2]=0;i=d;return}function ws(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=(a|0)==0?1:a;while(1){e=rs(d)|0;if((e|0)!=0){f=6;break}a=c[5470]|0;c[5470]=a+0;if((a|0)==0){f=5;break}Vd[a&3]()}if((f|0)==5){d=fc(4)|0;c[d>>2]=21896;td(d|0,21944,145)}else if((f|0)==6){i=b;return e|0}return 0}function xs(a){a=a|0;var b=0,c=0;b=i;c=ws(a)|0;i=b;return c|0}function ys(a){a=a|0;var b=0;b=i;if((a|0)!=0){ss(a)}i=b;return}function zs(a){a=a|0;var b=0;b=i;ys(a);i=b;return}function As(a){a=a|0;var b=0;b=i;nb(a|0);ys(a);i=b;return}function Bs(a){a=a|0;var b=0;b=i;nb(a|0);i=b;return}function Cs(a){a=a|0;return 21912}function Ds(){var a=0;a=fc(4)|0;c[a>>2]=21896;td(a|0,21944,145)}function Es(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0.0,P=0,Q=0.0,R=0,S=0,T=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0.0,ba=0,ca=0.0,da=0,ea=0.0,ga=0,ha=0.0,ia=0,ja=0.0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0.0,sa=0,ta=0.0,ua=0,va=0,wa=0,xa=0,ya=0.0,za=0,Aa=0.0,Ba=0.0,Ca=0,Da=0.0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,pc=0.0,qc=0,rc=0,sc=0.0,tc=0.0,uc=0.0,vc=0.0,wc=0.0,xc=0.0,yc=0,zc=0,Ac=0.0,Bc=0,Cc=0.0,Dc=0,Ec=0,Fc=0,Gc=0;g=i;i=i+512|0;h=g;if((e|0)==2){j=53;k=-1074}else if((e|0)==1){j=53;k=-1074}else if((e|0)==0){j=24;k=-149}else{l=0.0;i=g;return+l}e=b+4|0;m=b+100|0;do{n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;o=d[n]|0}else{o=Hs(b)|0}}while((Lc(o|0)|0)!=0);do{if((o|0)==43|(o|0)==45){n=1-(((o|0)==45)<<1)|0;p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;q=d[p]|0;r=n;break}else{q=Hs(b)|0;r=n;break}}else{q=o;r=1}}while(0);o=q;q=0;while(1){if((o|32|0)!=(a[21960+q|0]|0)){s=o;t=q;break}do{if(q>>>0<7){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;u=d[n]|0;break}else{u=Hs(b)|0;break}}else{u=o}}while(0);n=q+1|0;if(n>>>0<8){o=u;q=n}else{s=u;t=n;break}}do{if((t|0)==3){v=23}else if((t|0)!=8){u=(f|0)==0;if(!(t>>>0<4|u)){if((t|0)==8){break}else{v=23;break}}a:do{if((t|0)==0){q=s;o=0;while(1){if((q|32|0)!=(a[21976+o|0]|0)){w=q;x=o;break a}do{if(o>>>0<2){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;A=d[n]|0;break}else{A=Hs(b)|0;break}}else{A=q}}while(0);n=o+1|0;if(n>>>0<3){q=A;o=n}else{w=A;x=n;break}}}else{w=s;x=t}}while(0);if((x|0)==0){do{if((w|0)==48){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;B=d[o]|0}else{B=Hs(b)|0}if((B|32|0)!=120){if((c[m>>2]|0)==0){C=48;break}c[e>>2]=(c[e>>2]|0)+ -1;C=48;break}o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;D=d[o]|0;E=0}else{D=Hs(b)|0;E=0}while(1){if((D|0)==46){v=70;break}else if((D|0)!=48){F=0;G=0;H=0;I=0;K=D;L=E;M=0;N=0;O=1.0;P=0;Q=0.0;break}o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;D=d[o]|0;E=1;continue}else{D=Hs(b)|0;E=1;continue}}b:do{if((v|0)==70){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;R=d[o]|0}else{R=Hs(b)|0}if((R|0)==48){o=-1;q=-1;while(1){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;S=d[n]|0}else{S=Hs(b)|0}if((S|0)!=48){F=0;G=0;H=o;I=q;K=S;L=1;M=1;N=0;O=1.0;P=0;Q=0.0;break b}n=_s(o|0,q|0,-1,-1)|0;o=n;q=J}}else{F=0;G=0;H=0;I=0;K=R;L=E;M=1;N=0;O=1.0;P=0;Q=0.0}}}while(0);c:while(1){q=K+ -48|0;do{if(!(q>>>0<10)){o=K|32;n=(K|0)==46;if(!((o+ -97|0)>>>0<6|n)){T=K;break c}if(n){if((M|0)==0){V=G;W=F;X=G;Y=F;Z=L;_=1;$=N;aa=O;ba=P;ca=Q;break}else{T=46;break c}}else{da=(K|0)>57?o+ -87|0:q;v=84;break}}else{da=q;v=84}}while(0);if((v|0)==84){v=0;do{if(!((F|0)<0|(F|0)==0&G>>>0<8)){if((F|0)<0|(F|0)==0&G>>>0<14){ea=O*.0625;ga=N;ha=ea;ia=P;ja=Q+ea*+(da|0);break}if((da|0)!=0&(N|0)==0){ga=1;ha=O;ia=P;ja=Q+O*.5}else{ga=N;ha=O;ia=P;ja=Q}}else{ga=N;ha=O;ia=da+(P<<4)|0;ja=Q}}while(0);q=_s(G|0,F|0,1,0)|0;V=H;W=I;X=q;Y=J;Z=1;_=M;$=ga;aa=ha;ba=ia;ca=ja}q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;F=Y;G=X;H=V;I=W;K=d[q]|0;L=Z;M=_;N=$;O=aa;P=ba;Q=ca;continue}else{F=Y;G=X;H=V;I=W;K=Hs(b)|0;L=Z;M=_;N=$;O=aa;P=ba;Q=ca;continue}}if((L|0)==0){q=(c[m>>2]|0)==0;if(!q){c[e>>2]=(c[e>>2]|0)+ -1}if(!u){if(!q?(q=c[e>>2]|0,c[e>>2]=q+ -1,(M|0)!=0):0){c[e>>2]=q+ -2}}else{Gs(b,0)}l=+(r|0)*0.0;i=g;return+l}q=(M|0)==0;o=q?G:H;n=q?F:I;if((F|0)<0|(F|0)==0&G>>>0<8){q=G;p=F;ka=P;while(1){la=ka<<4;ma=_s(q|0,p|0,1,0)|0;na=J;if((na|0)<0|(na|0)==0&ma>>>0<8){q=ma;p=na;ka=la}else{oa=la;break}}}else{oa=P}do{if((T|32|0)==112){ka=Fs(b,f)|0;p=J;if((ka|0)==0&(p|0)==-2147483648){if(u){Gs(b,0);l=0.0;i=g;return+l}else{if((c[m>>2]|0)==0){pa=0;qa=0;break}c[e>>2]=(c[e>>2]|0)+ -1;pa=0;qa=0;break}}else{pa=ka;qa=p}}else{if((c[m>>2]|0)==0){pa=0;qa=0}else{c[e>>2]=(c[e>>2]|0)+ -1;pa=0;qa=0}}}while(0);p=Vs(o|0,n|0,2)|0;ka=_s(p|0,J|0,-32,-1)|0;p=_s(ka|0,J|0,pa|0,qa|0)|0;ka=J;if((oa|0)==0){l=+(r|0)*0.0;i=g;return+l}if((ka|0)>0|(ka|0)==0&p>>>0>(0-k|0)>>>0){c[(oc()|0)>>2]=34;l=+(r|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+l}q=k+ -106|0;la=((q|0)<0)<<31>>31;if((ka|0)<(la|0)|(ka|0)==(la|0)&p>>>0<q>>>0){c[(oc()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+l}if((oa|0)>-1){q=p;la=ka;na=oa;ea=Q;while(1){ma=na<<1;if(!(ea>=.5)){ra=ea;sa=ma}else{ra=ea+-1.0;sa=ma|1}ta=ea+ra;ma=_s(q|0,la|0,-1,-1)|0;ua=J;if((sa|0)>-1){q=ma;la=ua;na=sa;ea=ta}else{va=ma;wa=ua;xa=sa;ya=ta;break}}}else{va=p;wa=ka;xa=oa;ya=Q}na=Zs(32,0,k|0,((k|0)<0)<<31>>31|0)|0;la=_s(va|0,wa|0,na|0,J|0)|0;na=J;if(0>(na|0)|0==(na|0)&j>>>0>la>>>0){za=(la|0)<0?0:la}else{za=j}if((za|0)<53){ea=+(r|0);ta=+rd(+(+Is(1.0,84-za|0)),+ea);if((za|0)<32&ya!=0.0){la=xa&1;Aa=ea;Ba=ta;Ca=(la^1)+xa|0;Da=(la|0)==0?0.0:ya}else{Aa=ea;Ba=ta;Ca=xa;Da=ya}}else{Aa=+(r|0);Ba=0.0;Ca=xa;Da=ya}ta=Aa*Da+(Ba+Aa*+(Ca>>>0))-Ba;if(!(ta!=0.0)){c[(oc()|0)>>2]=34}l=+Js(ta,va);i=g;return+l}else{C=w}}while(0);la=k+j|0;na=0-la|0;q=C;n=0;while(1){if((q|0)==46){v=139;break}else if((q|0)!=48){Ea=q;Fa=0;Ga=0;Ha=n;Ia=0;break}o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;q=d[o]|0;n=1;continue}else{q=Hs(b)|0;n=1;continue}}d:do{if((v|0)==139){q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;Ja=d[q]|0}else{Ja=Hs(b)|0}if((Ja|0)==48){q=-1;o=-1;while(1){ua=c[e>>2]|0;if(ua>>>0<(c[m>>2]|0)>>>0){c[e>>2]=ua+1;Ka=d[ua]|0}else{Ka=Hs(b)|0}if((Ka|0)!=48){Ea=Ka;Fa=q;Ga=o;Ha=1;Ia=1;break d}ua=_s(q|0,o|0,-1,-1)|0;q=ua;o=J}}else{Ea=Ja;Fa=0;Ga=0;Ha=n;Ia=1}}}while(0);c[h>>2]=0;n=Ea+ -48|0;o=(Ea|0)==46;e:do{if(n>>>0<10|o){q=h+496|0;ka=Ea;p=0;ua=0;ma=o;La=n;Ma=Fa;Na=Ga;Oa=Ha;Pa=Ia;Qa=0;Ra=0;Sa=0;while(1){do{if(ma){if((Pa|0)==0){Ta=p;Ua=ua;Va=p;Wa=ua;Xa=Oa;Ya=1;Za=Qa;_a=Ra;$a=Sa}else{ab=ka;bb=Ma;cb=Na;db=p;eb=ua;fb=Oa;gb=Qa;hb=Ra;ib=Sa;break e}}else{jb=_s(p|0,ua|0,1,0)|0;kb=J;lb=(ka|0)!=48;if((Ra|0)>=125){if(!lb){Ta=Ma;Ua=Na;Va=jb;Wa=kb;Xa=Oa;Ya=Pa;Za=Qa;_a=Ra;$a=Sa;break}c[q>>2]=c[q>>2]|1;Ta=Ma;Ua=Na;Va=jb;Wa=kb;Xa=Oa;Ya=Pa;Za=Qa;_a=Ra;$a=Sa;break}mb=h+(Ra<<2)|0;if((Qa|0)==0){nb=La}else{nb=ka+ -48+((c[mb>>2]|0)*10|0)|0}c[mb>>2]=nb;mb=Qa+1|0;ob=(mb|0)==9;Ta=Ma;Ua=Na;Va=jb;Wa=kb;Xa=1;Ya=Pa;Za=ob?0:mb;_a=(ob&1)+Ra|0;$a=lb?jb:Sa}}while(0);jb=c[e>>2]|0;if(jb>>>0<(c[m>>2]|0)>>>0){c[e>>2]=jb+1;pb=d[jb]|0}else{pb=Hs(b)|0}jb=pb+ -48|0;lb=(pb|0)==46;if(jb>>>0<10|lb){ka=pb;p=Va;ua=Wa;ma=lb;La=jb;Ma=Ta;Na=Ua;Oa=Xa;Pa=Ya;Qa=Za;Ra=_a;Sa=$a}else{qb=pb;rb=Va;sb=Ta;tb=Wa;ub=Ua;vb=Xa;wb=Ya;xb=Za;yb=_a;zb=$a;v=162;break}}}else{qb=Ea;rb=0;sb=Fa;tb=0;ub=Ga;vb=Ha;wb=Ia;xb=0;yb=0;zb=0;v=162}}while(0);if((v|0)==162){n=(wb|0)==0;ab=qb;bb=n?rb:sb;cb=n?tb:ub;db=rb;eb=tb;fb=vb;gb=xb;hb=yb;ib=zb}n=(fb|0)!=0;if(n?(ab|32|0)==101:0){o=Fs(b,f)|0;Sa=J;do{if((o|0)==0&(Sa|0)==-2147483648){if(u){Gs(b,0);l=0.0;i=g;return+l}else{if((c[m>>2]|0)==0){Ab=0;Bb=0;break}c[e>>2]=(c[e>>2]|0)+ -1;Ab=0;Bb=0;break}}else{Ab=o;Bb=Sa}}while(0);Sa=_s(Ab|0,Bb|0,bb|0,cb|0)|0;Cb=Sa;Db=J}else{if((ab|0)>-1?(c[m>>2]|0)!=0:0){c[e>>2]=(c[e>>2]|0)+ -1;Cb=bb;Db=cb}else{Cb=bb;Db=cb}}if(!n){c[(oc()|0)>>2]=22;Gs(b,0);l=0.0;i=g;return+l}Sa=c[h>>2]|0;if((Sa|0)==0){l=+(r|0)*0.0;i=g;return+l}do{if((Cb|0)==(db|0)&(Db|0)==(eb|0)&((eb|0)<0|(eb|0)==0&db>>>0<10)){if(!(j>>>0>30)?(Sa>>>j|0)!=0:0){break}l=+(r|0)*+(Sa>>>0);i=g;return+l}}while(0);Sa=(k|0)/-2|0;n=((Sa|0)<0)<<31>>31;if((Db|0)>(n|0)|(Db|0)==(n|0)&Cb>>>0>Sa>>>0){c[(oc()|0)>>2]=34;l=+(r|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+l}Sa=k+ -106|0;n=((Sa|0)<0)<<31>>31;if((Db|0)<(n|0)|(Db|0)==(n|0)&Cb>>>0<Sa>>>0){c[(oc()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+l}if((gb|0)==0){Eb=hb}else{if((gb|0)<9){Sa=h+(hb<<2)|0;n=c[Sa>>2]|0;o=gb;do{n=n*10|0;o=o+1|0}while((o|0)!=9);c[Sa>>2]=n}Eb=hb+1|0}do{if((ib|0)<9?(ib|0)<=(Cb|0)&(Cb|0)<18:0){if((Cb|0)==9){l=+(r|0)*+((c[h>>2]|0)>>>0);i=g;return+l}if((Cb|0)<9){l=+(r|0)*+((c[h>>2]|0)>>>0)/+(c[21992+(8-Cb<<2)>>2]|0);i=g;return+l}o=j+27+(fa(Cb,-3)|0)|0;Ra=c[h>>2]|0;if((o|0)<=30?(Ra>>>o|0)!=0:0){break}l=+(r|0)*+(Ra>>>0)*+(c[21992+(Cb+ -10<<2)>>2]|0);i=g;return+l}}while(0);n=(Cb|0)%9|0;if((n|0)==0){Fb=0;Gb=0;Hb=Cb;Ib=Eb}else{Sa=(Cb|0)>-1?n:n+9|0;n=c[21992+(8-Sa<<2)>>2]|0;if((Eb|0)!=0){Ra=1e9/(n|0)|0;o=0;Qa=0;Pa=0;Oa=Cb;while(1){Na=h+(Pa<<2)|0;Ma=c[Na>>2]|0;La=((Ma>>>0)/(n>>>0)|0)+Qa|0;c[Na>>2]=La;Jb=fa((Ma>>>0)%(n>>>0)|0,Ra)|0;Ma=Pa+1|0;if((Pa|0)==(o|0)&(La|0)==0){Kb=Ma&127;Lb=Oa+ -9|0}else{Kb=o;Lb=Oa}if((Ma|0)==(Eb|0)){break}else{o=Kb;Qa=Jb;Pa=Ma;Oa=Lb}}if((Jb|0)==0){Mb=Kb;Nb=Lb;Ob=Eb}else{c[h+(Eb<<2)>>2]=Jb;Mb=Kb;Nb=Lb;Ob=Eb+1|0}}else{Mb=0;Nb=Cb;Ob=0}Fb=Mb;Gb=0;Hb=9-Sa+Nb|0;Ib=Ob}f:while(1){Oa=h+(Fb<<2)|0;if((Hb|0)<18){Pa=Gb;Qa=Ib;while(1){o=0;Ra=Qa+127|0;n=Qa;while(1){Ma=Ra&127;La=h+(Ma<<2)|0;Na=Vs(c[La>>2]|0,0,29)|0;ma=_s(Na|0,J|0,o|0,0)|0;Na=J;if(Na>>>0>0|(Na|0)==0&ma>>>0>1e9){ua=ht(ma|0,Na|0,1e9,0)|0;p=it(ma|0,Na|0,1e9,0)|0;Pb=p;Qb=ua}else{Pb=ma;Qb=0}c[La>>2]=Pb;La=(Ma|0)==(Fb|0);if((Ma|0)!=(n+127&127|0)|La){Rb=n}else{Rb=(Pb|0)==0?Ma:n}if(La){break}else{o=Qb;Ra=Ma+ -1|0;n=Rb}}n=Pa+ -29|0;if((Qb|0)==0){Pa=n;Qa=Rb}else{Sb=n;Tb=Qb;Ub=Rb;break}}}else{if((Hb|0)==18){Vb=Gb;Wb=Ib}else{Xb=Fb;Yb=Gb;Zb=Hb;_b=Ib;break}while(1){if(!((c[Oa>>2]|0)>>>0<9007199)){Xb=Fb;Yb=Vb;Zb=18;_b=Wb;break f}Qa=0;Pa=Wb+127|0;n=Wb;while(1){Ra=Pa&127;o=h+(Ra<<2)|0;Ma=Vs(c[o>>2]|0,0,29)|0;La=_s(Ma|0,J|0,Qa|0,0)|0;Ma=J;if(Ma>>>0>0|(Ma|0)==0&La>>>0>1e9){ma=ht(La|0,Ma|0,1e9,0)|0;ua=it(La|0,Ma|0,1e9,0)|0;$b=ua;ac=ma}else{$b=La;ac=0}c[o>>2]=$b;o=(Ra|0)==(Fb|0);if((Ra|0)!=(n+127&127|0)|o){bc=n}else{bc=($b|0)==0?Ra:n}if(o){break}else{Qa=ac;Pa=Ra+ -1|0;n=bc}}n=Vb+ -29|0;if((ac|0)==0){Vb=n;Wb=bc}else{Sb=n;Tb=ac;Ub=bc;break}}}Oa=Fb+127&127;if((Oa|0)==(Ub|0)){n=Ub+127&127;Pa=h+((Ub+126&127)<<2)|0;c[Pa>>2]=c[Pa>>2]|c[h+(n<<2)>>2];dc=n}else{dc=Ub}c[h+(Oa<<2)>>2]=Tb;Fb=Oa;Gb=Sb;Hb=Hb+9|0;Ib=dc}g:while(1){ec=_b+1&127;Sa=h+((_b+127&127)<<2)|0;Oa=Xb;n=Yb;Pa=Zb;while(1){Qa=(Pa|0)==18;Ra=(Pa|0)>27?9:1;fc=Oa;gc=n;while(1){o=0;while(1){La=o+fc&127;if((La|0)==(_b|0)){hc=2;break}ma=c[h+(La<<2)>>2]|0;La=c[21984+(o<<2)>>2]|0;if(ma>>>0<La>>>0){hc=2;break}ua=o+1|0;if(ma>>>0>La>>>0){hc=o;break}if((ua|0)<2){o=ua}else{hc=ua;break}}if((hc|0)==2&Qa){break g}ic=Ra+gc|0;if((fc|0)==(_b|0)){fc=_b;gc=ic}else{break}}Qa=(1<<Ra)+ -1|0;o=1e9>>>Ra;jc=fc;kc=0;ua=fc;lc=Pa;do{La=h+(ua<<2)|0;ma=c[La>>2]|0;Ma=(ma>>>Ra)+kc|0;c[La>>2]=Ma;kc=fa(ma&Qa,o)|0;ma=(ua|0)==(jc|0)&(Ma|0)==0;ua=ua+1&127;lc=ma?lc+ -9|0:lc;jc=ma?ua:jc}while((ua|0)!=(_b|0));if((kc|0)==0){Oa=jc;n=ic;Pa=lc;continue}if((ec|0)!=(jc|0)){break}c[Sa>>2]=c[Sa>>2]|1;Oa=jc;n=ic;Pa=lc}c[h+(_b<<2)>>2]=kc;Xb=jc;Yb=ic;Zb=lc;_b=ec}Pa=fc&127;if((Pa|0)==(_b|0)){c[h+(ec+ -1<<2)>>2]=0;mc=ec}else{mc=_b}ta=+((c[h+(Pa<<2)>>2]|0)>>>0);Pa=fc+1&127;if((Pa|0)==(mc|0)){n=mc+1&127;c[h+(n+ -1<<2)>>2]=0;nc=n}else{nc=mc}ea=+(r|0);pc=ea*(ta*1.0e9+ +((c[h+(Pa<<2)>>2]|0)>>>0));Pa=gc+53|0;n=Pa-k|0;if((n|0)<(j|0)){qc=(n|0)<0?0:n;rc=1}else{qc=j;rc=0}if((qc|0)<53){ta=+rd(+(+Is(1.0,105-qc|0)),+pc);sc=+cc(+pc,+(+Is(1.0,53-qc|0)));tc=ta;uc=sc;vc=ta+(pc-sc)}else{tc=0.0;uc=0.0;vc=pc}Oa=fc+2&127;if((Oa|0)!=(nc|0)){Sa=c[h+(Oa<<2)>>2]|0;do{if(!(Sa>>>0<5e8)){if(Sa>>>0>5e8){wc=ea*.75+uc;break}if((fc+3&127|0)==(nc|0)){wc=ea*.5+uc;break}else{wc=ea*.75+uc;break}}else{if((Sa|0)==0?(fc+3&127|0)==(nc|0):0){wc=uc;break}wc=ea*.25+uc}}while(0);if((53-qc|0)>1?!(+cc(+wc,1.0)!=0.0):0){xc=wc+1.0}else{xc=wc}}else{xc=uc}ea=vc+xc-tc;do{if((Pa&2147483647|0)>(-2-la|0)){if(!(+U(+ea)>=9007199254740992.0)){yc=rc;zc=gc;Ac=ea}else{yc=(rc|0)!=0&(qc|0)==(n|0)?0:rc;zc=gc+1|0;Ac=ea*.5}if((zc+50|0)<=(na|0)?!((yc|0)!=0&xc!=0.0):0){Bc=zc;Cc=Ac;break}c[(oc()|0)>>2]=34;Bc=zc;Cc=Ac}else{Bc=gc;Cc=ea}}while(0);l=+Js(Cc,Bc);i=g;return+l}else if((x|0)==3){na=c[e>>2]|0;if(na>>>0<(c[m>>2]|0)>>>0){c[e>>2]=na+1;Dc=d[na]|0}else{Dc=Hs(b)|0}if((Dc|0)==40){Ec=1}else{if((c[m>>2]|0)==0){l=y;i=g;return+l}c[e>>2]=(c[e>>2]|0)+ -1;l=y;i=g;return+l}while(1){na=c[e>>2]|0;if(na>>>0<(c[m>>2]|0)>>>0){c[e>>2]=na+1;Fc=d[na]|0}else{Fc=Hs(b)|0}if(!((Fc+ -48|0)>>>0<10|(Fc+ -65|0)>>>0<26)?!((Fc+ -97|0)>>>0<26|(Fc|0)==95):0){break}Ec=Ec+1|0}if((Fc|0)==41){l=y;i=g;return+l}na=(c[m>>2]|0)==0;if(!na){c[e>>2]=(c[e>>2]|0)+ -1}if(u){c[(oc()|0)>>2]=22;Gs(b,0);l=0.0;i=g;return+l}if((Ec|0)==0|na){l=y;i=g;return+l}else{Gc=Ec}while(1){na=Gc+ -1|0;c[e>>2]=(c[e>>2]|0)+ -1;if((na|0)==0){l=y;break}else{Gc=na}}i=g;return+l}else{if((c[m>>2]|0)!=0){c[e>>2]=(c[e>>2]|0)+ -1}c[(oc()|0)>>2]=22;Gs(b,0);l=0.0;i=g;return+l}}}while(0);if((v|0)==23){v=(c[m>>2]|0)==0;if(!v){c[e>>2]=(c[e>>2]|0)+ -1}if(!(t>>>0<4|(f|0)==0|v)){v=t;do{c[e>>2]=(c[e>>2]|0)+ -1;v=v+ -1|0}while(v>>>0>3)}}l=+(r|0)*z;i=g;return+l}function Fs(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;f=a+4|0;g=c[f>>2]|0;h=a+100|0;if(g>>>0<(c[h>>2]|0)>>>0){c[f>>2]=g+1;j=d[g]|0}else{j=Hs(a)|0}if((j|0)==43|(j|0)==45){g=(j|0)==45|0;k=c[f>>2]|0;if(k>>>0<(c[h>>2]|0)>>>0){c[f>>2]=k+1;l=d[k]|0}else{l=Hs(a)|0}if(!((l+ -48|0)>>>0<10|(b|0)==0)?(c[h>>2]|0)!=0:0){c[f>>2]=(c[f>>2]|0)+ -1;m=l;n=g}else{m=l;n=g}}else{m=j;n=0}if((m+ -48|0)>>>0>9){if((c[h>>2]|0)==0){o=-2147483648;p=0;J=o;i=e;return p|0}c[f>>2]=(c[f>>2]|0)+ -1;o=-2147483648;p=0;J=o;i=e;return p|0}else{q=m;r=0}while(1){s=q+ -48+r|0;m=c[f>>2]|0;if(m>>>0<(c[h>>2]|0)>>>0){c[f>>2]=m+1;t=d[m]|0}else{t=Hs(a)|0}if(!((t+ -48|0)>>>0<10&(s|0)<214748364)){break}q=t;r=s*10|0}r=((s|0)<0)<<31>>31;if((t+ -48|0)>>>0<10){q=s;m=r;j=t;while(1){g=gt(q|0,m|0,10,0)|0;l=J;b=_s(j|0,((j|0)<0)<<31>>31|0,-48,-1)|0;k=_s(b|0,J|0,g|0,l|0)|0;l=J;g=c[f>>2]|0;if(g>>>0<(c[h>>2]|0)>>>0){c[f>>2]=g+1;u=d[g]|0}else{u=Hs(a)|0}if((u+ -48|0)>>>0<10&((l|0)<21474836|(l|0)==21474836&k>>>0<2061584302)){q=k;m=l;j=u}else{v=k;w=l;x=u;break}}}else{v=s;w=r;x=t}if((x+ -48|0)>>>0<10){do{x=c[f>>2]|0;if(x>>>0<(c[h>>2]|0)>>>0){c[f>>2]=x+1;y=d[x]|0}else{y=Hs(a)|0}}while((y+ -48|0)>>>0<10)}if((c[h>>2]|0)!=0){c[f>>2]=(c[f>>2]|0)+ -1}f=(n|0)!=0;n=Zs(0,0,v|0,w|0)|0;o=f?J:w;p=f?n:v;J=o;i=e;return p|0}function Gs(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;c[a+104>>2]=b;e=c[a+8>>2]|0;f=c[a+4>>2]|0;g=e-f|0;c[a+108>>2]=g;if((b|0)!=0&(g|0)>(b|0)){c[a+100>>2]=f+b;i=d;return}else{c[a+100>>2]=e;i=d;return}}function Hs(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;f=b+104|0;g=c[f>>2]|0;if(!((g|0)!=0?(c[b+108>>2]|0)>=(g|0):0)){h=3}if((h|0)==3?(h=Ls(b)|0,(h|0)>=0):0){g=c[f>>2]|0;f=c[b+8>>2]|0;if((g|0)!=0?(j=c[b+4>>2]|0,k=g-(c[b+108>>2]|0)+ -1|0,(f-j|0)>(k|0)):0){c[b+100>>2]=j+k}else{c[b+100>>2]=f}k=c[b+4>>2]|0;if((f|0)!=0){j=b+108|0;c[j>>2]=f+1-k+(c[j>>2]|0)}j=k+ -1|0;if((d[j]|0|0)==(h|0)){l=h;i=e;return l|0}a[j]=h;l=h;i=e;return l|0}c[b+100>>2]=0;l=-1;i=e;return l|0}function Is(a,b){a=+a;b=b|0;var d=0,e=0.0,f=0,g=0,j=0,l=0.0;d=i;if((b|0)>1023){e=a*8.98846567431158e+307;f=b+ -1023|0;if((f|0)>1023){g=b+ -2046|0;j=(g|0)>1023?1023:g;l=e*8.98846567431158e+307}else{j=f;l=e}}else{if((b|0)<-1022){e=a*2.2250738585072014e-308;f=b+1022|0;if((f|0)<-1022){g=b+2044|0;j=(g|0)<-1022?-1022:g;l=e*2.2250738585072014e-308}else{j=f;l=e}}else{j=b;l=a}}b=Vs(j+1023|0,0,52)|0;j=J;c[k>>2]=b;c[k+4>>2]=j;a=l*+h[k>>3];i=d;return+a}function Js(a,b){a=+a;b=b|0;var c=0,d=0.0;c=i;d=+Is(a,b);i=c;return+d}function Ks(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=b+74|0;f=a[e]|0;a[e]=f+255|f;f=b+20|0;e=b+44|0;if((c[f>>2]|0)>>>0>(c[e>>2]|0)>>>0){Kd[c[b+36>>2]&31](b,0,0)|0}c[b+16>>2]=0;c[b+28>>2]=0;c[f>>2]=0;f=c[b>>2]|0;if((f&20|0)==0){g=c[e>>2]|0;c[b+8>>2]=g;c[b+4>>2]=g;h=0;i=d;return h|0}if((f&4|0)==0){h=-1;i=d;return h|0}c[b>>2]=f|32;h=-1;i=d;return h|0}function Ls(a){a=a|0;var b=0,e=0,f=0;b=i;i=i+16|0;e=b;if((c[a+8>>2]|0)==0?(Ks(a)|0)!=0:0){f=-1}else{if((Kd[c[a+32>>2]&31](a,e,1)|0)==1){f=d[e]|0}else{f=-1}}i=b;return f|0}function Ms(a){a=a|0;var b=0,c=0.0;b=i;c=+Ns(a,0);i=b;return+c}function Ns(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0.0,j=0,k=0;d=i;i=i+112|0;e=d;f=e+0|0;g=f+112|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));f=e+4|0;c[f>>2]=a;g=e+8|0;c[g>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;Gs(e,0);h=+Es(e,1,1);j=(c[f>>2]|0)-(c[g>>2]|0)+(c[e+108>>2]|0)|0;if((b|0)==0){i=d;return+h}if((j|0)==0){k=a}else{k=a+j|0}c[b>>2]=k;i=d;return+h}function Os(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0.0,j=0,k=0;d=i;i=i+112|0;e=d;f=e+0|0;g=f+112|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));f=e+4|0;c[f>>2]=a;g=e+8|0;c[g>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;Gs(e,0);h=+Es(e,2,1);j=(c[f>>2]|0)-(c[g>>2]|0)+(c[e+108>>2]|0)|0;if((b|0)==0){i=d;return+h}if((j|0)==0){k=a}else{k=a+j|0}c[b>>2]=k;i=d;return+h}function Ps(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;a:do{if((d|0)==0){f=0}else{g=d;h=b;j=c;while(1){k=a[h]|0;l=a[j]|0;if(!(k<<24>>24==l<<24>>24)){break}m=g+ -1|0;if((m|0)==0){f=0;break a}else{g=m;h=h+1|0;j=j+1|0}}f=(k&255)-(l&255)|0}}while(0);i=e;return f|0}function Qs(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;e=a[b]|0;f=a[c]|0;if(e<<24>>24!=f<<24>>24|e<<24>>24==0|f<<24>>24==0){g=e;h=f;j=g&255;k=h&255;l=j-k|0;i=d;return l|0}else{m=b;n=c}while(1){c=m+1|0;b=n+1|0;f=a[c]|0;e=a[b]|0;if(f<<24>>24!=e<<24>>24|f<<24>>24==0|e<<24>>24==0){g=f;h=e;break}else{m=c;n=b}}j=g&255;k=h&255;l=j-k|0;i=d;return l|0}function Rs(){c[618]=p;c[2474]=p;c[2500]=p;c[5258]=p;c[5488]=p}function Ss(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return nd(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function Ts(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}b=e}else{Ss(b,c,d)|0}return b|0}function Us(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;i=f&~3;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b]=d;b=b+1|0}}while((b|0)<(i|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}return b-e|0}function Vs(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}J=a<<c-32;return 0}function Ws(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function Xs(a){a=a|0;var b=0;b=(fa(c[a>>2]|0,31010991)|0)+1735287159&2147483647;c[a>>2]=b;return b|0}function Ys(){return Xs(o)|0}function Zs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return(J=e,a-c>>>0|0)|0}function _s(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return(J=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function $s(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}J=0;return b>>>c-32|0}function at(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}J=(b|0)<0?-1:0;return b>>c-32|0}function bt(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function ct(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function dt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=fa(d,c)|0;f=a>>>16;a=(e>>>16)+(fa(d,f)|0)|0;d=b>>>16;b=fa(d,c)|0;return(J=(a>>>16)+(fa(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function et(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=Zs(e^a,f^b,e,f)|0;b=J;a=g^e;e=h^f;f=Zs((jt(i,b,Zs(g^c,h^d,g,h)|0,J,0)|0)^a,J^e,a,e)|0;return f|0}function ft(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=Zs(h^a,j^b,h,j)|0;b=J;jt(m,b,Zs(k^d,l^e,k,l)|0,J,g)|0;l=Zs(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=J;i=f;return(J=j,l)|0}function gt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=dt(e,a)|0;f=J;return(J=(fa(b,a)|0)+(fa(d,e)|0)+f|f&0,c|0|0)|0}function ht(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=jt(a,b,c,d,0)|0;return e|0}function it(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;jt(a,b,d,e,g)|0;i=f;return(J=c[g+4>>2]|0,c[g>>2]|0)|0}function jt(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0;g=a;h=b;i=h;j=d;k=e;l=k;if((i|0)==0){m=(f|0)!=0;if((l|0)==0){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return(J=n,o)|0}else{if(!m){n=0;o=0;return(J=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return(J=n,o)|0}}m=(l|0)==0;do{if((j|0)!=0){if(!m){p=(bt(l|0)|0)-(bt(i|0)|0)|0;if(p>>>0<=31){q=p+1|0;r=31-p|0;s=p-31>>31;t=q;u=g>>>(q>>>0)&s|i<<r;v=i>>>(q>>>0)&s;w=0;x=g<<r;break}if((f|0)==0){n=0;o=0;return(J=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(J=n,o)|0}r=j-1|0;if((r&j|0)!=0){s=(bt(j|0)|0)+33-(bt(i|0)|0)|0;q=64-s|0;p=32-s|0;y=p>>31;z=s-32|0;A=z>>31;t=s;u=p-1>>31&i>>>(z>>>0)|(i<<p|g>>>(s>>>0))&A;v=A&i>>>(s>>>0);w=g<<q&y;x=(i<<q|g>>>(z>>>0))&y|g<<p&s-33>>31;break}if((f|0)!=0){c[f>>2]=r&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return(J=n,o)|0}else{r=ct(j|0)|0;n=i>>>(r>>>0)|0;o=i<<32-r|g>>>(r>>>0)|0;return(J=n,o)|0}}else{if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return(J=n,o)|0}if((g|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return(J=n,o)|0}r=l-1|0;if((r&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=r&i|b&0}n=0;o=i>>>((ct(l|0)|0)>>>0);return(J=n,o)|0}r=(bt(l|0)|0)-(bt(i|0)|0)|0;if(r>>>0<=30){s=r+1|0;p=31-r|0;t=s;u=i<<p|g>>>(s>>>0);v=i>>>(s>>>0);w=0;x=g<<p;break}if((f|0)==0){n=0;o=0;return(J=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(J=n,o)|0}}while(0);if((t|0)==0){B=x;C=w;D=v;E=u;F=0;G=0}else{b=d|0|0;d=k|e&0;e=_s(b,d,-1,-1)|0;k=J;h=x;x=w;w=v;v=u;u=t;t=0;while(1){H=x>>>31|h<<1;I=t|x<<1;a=v<<1|h>>>31|0;g=v>>>31|w<<1|0;Zs(e,k,a,g)|0;i=J;l=i>>31|((i|0)<0?-1:0)<<1;K=l&1;L=Zs(a,g,l&b,(((i|0)<0?-1:0)>>31|((i|0)<0?-1:0)<<1)&d)|0;M=J;i=u-1|0;if((i|0)==0){break}else{h=H;x=I;w=M;v=L;u=i;t=K}}B=H;C=I;D=M;E=L;F=0;G=K}K=C;C=0;if((f|0)!=0){c[f>>2]=E;c[f+4>>2]=D}n=(K|0)>>>31|(B|C)<<1|(C<<1|K>>>31)&0|F;o=(K<<1|0>>>31)&-2|G;return(J=n,o)|0}function kt(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Bd[a&3](b|0,c|0,d|0,e|0,f|0)}function lt(a,b,c){a=a|0;b=b|0;c=+c;Cd[a&7](b|0,+c)}function mt(a,b){a=a|0;b=b|0;Dd[a&255](b|0)}function nt(a,b,c){a=a|0;b=b|0;c=c|0;Ed[a&63](b|0,c|0)}function ot(a,b){a=a|0;b=b|0;return Fd[a&127](b|0)|0}function pt(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;return Gd[a&1](b|0,+c,+d)|0}function qt(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Hd[a&15](b|0,c|0,d|0,e|0,f|0)|0}function rt(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=+d;e=e|0;Id[a&15](b|0,+c,+d,e|0)}function st(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;Jd[a&15](b|0,+c,+d)}function tt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Kd[a&31](b|0,c|0,d|0)|0}function ut(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;Ld[a&7](b|0,c|0,d|0,e|0,f|0,+g)}function vt(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;Md[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function wt(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Nd[a&31](b|0,c|0,d|0,e|0,f|0,g|0)}function xt(a,b){a=a|0;b=b|0;return+Od[a&7](b|0)}function yt(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;Pd[a&63](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function zt(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;Qd[a&3](b|0,c|0,d|0,e|0,f|0,g|0,+h)}function At(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Rd[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function Bt(a,b,c){a=a|0;b=b|0;c=c|0;return Sd[a&31](b|0,c|0)|0}function Ct(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Td[a&7](b|0,c|0,d|0,e|0)|0}function Dt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ud[a&3](b|0,c|0,d|0)}function Et(a){a=a|0;Vd[a&3]()}function Ft(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return Wd[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function Gt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Xd[a&15](b|0,c|0,d|0,e|0)}function Ht(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ga(0)}function It(a,b){a=a|0;b=+b;ga(1)}function Jt(a){a=a|0;ga(2)}function Kt(a,b){a=a|0;b=b|0;ga(3)}function Lt(a){a=a|0;ga(4);return 0}function Mt(a,b,c){a=a|0;b=+b;c=+c;ga(5);return 0}function Nt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ga(6);return 0}function Ot(a,b,c,d){a=a|0;b=+b;c=+c;d=d|0;ga(7)}function Pt(a,b,c){a=a|0;b=+b;c=+c;ga(8)}function Qt(a,b,c){a=a|0;b=b|0;c=c|0;ga(9);return 0}function Rt(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ga(10)}function St(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ga(11)}function Tt(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ga(12)}function Ut(a){a=a|0;ga(13);return 0.0}function Vt(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ga(14)}function Wt(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;ga(15)}function Xt(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ga(16)}function Yt(a,b){a=a|0;b=b|0;ga(17);return 0}function Zt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ga(18);return 0}function _t(a,b,c){a=a|0;b=b|0;c=c|0;ga(19)}function $t(){ga(20)}function au(){Mc()}function bu(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ga(21);return 0}function cu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ga(22)}




// EMSCRIPTEN_END_FUNCS
var Bd=[Ht,ns,ms,ls];var Cd=[It,Bh,Ch,Fh,Gh,It,It,It];var Dd=[Jt,se,re,De,Ce,Ie,He,Ne,Me,Ve,Ue,_e,Ze,ef,df,zf,Af,ih,hh,nh,mh,rh,qh,Jh,Ih,di,ei,fi,gi,Xk,Wk,Zk,Yk,hi,ii,zi,Ai,Bi,Ci,Di,Ei,Xi,Yi,cj,dj,jj,kj,qj,rj,Dj,Cj,Ij,Hj,Kj,Tj,Sj,vk,uk,Jk,Ik,dl,cl,fl,el,il,hl,kl,jl,pl,ol,rl,ql,xl,wl,rk,yl,vl,zl,Bl,Al,Hp,Hl,Gl,Ml,Ll,jm,im,Nm,Mm,$m,_m,on,nn,Bn,An,Nn,Mn,Qn,Pn,Un,Tn,eo,co,po,oo,Ao,zo,Lo,Ko,Vo,Uo,ap,$o,gp,fp,mp,lp,rp,qp,Ap,zp,Xp,Wp,vp,mq,Tq,Sq,Vq,Uq,Cl,Gp,Jp,eq,uq,Fq,Qq,Rq,_r,Zr,as,ds,bs,cs,es,fs,Bs,As,jf,kf,Of,mg,ng,wg,xg,Rg,Vg,Xh,Nh,pi,si,Wi,Ip,Br,No,ss,Ir,Hr,Gr,Fr,Er,Dr,Zj,jk,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt];var Ed=[Kt,vh,wh,xh,hf,Sf,jg,kg,lg,kh,wk,Zi,ej,lj,sj,Kk,Xn,Yn,Zn,_n,ao,bo,ho,io,jo,ko,mo,no,so,to,uo,vo,xo,yo,Do,Eo,Fo,Go,Io,Jo,pp,up,_q,ar,cr,$q,br,dr,bg,cg,dg,eg,Qg,Kt,Kt,Kt,Kt,Kt,Kt,Kt,Kt,Kt,Kt,Kt];var Fd=[Lt,uh,Bf,Tf,Ak,Bk,li,Ek,_i,Pk,Rk,Sk,Ok,fj,gj,mj,Dk,tj,uj,Ej,Jj,tl,pn,er,gr,ir,or,qr,kr,mr,Cn,fr,hr,jr,pr,rr,lr,nr,Vn,Wn,$n,fo,go,lo,qo,ro,wo,Bo,Co,Ho,qq,rq,tq,Wq,Yq,Xq,Zq,iq,jq,lq,Aq,Bq,Eq,Lq,Mq,Pq,$r,Cs,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt];var Gd=[Mt,yh];var Hd=[Nt,Dl,Il,dq,pq,sq,Vp,hq,kq,zq,Cq,Kq,Nq,Nt,Nt,Nt];var Id=[Ot,ue,Fe,Ke,Pe,Xe,af,gf,jh,oh,th,Ot,Ot,Ot,Ot,Ot];var Jd=[Pt,te,Ee,Je,Oe,We,$e,ff,sh,Pt,Pt,Pt,Pt,Pt,Pt,Pt];var Kd=[Qt,xk,Ck,Gk,Lk,Qk,$i,Uk,nj,Nj,Oj,Fl,Kl,np,sp,Zp,$p,cq,Kp,Pp,Rp,Up,gs,Qt,Qt,Qt,Qt,Qt,Qt,Qt,Qt,Qt];var Ld=[Rt,Vm,Ym,hn,kn,Rt,Rt,Rt];var Md=[St,On,Rn,Mo,Qo,Wo,Yo,St];var Nd=[Tt,ji,Mk,yk,Om,Pm,Tm,Zm,an,bn,fn,ln,op,tp,qs,ps,os,Tt,Tt,Tt,Tt,Tt,Tt,Tt,Tt,Tt,Tt,Tt,Tt,Tt,Tt,Tt];var Od=[Ut,zh,Ah,Dh,Eh,Ut,Ut,Ut];var Pd=[Vt,Nl,Pl,Rl,Tl,Vl,Xl,Zl,$l,bm,dm,fm,km,mm,om,qm,sm,um,wm,ym,Am,Cm,Em,Sm,Um,en,gn,qn,rn,sn,tn,un,Dn,En,Fn,Gn,Hn,ep,kp,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt,Vt];var Qd=[Wt,bp,hp,Wt];var Rd=[Xt,vn,In,Xt];var Sd=[Yt,mi,ni,Tk,aj,hj,Vk,Fk,oj,vj,Hk,Yp,_p,aq,Op,Qp,Sp,Ui,Yt,Yt,Yt,Yt,Yt,Yt,Yt,Yt,Yt,Yt,Yt,Yt,Yt,Yt];var Td=[Zt,wi,bq,Lp,Mp,Np,Tp,Zt];var Ud=[_t,Mj,ul,Wh];var Vd=[$t,au,fg,$t];var Wd=[bu,nq,oq,fq,gq,vq,xq,Gq,Iq,bu,bu,bu,bu,bu,bu,bu];var Xd=[cu,ki,Nk,zk,El,Jl,hs,is,js,cu,cu,cu,cu,cu,cu,cu];return{_strlen:Ws,_free:ss,_main:gg,_rand_r:Xs,_realloc:ts,_i64Add:_s,_memmove:Ts,_memset:Us,_malloc:rs,_memcpy:Ss,_bitshift64Shl:Vs,_i64Subtract:Zs,_rand:Ys,__GLOBAL__I_a:Nf,__GLOBAL__I_a143:ag,__GLOBAL__I_a181:vg,__GLOBAL__I_a219:Mg,__GLOBAL__I_a284:fh,__GLOBAL__I_a394:Yh,__GLOBAL__I_a25:ri,__GLOBAL__I_a471:ui,__GLOBAL__I_a651:xj,runPostSets:Rs,stackAlloc:Yd,stackSave:Zd,stackRestore:_d,setThrew:$d,setTempRet0:ce,setTempRet1:de,setTempRet2:ee,setTempRet3:fe,setTempRet4:ge,setTempRet5:he,setTempRet6:ie,setTempRet7:je,setTempRet8:ke,setTempRet9:le,dynCall_viiiii:kt,dynCall_vid:lt,dynCall_vi:mt,dynCall_vii:nt,dynCall_ii:ot,dynCall_iidd:pt,dynCall_iiiiii:qt,dynCall_viddi:rt,dynCall_vidd:st,dynCall_iiii:tt,dynCall_viiiiid:ut,dynCall_viiiiiiii:vt,dynCall_viiiiii:wt,dynCall_di:xt,dynCall_viiiiiii:yt,dynCall_viiiiiid:zt,dynCall_viiiiiiiii:At,dynCall_iii:Bt,dynCall_iiiii:Ct,dynCall_viii:Dt,dynCall_v:Et,dynCall_iiiiiiiii:Ft,dynCall_viiii:Gt}})


// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_viiiii": invoke_viiiii, "invoke_vid": invoke_vid, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_iidd": invoke_iidd, "invoke_iiiiii": invoke_iiiiii, "invoke_viddi": invoke_viddi, "invoke_vidd": invoke_vidd, "invoke_iiii": invoke_iiii, "invoke_viiiiid": invoke_viiiiid, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_di": invoke_di, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_iii": invoke_iii, "invoke_iiiii": invoke_iiiii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viiii": invoke_viiii, "_glUseProgram": _glUseProgram, "_fabs": _fabs, "_vsscanf": _vsscanf, "__ZSt9terminatev": __ZSt9terminatev, "_glUniformMatrix4fv": _glUniformMatrix4fv, "___cxa_guard_acquire": ___cxa_guard_acquire, "_SDL_RWFromFile": _SDL_RWFromFile, "_sscanf": _sscanf, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___ctype_toupper_loc": ___ctype_toupper_loc, "_glBindBuffer": _glBindBuffer, "_glGetShaderInfoLog": _glGetShaderInfoLog, "__addDays": __addDays, "_catgets": _catgets, "_sbrk": _sbrk, "_glBlendFunc": _glBlendFunc, "_newlocale": _newlocale, "_glDisableVertexAttribArray": _glDisableVertexAttribArray, "___cxa_begin_catch": ___cxa_begin_catch, "_glCreateShader": _glCreateShader, "__parseInt64": __parseInt64, "_cos": _cos, "_fileno": _fileno, "_glfwTerminate": _glfwTerminate, "_fread": _fread, "_puts": _puts, "_IMG_Load": _IMG_Load, "_glUniform3f": _glUniform3f, "_glfwInit": _glfwInit, "_write": _write, "__isLeapYear": __isLeapYear, "_glGenBuffers": _glGenBuffers, "_glShaderSource": _glShaderSource, "__ZNSt9exceptionD2Ev": __ZNSt9exceptionD2Ev, "___cxa_does_inherit": ___cxa_does_inherit, "_strtoll_l": _strtoll_l, "___cxa_rethrow": ___cxa_rethrow, "_catclose": _catclose, "_glEnableVertexAttribArray": _glEnableVertexAttribArray, "_glVertexAttribPointer": _glVertexAttribPointer, "_send": _send, "___cxa_is_number_type": ___cxa_is_number_type, "_glfwOpenWindow": _glfwOpenWindow, "___cxa_free_exception": ___cxa_free_exception, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_isxdigit_l": _isxdigit_l, "_glDrawElements": _glDrawElements, "___cxa_guard_release": ___cxa_guard_release, "_SDL_LockSurface": _SDL_LockSurface, "_strerror_r": _strerror_r, "___setErrNo": ___setErrNo, "_glDeleteTextures": _glDeleteTextures, "_glDepthFunc": _glDepthFunc, "_isdigit_l": _isdigit_l, "___resumeException": ___resumeException, "_freelocale": _freelocale, "_glTexImage2D": _glTexImage2D, "_glEnable": _glEnable, "_printf": _printf, "_glGenTextures": _glGenTextures, "_sprintf": _sprintf, "_vasprintf": _vasprintf, "_glAttachShader": _glAttachShader, "_vsnprintf": _vsnprintf, "_glCreateProgram": _glCreateProgram, "_strtoull_l": _strtoull_l, "_read": _read, "_glfwOpenWindowHint": _glfwOpenWindowHint, "_fwrite": _fwrite, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "_glfwSetMouseButtonCallback": _glfwSetMouseButtonCallback, "_catopen": _catopen, "_exit": _exit, "_glfwPollEvents": _glfwPollEvents, "___ctype_b_loc": ___ctype_b_loc, "_fmod": _fmod, "_sin": _sin, "_fabsf": _fabsf, "___cxa_allocate_exception": ___cxa_allocate_exception, "_ceilf": _ceilf, "_strtoll": _strtoll, "_glfwSetMousePosCallback": _glfwSetMousePosCallback, "_pwrite": _pwrite, "_glClearColor": _glClearColor, "_uselocale": _uselocale, "_glBindTexture": _glBindTexture, "_snprintf": _snprintf, "___errno_location": ___errno_location, "___cxa_end_catch": ___cxa_end_catch, "_glfwSetCharCallback": _glfwSetCharCallback, "_SDL_FreeSurface": _SDL_FreeSurface, "_glUniform1i": _glUniform1i, "_strtoull": _strtoull, "_strftime": _strftime, "_glDrawArrays": _glDrawArrays, "_sinf": _sinf, "_isxdigit": _isxdigit, "_floorf": _floorf, "_sqrtf": _sqrtf, "_glActiveTexture": _glActiveTexture, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_recv": _recv, "_fgetc": _fgetc, "_glCompileShader": _glCompileShader, "_sysconf": _sysconf, "__getFloat": __getFloat, "_abort": _abort, "_glDeleteBuffers": _glDeleteBuffers, "_glBufferData": _glBufferData, "_emscripten_async_wget_data": _emscripten_async_wget_data, "_isspace": _isspace, "___cxa_pure_virtual": ___cxa_pure_virtual, "_pthread_cond_wait": _pthread_cond_wait, "_glDeleteShader": _glDeleteShader, "_SDL_GetTicks": _SDL_GetTicks, "_cosf": _cosf, "_glfwGetTime": _glfwGetTime, "_ungetc": _ungetc, "_glLinkProgram": _glLinkProgram, "_SDL_FreeRW": _SDL_FreeRW, "_strftime_l": _strftime_l, "_fprintf": _fprintf, "__reallyNegative": __reallyNegative, "_glUniform4f": _glUniform4f, "_glGetUniformLocation": _glGetUniformLocation, "_glTexParameteri": _glTexParameteri, "_glClear": _glClear, "_asprintf": _asprintf, "__exit": __exit, "_IMG_Load_RW": _IMG_Load_RW, "__arraySum": __arraySum, "_emscripten_async_prepare_data": _emscripten_async_prepare_data, "_glGetShaderiv": _glGetShaderiv, "___ctype_tolower_loc": ___ctype_tolower_loc, "_atexit": _atexit, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pread": _pread, "_mkport": _mkport, "_fflush": _fflush, "_glfwSwapBuffers": _glfwSwapBuffers, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_emscripten_set_main_loop": _emscripten_set_main_loop, "__scanString": __scanString, "_glDepthMask": _glDepthMask, "_copysign": _copysign, "_fputc": _fputc, "___cxa_throw": ___cxa_throw, "_glfwSetKeyCallback": _glfwSetKeyCallback, "_glDisable": _glDisable, "_isdigit": _isdigit, "_strerror": _strerror, "__formatString": __formatString, "_fputs": _fputs, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "___rand_seed": ___rand_seed, "NaN": NaN, "Infinity": Infinity, "__ZTISt9exception": __ZTISt9exception, "___dso_handle": ___dso_handle, "_stderr": _stderr, "_stdin": _stdin, "_stdout": _stdout }, buffer);
var _strlen = Module["_strlen"] = asm["_strlen"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _rand_r = Module["_rand_r"] = asm["_rand_r"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _rand = Module["_rand"] = asm["_rand"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var __GLOBAL__I_a143 = Module["__GLOBAL__I_a143"] = asm["__GLOBAL__I_a143"];
var __GLOBAL__I_a181 = Module["__GLOBAL__I_a181"] = asm["__GLOBAL__I_a181"];
var __GLOBAL__I_a219 = Module["__GLOBAL__I_a219"] = asm["__GLOBAL__I_a219"];
var __GLOBAL__I_a284 = Module["__GLOBAL__I_a284"] = asm["__GLOBAL__I_a284"];
var __GLOBAL__I_a394 = Module["__GLOBAL__I_a394"] = asm["__GLOBAL__I_a394"];
var __GLOBAL__I_a25 = Module["__GLOBAL__I_a25"] = asm["__GLOBAL__I_a25"];
var __GLOBAL__I_a471 = Module["__GLOBAL__I_a471"] = asm["__GLOBAL__I_a471"];
var __GLOBAL__I_a651 = Module["__GLOBAL__I_a651"] = asm["__GLOBAL__I_a651"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iidd = Module["dynCall_iidd"] = asm["dynCall_iidd"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viddi = Module["dynCall_viddi"] = asm["dynCall_viddi"];
var dynCall_vidd = Module["dynCall_vidd"] = asm["dynCall_vidd"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  throw 'abort() at ' + stackTrace() + extra;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






